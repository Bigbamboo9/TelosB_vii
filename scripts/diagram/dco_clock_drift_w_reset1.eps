%!PS-Adobe-2.0 EPSF-2.0
%%Title: diagram/dco_clock_drift.eps
%%Creator: gnuplot 5.0 patchlevel 3
%%CreationDate: Sun Mar 20 22:09:09 2016
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Level3 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -73 def
/dl1 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 5.1 (Oct 2015)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Classic Line colors (version 5.0)
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default dash patterns (version 5.0)
/LTB {BL [] LCb DL} def
/LTw {PL [] 1 setgray} def
/LTb {PL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [2 dl1 3 dl2] LC1 DL} def
/LT2 {PL [1 dl1 1.5 dl2] LC2 DL} def
/LT3 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC3 DL} def
/LT4 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [4 dl1 2 dl2] LC5 DL} def
/LT6 {PL [1.5 dl1 1.5 dl2 1.5 dl1 1.5 dl2 1.5 dl1 6 dl2] LC6 DL} def
/LT7 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC8 DL} def
/SL {[] 0 setdash} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
dup 2 lt
	{/InterpretLevel1 true def
	 /InterpretLevel3 false def}
	{/InterpretLevel1 Level1 def
	 2 gt
	    {/InterpretLevel3 Level3 def}
	    {/InterpretLevel3 false def}
	 ifelse }
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
%
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {textshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     textshow 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (diagram/dco_clock_drift.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 5.0 patchlevel 3)
  /Author (ZhichaoCao)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sun Mar 20 22:09:09 2016)
  /DOCINFO pdfmark
end
} ifelse
%
% Support for boxed text - Ethan A Merritt May 2005
%
/InitTextBox { userdict /TBy2 3 -1 roll put userdict /TBx2 3 -1 roll put
           userdict /TBy1 3 -1 roll put userdict /TBx1 3 -1 roll put
	   /Boxing true def } def
/ExtendTextBox { Boxing
    { gsave dup false charpath pathbbox
      dup TBy2 gt {userdict /TBy2 3 -1 roll put} {pop} ifelse
      dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
      dup TBy1 lt {userdict /TBy1 3 -1 roll put} {pop} ifelse
      dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse
      grestore } if } def
/PopTextBox { newpath TBx1 TBxmargin sub TBy1 TBymargin sub M
               TBx1 TBxmargin sub TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy1 TBymargin sub L closepath } def
/DrawTextBox { PopTextBox stroke /Boxing false def} def
/FillTextBox { gsave PopTextBox 1 1 1 setrgbcolor fill grestore /Boxing false def} def
0 0 0 0 InitTextBox
/TBxmargin 20 def
/TBymargin 20 def
/Boxing false def
/textshow { ExtendTextBox Gshow } def
%
% redundant definitions for compatibility with prologue.ps older than 5.0.2
/LTB {BL [] LCb DL} def
/LTb {PL [] LCb DL} def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(ArialMT) findfont 220 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 7200.00 5040.00 BoxColFill} if
1.000 UL
LTb
LCb setrgbcolor
1078 440 M
63 0 V
5662 0 R
-63 0 V
stroke
946 440 M
[ [(ArialMT) 220.0 0.0 true true 0 ( 125)]
] -73.3 MRshow
1.000 UL
LTb
LCb setrgbcolor
1078 1307 M
63 0 V
5662 0 R
-63 0 V
stroke
946 1307 M
[ [(ArialMT) 220.0 0.0 true true 0 ( 126)]
] -73.3 MRshow
1.000 UL
LTb
LCb setrgbcolor
1078 2174 M
63 0 V
5662 0 R
-63 0 V
stroke
946 2174 M
[ [(ArialMT) 220.0 0.0 true true 0 ( 127)]
] -73.3 MRshow
1.000 UL
LTb
LCb setrgbcolor
1078 3041 M
63 0 V
5662 0 R
-63 0 V
stroke
946 3041 M
[ [(ArialMT) 220.0 0.0 true true 0 ( 128)]
] -73.3 MRshow
1.000 UL
LTb
LCb setrgbcolor
1078 3908 M
63 0 V
5662 0 R
-63 0 V
stroke
946 3908 M
[ [(ArialMT) 220.0 0.0 true true 0 ( 129)]
] -73.3 MRshow
1.000 UL
LTb
LCb setrgbcolor
1078 4775 M
63 0 V
5662 0 R
-63 0 V
stroke
946 4775 M
[ [(ArialMT) 220.0 0.0 true true 0 ( 130)]
] -73.3 MRshow
1.000 UL
LTb
LCb setrgbcolor
1078 440 M
0 63 V
0 4272 R
0 -63 V
stroke
1078 220 M
[ [(ArialMT) 220.0 0.0 true true 0 ( 0)]
] -73.3 MCshow
1.000 UL
LTb
LCb setrgbcolor
1794 440 M
0 63 V
0 4272 R
0 -63 V
stroke
1794 220 M
[ [(ArialMT) 220.0 0.0 true true 0 ( 100)]
] -73.3 MCshow
1.000 UL
LTb
LCb setrgbcolor
2509 440 M
0 63 V
0 4272 R
0 -63 V
stroke
2509 220 M
[ [(ArialMT) 220.0 0.0 true true 0 ( 200)]
] -73.3 MCshow
1.000 UL
LTb
LCb setrgbcolor
3225 440 M
0 63 V
0 4272 R
0 -63 V
stroke
3225 220 M
[ [(ArialMT) 220.0 0.0 true true 0 ( 300)]
] -73.3 MCshow
1.000 UL
LTb
LCb setrgbcolor
3941 440 M
0 63 V
0 4272 R
0 -63 V
stroke
3941 220 M
[ [(ArialMT) 220.0 0.0 true true 0 ( 400)]
] -73.3 MCshow
1.000 UL
LTb
LCb setrgbcolor
4656 440 M
0 63 V
0 4272 R
0 -63 V
stroke
4656 220 M
[ [(ArialMT) 220.0 0.0 true true 0 ( 500)]
] -73.3 MCshow
1.000 UL
LTb
LCb setrgbcolor
5372 440 M
0 63 V
0 4272 R
0 -63 V
stroke
5372 220 M
[ [(ArialMT) 220.0 0.0 true true 0 ( 600)]
] -73.3 MCshow
1.000 UL
LTb
LCb setrgbcolor
6087 440 M
0 63 V
0 4272 R
0 -63 V
stroke
6087 220 M
[ [(ArialMT) 220.0 0.0 true true 0 ( 700)]
] -73.3 MCshow
1.000 UL
LTb
LCb setrgbcolor
6803 440 M
0 63 V
0 4272 R
0 -63 V
stroke
6803 220 M
[ [(ArialMT) 220.0 0.0 true true 0 ( 800)]
] -73.3 MCshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
1078 4775 N
0 -4335 V
5725 0 V
0 4335 V
-5725 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
LCb setrgbcolor
176 2607 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(ArialMT) 220.0 0.0 true true 0 (Drift Factor)]
] -73.3 MCshow
grestore
LTb
% Begin plot #1
0.900 UP
1.000 UL
LTb
0.58 0.00 0.83 C /ArialMT findfont 220 scalefont setfont
/vshift -73 def
1078 2928 Box
1085 2966 Box
1092 2928 Box
1099 2896 Box
1107 2853 Box
1114 2890 Box
1121 2853 Box
1128 2853 Box
1135 2853 Box
1142 2853 Box
1150 2815 Box
1157 2777 Box
1164 2777 Box
1171 2777 Box
1178 2739 Box
1185 2739 Box
1193 2702 Box
1200 2702 Box
1207 3079 Box
1214 3116 Box
1221 3079 Box
1228 3041 Box
1235 3041 Box
1243 3041 Box
1250 3079 Box
1257 3003 Box
1264 2626 Box
1271 2626 Box
1278 2589 Box
1286 2966 Box
1293 3003 Box
1300 2966 Box
1307 2966 Box
1314 2551 Box
1321 2551 Box
1328 2928 Box
1336 2928 Box
1343 2928 Box
1350 2928 Box
1357 2928 Box
1364 2928 Box
1371 2890 Box
1379 2890 Box
1386 2890 Box
1393 2890 Box
1400 2853 Box
1407 2853 Box
1414 2853 Box
1422 2815 Box
1429 2853 Box
1436 2815 Box
1443 2853 Box
1450 2815 Box
1457 2815 Box
1464 2788 Box
1472 2777 Box
1479 3154 Box
1486 3154 Box
1493 3154 Box
1500 3154 Box
1507 3154 Box
1515 2739 Box
1522 2739 Box
1529 2739 Box
1536 2739 Box
1543 3079 Box
1550 3154 Box
1557 3079 Box
1565 2702 Box
1572 2664 Box
1579 2702 Box
1593 2702 Box
1600 3041 Box
1608 3079 Box
1615 3079 Box
1622 3041 Box
1629 3041 Box
1636 2589 Box
1643 2626 Box
1651 3003 Box
1658 3003 Box
1665 3041 Box
1672 3003 Box
1679 3003 Box
1686 2966 Box
1693 3003 Box
1701 3003 Box
1708 2966 Box
1715 3003 Box
1722 2966 Box
1729 2966 Box
1736 2966 Box
1744 2966 Box
1751 2928 Box
1758 2928 Box
1765 2966 Box
1772 2928 Box
1779 2890 Box
1786 2928 Box
1794 2890 Box
1801 2890 Box
1808 2928 Box
1815 2890 Box
1822 2890 Box
1829 2890 Box
1837 2890 Box
1844 2853 Box
1851 2890 Box
1858 2890 Box
1865 2853 Box
1872 2853 Box
1880 2853 Box
1887 2853 Box
1894 2853 Box
1901 2824 Box
1908 2815 Box
1915 2815 Box
1922 2853 Box
1930 2853 Box
1937 2815 Box
1944 2777 Box
1951 2815 Box
1958 2815 Box
1965 2815 Box
1973 2815 Box
1980 2777 Box
1987 2777 Box
1994 2815 Box
2001 2777 Box
2008 2777 Box
2015 2777 Box
2023 2777 Box
2030 2739 Box
2037 2739 Box
2044 2777 Box
2051 2777 Box
2058 3116 Box
2066 3154 Box
2073 3116 Box
2080 3116 Box
2087 2739 Box
2094 2702 Box
2101 3116 Box
2109 3041 Box
2116 3079 Box
2123 3116 Box
2130 3079 Box
2137 3116 Box
2144 3116 Box
2151 3079 Box
2159 2702 Box
2166 2702 Box
2173 2702 Box
2180 2664 Box
2187 2702 Box
2194 2702 Box
2202 2702 Box
2209 2664 Box
2216 2664 Box
2223 2664 Box
2230 2664 Box
2237 2664 Box
2244 2664 Box
2252 2664 Box
2259 3041 Box
2266 2626 Box
2273 2626 Box
2280 2626 Box
2287 3041 Box
2295 3003 Box
2302 3041 Box
2309 2626 Box
2316 2589 Box
2323 2664 Box
2330 3003 Box
2338 3003 Box
2345 3003 Box
2352 2966 Box
2359 2966 Box
2366 3003 Box
2373 3003 Box
2380 3003 Box
2388 3003 Box
2395 2589 Box
2402 2589 Box
2409 2589 Box
2416 2589 Box
2423 2966 Box
2431 2966 Box
2438 2966 Box
2445 2966 Box
2452 2966 Box
2459 2966 Box
2466 2928 Box
2473 2966 Box
2481 2966 Box
2488 2551 Box
2495 2551 Box
2502 2928 Box
2509 2928 Box
2516 2928 Box
2524 2928 Box
2531 2928 Box
2538 2928 Box
2545 2928 Box
2552 2928 Box
2559 2890 Box
2567 2890 Box
2574 2928 Box
2581 2928 Box
2588 2890 Box
2595 2928 Box
2602 2890 Box
2609 2928 Box
2617 2890 Box
2624 2890 Box
2631 2928 Box
2638 2890 Box
2645 2896 Box
2652 2853 Box
2660 2890 Box
2667 2890 Box
2674 2853 Box
2681 2890 Box
2688 2890 Box
2695 2890 Box
2702 2853 Box
2710 2890 Box
2717 2890 Box
2724 2860 Box
2731 2853 Box
2738 2853 Box
2745 2853 Box
2753 2853 Box
2760 2853 Box
2767 2853 Box
2774 2853 Box
2781 2890 Box
2788 2853 Box
2796 2890 Box
2803 2853 Box
2810 3229 Box
2817 3267 Box
2824 2815 Box
2831 2853 Box
2838 2853 Box
2846 2853 Box
2853 2815 Box
2860 2853 Box
2867 2824 Box
2874 2853 Box
2881 2853 Box
2889 2853 Box
2896 2853 Box
2903 2815 Box
2910 2815 Box
2917 2815 Box
2924 2815 Box
2931 2815 Box
2939 3229 Box
2946 3192 Box
2953 3192 Box
2960 3192 Box
2967 3229 Box
2974 2777 Box
2982 2815 Box
2989 2815 Box
2996 2815 Box
3003 3192 Box
3010 3192 Box
3017 2777 Box
3025 2815 Box
3032 2815 Box
3039 2777 Box
3046 2815 Box
3053 2777 Box
3060 2777 Box
3067 2777 Box
3075 2777 Box
3082 2777 Box
3089 2777 Box
3096 2777 Box
3103 2777 Box
3110 2777 Box
3118 2815 Box
3125 2777 Box
3132 2777 Box
3139 2777 Box
3146 2777 Box
3153 3154 Box
3160 3192 Box
3168 3154 Box
3175 3154 Box
3182 3192 Box
3189 3154 Box
3196 3116 Box
3203 3154 Box
3211 3154 Box
3218 3154 Box
3225 2739 Box
3232 2777 Box
3239 2739 Box
3246 2739 Box
3254 3154 Box
3261 3116 Box
3268 3154 Box
3275 3154 Box
3282 3116 Box
3289 3154 Box
3296 2739 Box
3304 2777 Box
3311 2777 Box
3318 2777 Box
3325 2739 Box
3332 2739 Box
3339 2777 Box
3347 2739 Box
3354 2739 Box
3361 2739 Box
3368 2777 Box
3375 3116 Box
3382 3116 Box
3389 3154 Box
3397 3154 Box
3404 3116 Box
3411 2739 Box
3418 2739 Box
3425 3079 Box
3432 3116 Box
3440 3154 Box
3447 3116 Box
3454 2702 Box
3461 3079 Box
3468 3154 Box
3475 3154 Box
3483 3079 Box
3490 3079 Box
3497 3116 Box
3504 3079 Box
3511 2702 Box
3518 3116 Box
3525 3116 Box
3533 2702 Box
3540 3079 Box
3547 3041 Box
3554 3079 Box
3561 3079 Box
3568 3079 Box
3576 3079 Box
3583 3116 Box
3590 3116 Box
3597 2664 Box
3604 3079 Box
3611 3116 Box
3618 3079 Box
3626 3116 Box
3633 3116 Box
3640 3079 Box
3647 3079 Box
3654 2702 Box
3661 3079 Box
3669 3116 Box
3676 3079 Box
3683 3079 Box
3690 3041 Box
3697 3116 Box
3704 3116 Box
3712 3113 Box
3719 3079 Box
3726 3079 Box
3733 3079 Box
3740 3079 Box
3747 3079 Box
3754 3116 Box
3762 3116 Box
3769 3079 Box
3776 3079 Box
3783 3079 Box
3790 2664 Box
3797 2702 Box
3805 2664 Box
3812 2664 Box
3819 3041 Box
3826 3116 Box
3833 3116 Box
3840 2664 Box
3847 2664 Box
3855 2664 Box
3862 2702 Box
3869 2664 Box
3876 2702 Box
3883 2702 Box
3890 2664 Box
3898 2702 Box
3905 2702 Box
3912 2664 Box
3919 3041 Box
3926 3079 Box
3933 3079 Box
3941 3116 Box
3948 3079 Box
3955 3079 Box
3962 3116 Box
3969 3079 Box
3976 3116 Box
3983 3079 Box
3991 3079 Box
3998 2664 Box
4005 2664 Box
4012 3079 Box
4019 3079 Box
4026 3116 Box
4034 3079 Box
4041 3079 Box
4048 3113 Box
4055 3079 Box
4062 3116 Box
4069 3116 Box
4076 3079 Box
4084 3079 Box
4091 3079 Box
4098 3079 Box
4105 3079 Box
4112 2664 Box
4119 2664 Box
4127 2702 Box
4134 2664 Box
4141 3041 Box
4148 3077 Box
4155 3079 Box
4162 3116 Box
4170 3116 Box
4177 3079 Box
4184 3077 Box
4191 3079 Box
4198 2664 Box
4205 2702 Box
4212 2664 Box
4220 2664 Box
4227 2702 Box
4234 3079 Box
4241 3116 Box
4248 3079 Box
4255 3079 Box
4263 3041 Box
4270 2664 Box
4277 3041 Box
4284 3079 Box
4291 3079 Box
4298 2664 Box
4305 2702 Box
4313 2664 Box
4320 2702 Box
4327 2626 Box
4334 2664 Box
4341 2664 Box
4348 3041 Box
4356 3079 Box
4363 2664 Box
4370 2664 Box
4377 2664 Box
4384 2664 Box
4391 3041 Box
4399 3041 Box
4406 3079 Box
4413 3079 Box
4420 2664 Box
4427 2664 Box
4434 2702 Box
4441 2626 Box
4449 2664 Box
4456 2664 Box
4463 2626 Box
4470 2626 Box
4477 2626 Box
4484 2664 Box
4492 2664 Box
4499 3003 Box
4506 3041 Box
4513 2626 Box
4520 2626 Box
4527 2626 Box
4534 3003 Box
4542 3041 Box
4549 3041 Box
4556 2626 Box
4563 2626 Box
4570 3003 Box
4577 3041 Box
4585 3041 Box
4592 2589 Box
4599 2626 Box
4606 2664 Box
4613 2664 Box
4620 2626 Box
4628 2626 Box
4635 3041 Box
4642 2626 Box
4649 3003 Box
4656 3041 Box
4663 3003 Box
4670 3041 Box
4678 3003 Box
4685 3003 Box
4692 3003 Box
4699 3041 Box
4706 3003 Box
4713 3005 Box
4721 3003 Box
4728 3041 Box
4735 3041 Box
4742 3003 Box
4749 3003 Box
4756 3005 Box
4763 3041 Box
4771 3003 Box
4778 3003 Box
4785 2626 Box
4792 2589 Box
4799 3003 Box
4806 3003 Box
4814 3003 Box
4821 2966 Box
4828 3003 Box
4835 3003 Box
4842 3003 Box
4849 3003 Box
4857 3003 Box
4864 3003 Box
4871 2966 Box
4878 3003 Box
4885 3003 Box
4892 3003 Box
4899 3003 Box
4907 2966 Box
4914 2966 Box
4921 2589 Box
4928 2626 Box
4935 2966 Box
4942 3003 Box
4950 2966 Box
4957 3003 Box
4964 2589 Box
4971 2626 Box
4978 3003 Box
4985 2966 Box
4992 3003 Box
5000 3005 Box
5007 3003 Box
5014 3003 Box
5021 2589 Box
5028 2966 Box
5035 2966 Box
5043 3003 Box
5050 2966 Box
5057 2966 Box
5064 3003 Box
5071 3003 Box
5078 3003 Box
5086 2966 Box
5093 2966 Box
5100 2928 Box
5107 2966 Box
5114 2966 Box
5121 2966 Box
5128 2966 Box
5136 2966 Box
5143 2589 Box
5150 2589 Box
5157 2966 Box
5164 2966 Box
5171 2966 Box
5179 2966 Box
5186 2966 Box
5193 2551 Box
5200 2589 Box
5207 2551 Box
5214 2551 Box
5221 2966 Box
5229 2966 Box
5236 2966 Box
5243 2966 Box
5250 2966 Box
5257 2966 Box
5264 2589 Box
5272 2966 Box
5279 2551 Box
5286 2589 Box
5293 2589 Box
5300 2589 Box
5307 2966 Box
5315 2966 Box
5322 2966 Box
5329 2551 Box
5336 2551 Box
5343 2966 Box
5350 2928 Box
5357 2966 Box
5365 2966 Box
5372 2966 Box
5379 2966 Box
5386 2966 Box
5393 2928 Box
5400 2928 Box
5408 2966 Box
5415 2928 Box
5422 2933 Box
5429 2928 Box
5436 2928 Box
5443 2928 Box
5450 2966 Box
5458 2966 Box
5465 2928 Box
5472 2966 Box
5479 2928 Box
5486 2966 Box
5493 2966 Box
5501 2928 Box
5508 2966 Box
5515 2966 Box
5522 2928 Box
5529 2928 Box
5536 2928 Box
5544 2928 Box
5551 2928 Box
5558 2928 Box
5565 2928 Box
5572 2928 Box
5579 2928 Box
5586 2966 Box
5594 2928 Box
5601 2928 Box
5608 2928 Box
5615 2928 Box
5622 2928 Box
5629 2551 Box
5637 2928 Box
5644 2928 Box
5651 2928 Box
5658 2928 Box
5665 2890 Box
5672 2928 Box
5679 2928 Box
5687 2928 Box
5694 2928 Box
5701 2928 Box
5708 2928 Box
5715 2928 Box
5722 2933 Box
5730 2928 Box
5737 2928 Box
5744 2928 Box
5751 2928 Box
5758 2928 Box
5765 2928 Box
5773 2928 Box
5780 2928 Box
5787 2928 Box
5794 2928 Box
5801 2928 Box
5808 2928 Box
5815 2928 Box
5823 2928 Box
5830 2928 Box
5837 2890 Box
5844 2928 Box
5851 2928 Box
5858 2928 Box
5866 2966 Box
5873 2890 Box
5880 2966 Box
5887 2928 Box
5894 2928 Box
5901 2928 Box
5908 2890 Box
5916 2928 Box
5923 2928 Box
5930 2928 Box
5937 2551 Box
5944 2551 Box
5951 2928 Box
5959 2928 Box
5966 2928 Box
5973 2928 Box
5980 2928 Box
5987 2928 Box
5994 2890 Box
6002 2928 Box
6009 2890 Box
6016 2890 Box
6023 2890 Box
6030 2928 Box
6037 2928 Box
6044 2928 Box
6052 2966 Box
6059 2928 Box
6066 2928 Box
6073 2928 Box
6080 2928 Box
6087 2928 Box
6095 2890 Box
6102 2928 Box
6109 2928 Box
6116 2890 Box
6123 2928 Box
6130 2890 Box
6137 2928 Box
6145 2928 Box
6152 2928 Box
6159 2928 Box
6166 2966 Box
6173 2928 Box
6180 2928 Box
6188 2928 Box
6195 2928 Box
6202 2966 Box
6209 2928 Box
6216 2966 Box
% End plot #1
2.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
1078 4775 N
0 -4335 V
5725 0 V
0 4335 V
-5725 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: ArialMT
