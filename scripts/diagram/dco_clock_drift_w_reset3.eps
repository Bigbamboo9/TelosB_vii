%!PS-Adobe-2.0 EPSF-2.0
%%Title: diagram/dco_clock_drift.eps
%%Creator: gnuplot 5.0 patchlevel 3
%%CreationDate: Sun Mar 20 22:12:03 2016
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Level3 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -73 def
/dl1 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 5.1 (Oct 2015)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Classic Line colors (version 5.0)
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default dash patterns (version 5.0)
/LTB {BL [] LCb DL} def
/LTw {PL [] 1 setgray} def
/LTb {PL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [2 dl1 3 dl2] LC1 DL} def
/LT2 {PL [1 dl1 1.5 dl2] LC2 DL} def
/LT3 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC3 DL} def
/LT4 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [4 dl1 2 dl2] LC5 DL} def
/LT6 {PL [1.5 dl1 1.5 dl2 1.5 dl1 1.5 dl2 1.5 dl1 6 dl2] LC6 DL} def
/LT7 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC8 DL} def
/SL {[] 0 setdash} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
dup 2 lt
	{/InterpretLevel1 true def
	 /InterpretLevel3 false def}
	{/InterpretLevel1 Level1 def
	 2 gt
	    {/InterpretLevel3 Level3 def}
	    {/InterpretLevel3 false def}
	 ifelse }
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
%
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {textshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     textshow 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (diagram/dco_clock_drift.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 5.0 patchlevel 3)
  /Author (ZhichaoCao)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sun Mar 20 22:12:03 2016)
  /DOCINFO pdfmark
end
} ifelse
%
% Support for boxed text - Ethan A Merritt May 2005
%
/InitTextBox { userdict /TBy2 3 -1 roll put userdict /TBx2 3 -1 roll put
           userdict /TBy1 3 -1 roll put userdict /TBx1 3 -1 roll put
	   /Boxing true def } def
/ExtendTextBox { Boxing
    { gsave dup false charpath pathbbox
      dup TBy2 gt {userdict /TBy2 3 -1 roll put} {pop} ifelse
      dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
      dup TBy1 lt {userdict /TBy1 3 -1 roll put} {pop} ifelse
      dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse
      grestore } if } def
/PopTextBox { newpath TBx1 TBxmargin sub TBy1 TBymargin sub M
               TBx1 TBxmargin sub TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy1 TBymargin sub L closepath } def
/DrawTextBox { PopTextBox stroke /Boxing false def} def
/FillTextBox { gsave PopTextBox 1 1 1 setrgbcolor fill grestore /Boxing false def} def
0 0 0 0 InitTextBox
/TBxmargin 20 def
/TBymargin 20 def
/Boxing false def
/textshow { ExtendTextBox Gshow } def
%
% redundant definitions for compatibility with prologue.ps older than 5.0.2
/LTB {BL [] LCb DL} def
/LTb {PL [] LCb DL} def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(ArialMT) findfont 220 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 7200.00 5040.00 BoxColFill} if
1.000 UL
LTb
LCb setrgbcolor
1078 440 M
63 0 V
5662 0 R
-63 0 V
stroke
946 440 M
[ [(ArialMT) 220.0 0.0 true true 0 ( 125)]
] -73.3 MRshow
1.000 UL
LTb
LCb setrgbcolor
1078 1307 M
63 0 V
5662 0 R
-63 0 V
stroke
946 1307 M
[ [(ArialMT) 220.0 0.0 true true 0 ( 126)]
] -73.3 MRshow
1.000 UL
LTb
LCb setrgbcolor
1078 2174 M
63 0 V
5662 0 R
-63 0 V
stroke
946 2174 M
[ [(ArialMT) 220.0 0.0 true true 0 ( 127)]
] -73.3 MRshow
1.000 UL
LTb
LCb setrgbcolor
1078 3041 M
63 0 V
5662 0 R
-63 0 V
stroke
946 3041 M
[ [(ArialMT) 220.0 0.0 true true 0 ( 128)]
] -73.3 MRshow
1.000 UL
LTb
LCb setrgbcolor
1078 3908 M
63 0 V
5662 0 R
-63 0 V
stroke
946 3908 M
[ [(ArialMT) 220.0 0.0 true true 0 ( 129)]
] -73.3 MRshow
1.000 UL
LTb
LCb setrgbcolor
1078 4775 M
63 0 V
5662 0 R
-63 0 V
stroke
946 4775 M
[ [(ArialMT) 220.0 0.0 true true 0 ( 130)]
] -73.3 MRshow
1.000 UL
LTb
LCb setrgbcolor
1078 440 M
0 63 V
0 4272 R
0 -63 V
stroke
1078 220 M
[ [(ArialMT) 220.0 0.0 true true 0 ( 0)]
] -73.3 MCshow
1.000 UL
LTb
LCb setrgbcolor
1651 440 M
0 63 V
0 4272 R
0 -63 V
stroke
1651 220 M
[ [(ArialMT) 220.0 0.0 true true 0 ( 50)]
] -73.3 MCshow
1.000 UL
LTb
LCb setrgbcolor
2223 440 M
0 63 V
0 4272 R
0 -63 V
stroke
2223 220 M
[ [(ArialMT) 220.0 0.0 true true 0 ( 100)]
] -73.3 MCshow
1.000 UL
LTb
LCb setrgbcolor
2796 440 M
0 63 V
0 4272 R
0 -63 V
stroke
2796 220 M
[ [(ArialMT) 220.0 0.0 true true 0 ( 150)]
] -73.3 MCshow
1.000 UL
LTb
LCb setrgbcolor
3368 440 M
0 63 V
0 4272 R
0 -63 V
stroke
3368 220 M
[ [(ArialMT) 220.0 0.0 true true 0 ( 200)]
] -73.3 MCshow
1.000 UL
LTb
LCb setrgbcolor
3941 440 M
0 63 V
0 4272 R
0 -63 V
stroke
3941 220 M
[ [(ArialMT) 220.0 0.0 true true 0 ( 250)]
] -73.3 MCshow
1.000 UL
LTb
LCb setrgbcolor
4513 440 M
0 63 V
0 4272 R
0 -63 V
stroke
4513 220 M
[ [(ArialMT) 220.0 0.0 true true 0 ( 300)]
] -73.3 MCshow
1.000 UL
LTb
LCb setrgbcolor
5086 440 M
0 63 V
0 4272 R
0 -63 V
stroke
5086 220 M
[ [(ArialMT) 220.0 0.0 true true 0 ( 350)]
] -73.3 MCshow
1.000 UL
LTb
LCb setrgbcolor
5658 440 M
0 63 V
0 4272 R
0 -63 V
stroke
5658 220 M
[ [(ArialMT) 220.0 0.0 true true 0 ( 400)]
] -73.3 MCshow
1.000 UL
LTb
LCb setrgbcolor
6231 440 M
0 63 V
0 4272 R
0 -63 V
stroke
6231 220 M
[ [(ArialMT) 220.0 0.0 true true 0 ( 450)]
] -73.3 MCshow
1.000 UL
LTb
LCb setrgbcolor
6803 440 M
0 63 V
0 4272 R
0 -63 V
stroke
6803 220 M
[ [(ArialMT) 220.0 0.0 true true 0 ( 500)]
] -73.3 MCshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
1078 4775 N
0 -4335 V
5725 0 V
0 4335 V
-5725 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
LCb setrgbcolor
176 2607 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(ArialMT) 220.0 0.0 true true 0 (Drift Factor)]
] -73.3 MCshow
grestore
LTb
% Begin plot #1
0.900 UP
1.000 UL
LTb
0.58 0.00 0.83 C /ArialMT findfont 220 scalefont setfont
/vshift -73 def
1078 1910 Box
1089 1948 Box
1101 1910 Box
1112 1948 Box
1124 2325 Box
1135 2325 Box
1147 2362 Box
1158 2739 Box
1170 2325 Box
1181 2325 Box
1193 1948 Box
1204 1948 Box
1215 2400 Box
1227 2400 Box
1238 1986 Box
1250 1986 Box
1261 2400 Box
1273 2362 Box
1284 2400 Box
1296 2362 Box
1307 2362 Box
1318 2362 Box
1330 2400 Box
1341 2400 Box
1353 2400 Box
1364 2362 Box
1376 2400 Box
1387 2400 Box
1399 2362 Box
1410 1986 Box
1422 2400 Box
1433 2362 Box
1444 2400 Box
1456 2400 Box
1467 2400 Box
1479 2400 Box
1490 2400 Box
1502 2400 Box
1513 2400 Box
1525 2400 Box
1536 1948 Box
1547 2023 Box
1559 1986 Box
1570 1948 Box
1582 2400 Box
1593 2400 Box
1605 2400 Box
1616 2400 Box
1628 2362 Box
1639 2362 Box
1651 2400 Box
1662 2400 Box
1673 2400 Box
1685 1986 Box
1696 1948 Box
1708 2400 Box
1719 2400 Box
1731 2400 Box
1742 2438 Box
1754 2400 Box
1765 2362 Box
1776 2362 Box
1788 2362 Box
1799 2400 Box
1811 2400 Box
1822 2400 Box
1834 2400 Box
1845 2400 Box
1857 2400 Box
1868 2400 Box
1880 2400 Box
1891 2400 Box
1902 2400 Box
1914 2400 Box
1925 1986 Box
1937 2023 Box
1948 2400 Box
1960 2400 Box
1971 2400 Box
1983 2400 Box
1994 2400 Box
2005 2362 Box
2017 2400 Box
2028 2362 Box
2040 2400 Box
2051 2400 Box
2063 2476 Box
2074 2023 Box
2086 1986 Box
2097 1986 Box
2109 1986 Box
2120 2400 Box
2131 2362 Box
2143 2023 Box
2154 1986 Box
2166 1986 Box
2177 1986 Box
2189 1986 Box
2200 1986 Box
2212 2400 Box
2223 2400 Box
2234 2400 Box
2246 2438 Box
2257 2400 Box
2269 2362 Box
2280 2400 Box
2292 2438 Box
2303 1986 Box
2315 1986 Box
2326 2400 Box
2338 2438 Box
2349 2476 Box
2360 2438 Box
2372 2438 Box
2383 2400 Box
2395 1986 Box
2406 2023 Box
2418 2400 Box
2429 2400 Box
2441 1986 Box
2452 1986 Box
2463 1986 Box
2475 1986 Box
2486 2400 Box
2498 2400 Box
2509 2400 Box
2521 2400 Box
2532 2400 Box
2544 1986 Box
2555 1986 Box
2567 1986 Box
2578 2061 Box
2589 2023 Box
2601 2438 Box
2612 2438 Box
2624 2023 Box
2635 2061 Box
2647 2023 Box
2658 2061 Box
2670 2438 Box
2681 2438 Box
2692 1986 Box
2704 2023 Box
2715 2061 Box
2727 2476 Box
2738 2438 Box
2750 2438 Box
2761 2438 Box
2773 2438 Box
2784 2400 Box
2796 2438 Box
2807 2438 Box
2818 2476 Box
2830 2476 Box
2841 2438 Box
2853 2438 Box
2864 2476 Box
2876 2438 Box
2887 2438 Box
2899 2438 Box
2910 2438 Box
2921 2023 Box
2933 2023 Box
2944 2438 Box
2956 2400 Box
2967 2476 Box
2979 2438 Box
2990 2023 Box
3002 2023 Box
3013 2023 Box
3025 2061 Box
3036 2023 Box
3047 1986 Box
3059 2061 Box
3070 2023 Box
3082 2061 Box
3093 2061 Box
3105 2061 Box
3116 2438 Box
3128 2476 Box
3139 2438 Box
3150 2438 Box
3162 2023 Box
3173 2023 Box
3185 2400 Box
3196 2400 Box
3208 2438 Box
3219 2438 Box
3231 2476 Box
3242 2476 Box
3254 2438 Box
3265 2476 Box
3276 2438 Box
3288 2476 Box
3299 2438 Box
3311 2438 Box
3322 2476 Box
3334 2438 Box
3345 2476 Box
3357 2023 Box
3368 2061 Box
3379 2438 Box
3391 2476 Box
3402 2476 Box
3414 1986 Box
3425 2023 Box
3437 2061 Box
3448 2061 Box
3460 2061 Box
3471 2438 Box
3483 2476 Box
3494 2476 Box
3505 2438 Box
3517 2438 Box
3528 2476 Box
3540 2476 Box
3551 2513 Box
3563 2061 Box
3574 2061 Box
3586 2513 Box
3597 2438 Box
3608 2476 Box
3620 2513 Box
3631 2061 Box
3643 2061 Box
3654 2476 Box
3666 2476 Box
3677 2476 Box
3689 2438 Box
3700 2513 Box
3712 2513 Box
3723 2476 Box
3734 2476 Box
3746 2061 Box
3757 2061 Box
3769 2061 Box
3780 2061 Box
3792 2061 Box
3803 2061 Box
3815 2476 Box
3826 2476 Box
3837 2513 Box
3849 2513 Box
3860 2061 Box
3872 2476 Box
3883 2476 Box
3895 2476 Box
3906 2513 Box
3918 2513 Box
3929 2476 Box
3941 2438 Box
3952 2023 Box
3963 2023 Box
3975 2099 Box
3986 2023 Box
3998 2476 Box
4009 2438 Box
4021 2438 Box
4032 2476 Box
4044 2061 Box
4055 2023 Box
4066 2023 Box
4078 2061 Box
4089 2099 Box
4101 2061 Box
4112 2061 Box
4124 2061 Box
4135 2061 Box
4147 2061 Box
4158 2099 Box
4170 2099 Box
4181 2476 Box
4192 2513 Box
4204 2476 Box
4215 2476 Box
4227 2099 Box
4238 2099 Box
4250 2099 Box
4261 2099 Box
4273 2513 Box
4284 2061 Box
4295 2061 Box
4307 2136 Box
4318 2476 Box
4330 2551 Box
4341 2061 Box
4353 2099 Box
4364 2099 Box
4376 2061 Box
4387 2099 Box
4399 2099 Box
4410 2136 Box
4421 2099 Box
4433 2476 Box
4444 2476 Box
4456 2099 Box
4467 2099 Box
4479 2513 Box
4490 2513 Box
4502 2551 Box
4513 2513 Box
4524 2061 Box
4536 2136 Box
4547 2513 Box
4559 2513 Box
4570 2476 Box
4582 2513 Box
4593 2099 Box
4605 2099 Box
4616 2513 Box
4628 2476 Box
4639 2513 Box
4650 2513 Box
4662 2513 Box
4673 2513 Box
4685 2513 Box
4696 2476 Box
4708 2099 Box
4719 2136 Box
4731 2061 Box
4742 2061 Box
4753 2099 Box
4765 2099 Box
4776 2513 Box
4788 2476 Box
4799 2513 Box
4811 2513 Box
4822 2476 Box
4834 2513 Box
4845 2513 Box
4857 2476 Box
4868 2513 Box
4879 2551 Box
4891 2099 Box
4902 2099 Box
4914 2099 Box
4925 2099 Box
4937 2061 Box
4948 2136 Box
4960 2513 Box
4971 2099 Box
4982 2061 Box
4994 2061 Box
5005 2136 Box
5017 2099 Box
5028 2099 Box
5040 2099 Box
5051 2513 Box
5063 2061 Box
5074 2099 Box
5086 2099 Box
5097 2099 Box
5108 2136 Box
5120 2061 Box
5131 2099 Box
5143 2513 Box
5154 2551 Box
5166 2061 Box
5177 2099 Box
5189 2099 Box
5200 2099 Box
5211 2513 Box
5223 2513 Box
5234 2513 Box
5246 2513 Box
5257 2476 Box
5269 2476 Box
5280 2513 Box
5292 2476 Box
5303 2099 Box
5315 2061 Box
5326 2099 Box
5337 2099 Box
5349 2099 Box
5360 2099 Box
5372 2061 Box
5383 2061 Box
5395 2099 Box
5406 2099 Box
5418 2099 Box
5429 2061 Box
5440 2476 Box
5452 2476 Box
5463 2061 Box
5475 2099 Box
5486 2476 Box
5498 2476 Box
5509 2061 Box
5521 2061 Box
5532 2061 Box
5544 2061 Box
5555 2099 Box
5566 2099 Box
5578 2061 Box
5589 2061 Box
5601 2476 Box
5612 2476 Box
5624 2476 Box
5635 2476 Box
5647 2099 Box
5658 2099 Box
5669 2061 Box
5681 2099 Box
5692 2476 Box
5704 2061 Box
5715 2061 Box
5727 2438 Box
5738 2476 Box
5750 2099 Box
5761 2061 Box
5773 2099 Box
5784 2061 Box
5795 2061 Box
5807 2061 Box
5818 2061 Box
5830 2099 Box
5841 2061 Box
5853 2061 Box
5864 2023 Box
5876 2061 Box
5887 2476 Box
5898 2476 Box
5910 2061 Box
5921 2099 Box
5933 2476 Box
5944 2061 Box
5956 2061 Box
5967 2061 Box
5979 2099 Box
5990 2023 Box
6002 2061 Box
6013 2061 Box
6024 2061 Box
6036 2438 Box
6047 2476 Box
6059 2061 Box
6070 2061 Box
6082 2061 Box
6093 2061 Box
6105 2476 Box
6116 2476 Box
6127 2438 Box
6139 2476 Box
6150 2061 Box
6162 2061 Box
6173 2023 Box
6185 2023 Box
6196 2099 Box
6208 2061 Box
6219 2023 Box
6231 2438 Box
6242 2438 Box
6253 2438 Box
6265 2438 Box
6276 2476 Box
6288 2476 Box
6299 2438 Box
6311 2476 Box
6322 2061 Box
6334 2061 Box
% End plot #1
2.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
1078 4775 N
0 -4335 V
5725 0 V
0 4335 V
-5725 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: ArialMT
