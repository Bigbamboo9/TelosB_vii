<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="53:RadioCountToLedsAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x102471bc8"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x101d9b220"/></to>
    </wire>
    <wire loc="72:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x101d9b220"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x101d9d9b0"/></to>
    </wire>
    <wire loc="54:RadioCountToLedsAppC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x1024702b0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x10284ae38"/></to>
    </wire>
    <wire loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x10284ae38"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x10256e7a0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x101f003b0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:RadioCountToLedsAppC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x10249d178"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x102851c20"/></to>
    </wire>
    <wire loc="64:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x102851c20"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x102c4d020"/></to>
    </wire>
    <wire loc="56:RadioCountToLedsAppC.nc">
      <from><interface-ref name="AMControl" scoped="" ref="0x10248a968"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x102536918"/></to>
    </wire>
    <wire loc="20:../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x102536918"/></from>
      <to><interface-ref name="RadioControl" scoped="" ref="0x102568ca8"/></to>
    </wire>
    <wire loc="57:RadioCountToLedsAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x102472678"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x1021f77d8"/></to>
    </wire>
    <wire loc="51:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x1021f77d8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x1021f0020"/></to>
    </wire>
    <wire loc="58:RadioCountToLedsAppC.nc">
      <from><interface-ref name="MilliTimer" scoped="" ref="0x1024945a0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x102889ce0"/></to>
    </wire>
    <wire loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x102889ce0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x10263ce40"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="59:RadioCountToLedsAppC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x10248b020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x102850888"/></to>
    </wire>
    <wire loc="65:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x102850888"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x102c4dbd8"/></to>
    </wire>
    <wire loc="60:RadioCountToLedsAppC.nc">
      <from><interface-ref name="LplxPacket" scoped="" ref="0x1024b6be8"/></from>
      <to><interface-ref name="LplxPacket" scoped="" ref="0x10256ac00"/></to>
    </wire>
    <wire loc="27:../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="LplxPacket" scoped="" ref="0x10256ac00"/></from>
      <to><interface-ref name="LplxPacket" scoped="" ref="0x102565458"/></to>
    </wire>
    <wire loc="61:RadioCountToLedsAppC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x1024af320"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x102569968"/></to>
    </wire>
    <wire loc="28:../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x102569968"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x1025624d0"/></to>
    </wire>
    <wire loc="64:RadioCountToLedsAppC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x10248f108"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x10262b5e0"/></to>
    </wire>
    <wire loc="48:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x10262b5e0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x1027c67f8"/></to>
    </wire>
    <wire loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x101d9a680"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x1027eea40"/></to>
    </wire>
    <wire loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x101d9a680"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x102633750"/></to>
    </wire>
    <wire loc="23:../../tos/chips/cc2420/x-lpl/CC2420xLplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x101d9a680"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x1025df848"/></to>
    </wire>
    <wire loc="24:../../tos/chips/cc2420/x-lpl/CC2420xLplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x101d9a680"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x10204c288"/></to>
    </wire>
    <wire loc="67:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x10247f020"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x101924390"/></to>
    </wire>
    <wire loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x101924390"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x101d610c0"/></to>
    </wire>
    <wire loc="68:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x10247f9f8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x101d9e5b8"/></to>
    </wire>
    <wire loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x101d9e5b8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x101d98740"/></to>
    </wire>
    <wire loc="71:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x10247e140"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x101d9a680"/></to>
    </wire>
    <wire loc="49:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x101d98e10"/></from>
      <to><interface-ref name="MoteClockInit" scoped="" ref="0x101db40e8"/></to>
    </wire>
    <wire loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosb/MoteClockC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x101db40e8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x101dce020"/></to>
    </wire>
    <wire loc="50:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x101d954f8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x101d97610"/></to>
    </wire>
    <wire loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x101d95b98"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x102228020"/></to>
    </wire>
    <wire loc="35:../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x101dce020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x101dd6530"/></to>
    </wire>
    <wire loc="36:../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Msp430ClockInit" scoped="" ref="0x101dc72b8"/></from>
      <to><interface-ref name="Msp430ClockInit" scoped="" ref="0x101dd6ba0"/></to>
    </wire>
    <wire loc="37:../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x101b52020"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x101dd5e08"/></to>
    </wire>
    <wire loc="82:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA2" scoped="" ref="0x101e21710"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x101ec0c80"/></to>
    </wire>
    <wire loc="77:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA1" scoped="" ref="0x101e380c0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x101ec5c58"/></to>
    </wire>
    <wire loc="99:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB0" scoped="" ref="0x101e30710"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x101edbc80"/></to>
    </wire>
    <wire loc="76:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0x101e1f868"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x101ec5020"/></to>
    </wire>
    <wire loc="68:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0x101e22da8"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x101e6bc80"/></to>
    </wire>
    <wire loc="84:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA2" scoped="" ref="0x101e37020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x101ebec58"/></to>
    </wire>
    <wire loc="62:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0x101e29930"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x101e79798"/></to>
    </wire>
    <wire loc="83:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA2" scoped="" ref="0x101e1e6e0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x101ebe020"/></to>
    </wire>
    <wire loc="75:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0x101e27218"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x101ec8c80"/></to>
    </wire>
    <wire loc="70:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA0" scoped="" ref="0x101e321b0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x101ecdc58"/></to>
    </wire>
    <wire loc="69:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0x101e3aa88"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x101ecd020"/></to>
    </wire>
    <wire loc="89:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerB" scoped="" ref="0x101e31020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x101e711e8"/></to>
    </wire>
    <wire loc="101:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB0" scoped="" ref="0x101e2e9f0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x101ed9c58"/></to>
    </wire>
    <wire loc="100:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB0" scoped="" ref="0x101e2fb78"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x101ed9020"/></to>
    </wire>
    <wire loc="63:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x101e77658"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x101e77020"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x101e77c70"/></from>
      <to><interface-ref name="VectorTimerA0" scoped="" ref="0x101ed14f8"/></to>
    </wire>
    <wire loc="65:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x101e752e8"/></from>
      <to><interface-ref name="VectorTimerA1" scoped="" ref="0x101ed1c40"/></to>
    </wire>
    <wire loc="71:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x101ecca90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x101e79798"/></to>
    </wire>
    <wire loc="72:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x101eca100"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x101e77020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x101ec4a90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x101e79798"/></to>
    </wire>
    <wire loc="79:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x101ec2100"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x101e77020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x101edfa90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x101e79798"/></to>
    </wire>
    <wire loc="86:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x101edd100"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x101e77020"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x101e6f020"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x101e708a0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x101e6f638"/></from>
      <to><interface-ref name="VectorTimerB0" scoped="" ref="0x101ed0418"/></to>
    </wire>
    <wire loc="95:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x101e6fc50"/></from>
      <to><interface-ref name="VectorTimerB1" scoped="" ref="0x102067020"/></to>
    </wire>
    <wire loc="102:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x101ed7a90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x101e711e8"/></to>
    </wire>
    <wire loc="103:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x101ed5100"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x101e708a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="108:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x101ecf080"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x1021f77d8"/></to>
    </wire>
    <wire loc="38:../../tos/chips/cc2420/x-lpl/CC2420xLplC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x102067628"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x1021f77d8"/></to>
    </wire>
    <wire loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x102228020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x1021f39d0"/></to>
    </wire>
    <wire loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x102217348"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x1021f1ab0"/></to>
    </wire>
    <wire loc="58:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x1021f1ab0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x10240cc30"/></to>
    </wire>
    <wire loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x1021ee4c0"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x10222bca8"/></to>
    </wire>
    <wire loc="61:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x10222bca8"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x102437448"/></to>
    </wire>
    <wire loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x10221c648"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x10222ae30"/></to>
    </wire>
    <wire loc="64:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x10222ae30"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x102433cd0"/></to>
    </wire>
    <wire loc="59:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x10240ada0"/></from>
      <to><interface-ref name="Port54" scoped="" ref="0x102292568"/></to>
    </wire>
    <wire loc="486:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port54" scoped="" ref="0x102292568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1023a8ca0"/></to>
    </wire>
    <wire loc="62:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x1024365f8"/></from>
      <to><interface-ref name="Port55" scoped="" ref="0x102290568"/></to>
    </wire>
    <wire loc="487:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port55" scoped="" ref="0x102290568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1023a33d8"/></to>
    </wire>
    <wire loc="65:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x102432e20"/></from>
      <to><interface-ref name="Port56" scoped="" ref="0x10228e568"/></to>
    </wire>
    <wire loc="488:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port56" scoped="" ref="0x10228e568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10239eca0"/></to>
    </wire>
    <wire loc="442:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x102244568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x102304ca0"/></to>
    </wire>
    <wire loc="455:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x10225f568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10233dca0"/></to>
    </wire>
    <wire loc="531:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SDA" scoped="" ref="0x1022a77d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10232e3d8"/></to>
    </wire>
    <wire loc="551:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC6" scoped="" ref="0x1022b4558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1023afca0"/></to>
    </wire>
    <wire loc="532:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI0" scoped="" ref="0x1022a5660"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10235eca0"/></to>
    </wire>
    <wire loc="460:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port30" scoped="" ref="0x10225b568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x102333ca0"/></to>
    </wire>
    <wire loc="473:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port42" scoped="" ref="0x102277568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10236dca0"/></to>
    </wire>
    <wire loc="497:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port64" scoped="" ref="0x102282568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1023b9ca0"/></to>
    </wire>
    <wire loc="535:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD0" scoped="" ref="0x10229e560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x102355ca0"/></to>
    </wire>
    <wire loc="545:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC0" scoped="" ref="0x1022c0558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x102395ca0"/></to>
    </wire>
    <wire loc="557:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSIN" scoped="" ref="0x1022de560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1023e03d8"/></to>
    </wire>
    <wire loc="445:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x10223d568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1023283d8"/></to>
    </wire>
    <wire loc="536:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD0" scoped="" ref="0x10229c560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1023503d8"/></to>
    </wire>
    <wire loc="450:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x102239568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10231f3d8"/></to>
    </wire>
    <wire loc="463:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port33" scoped="" ref="0x102255568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1023593d8"/></to>
    </wire>
    <wire loc="476:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port45" scoped="" ref="0x102270568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1023933d8"/></to>
    </wire>
    <wire loc="489:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port57" scoped="" ref="0x10228c568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1023993d8"/></to>
    </wire>
    <wire loc="500:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port67" scoped="" ref="0x1022ad568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1023e03d8"/></to>
    </wire>
    <wire loc="440:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x102248668"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10230dca0"/></to>
    </wire>
    <wire loc="453:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x102263568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x102312d08"/></to>
    </wire>
    <wire loc="466:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port36" scoped="" ref="0x10224f568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10234cca0"/></to>
    </wire>
    <wire loc="530:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO0" scoped="" ref="0x1022a9970"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10232e3d8"/></to>
    </wire>
    <wire loc="548:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC3" scoped="" ref="0x1022ba558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1023bd3d8"/></to>
    </wire>
    <wire loc="555:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC1" scoped="" ref="0x1022ae558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1023e03d8"/></to>
    </wire>
    <wire loc="541:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK1" scoped="" ref="0x1022c6560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1023ac3d8"/></to>
    </wire>
    <wire loc="471:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port40" scoped="" ref="0x10227b568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x102376dd8"/></to>
    </wire>
    <wire loc="484:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port52" scoped="" ref="0x102266568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10237cca0"/></to>
    </wire>
    <wire loc="495:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port62" scoped="" ref="0x102286568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1023c2ca0"/></to>
    </wire>
    <wire loc="549:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC4" scoped="" ref="0x1022b8558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1023b9ca0"/></to>
    </wire>
    <wire loc="538:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE1" scoped="" ref="0x10229a558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x102385ca0"/></to>
    </wire>
    <wire loc="443:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x102242568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1022ff3d8"/></to>
    </wire>
    <wire loc="456:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x10225d568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1023373d8"/></to>
    </wire>
    <wire loc="493:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port60" scoped="" ref="0x10228a568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x102395ca0"/></to>
    </wire>
    <wire loc="461:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port31" scoped="" ref="0x102259568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10232e3d8"/></to>
    </wire>
    <wire loc="474:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port43" scoped="" ref="0x102275568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1023683d8"/></to>
    </wire>
    <wire loc="498:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port65" scoped="" ref="0x102280568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1023b43d8"/></to>
    </wire>
    <wire loc="540:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI1" scoped="" ref="0x102296560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10237cca0"/></to>
    </wire>
    <wire loc="438:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x10224a950"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1022d7e18"/></to>
    </wire>
    <wire loc="451:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x102237568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10231bca0"/></to>
    </wire>
    <wire loc="464:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port34" scoped="" ref="0x102253568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x102355ca0"/></to>
    </wire>
    <wire loc="477:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port46" scoped="" ref="0x10226e568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10238eca0"/></to>
    </wire>
    <wire loc="542:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD1" scoped="" ref="0x1022c4560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10234cca0"/></to>
    </wire>
    <wire loc="546:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC1" scoped="" ref="0x1022be558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1023c63d8"/></to>
    </wire>
    <wire loc="552:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC7" scoped="" ref="0x1022b2558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1023e03d8"/></to>
    </wire>
    <wire loc="482:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port50" scoped="" ref="0x10226a568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x102385ca0"/></to>
    </wire>
    <wire loc="543:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD1" scoped="" ref="0x1022c2560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1023463d8"/></to>
    </wire>
    <wire loc="441:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x102246568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1023083d8"/></to>
    </wire>
    <wire loc="454:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x102261568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1023413d8"/></to>
    </wire>
    <wire loc="467:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port37" scoped="" ref="0x10224d568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1023463d8"/></to>
    </wire>
    <wire loc="539:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO1" scoped="" ref="0x102298560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1023803d8"/></to>
    </wire>
    <wire loc="550:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC5" scoped="" ref="0x1022b6558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1023b43d8"/></to>
    </wire>
    <wire loc="472:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port41" scoped="" ref="0x102279668"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x102371478"/></to>
    </wire>
    <wire loc="485:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port53" scoped="" ref="0x102294568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1023ac3d8"/></to>
    </wire>
    <wire loc="496:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port63" scoped="" ref="0x102284568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1023bd3d8"/></to>
    </wire>
    <wire loc="444:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x10223f568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1022fbca0"/></to>
    </wire>
    <wire loc="494:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port61" scoped="" ref="0x102288568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1023c63d8"/></to>
    </wire>
    <wire loc="449:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x10223b568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x102324ca0"/></to>
    </wire>
    <wire loc="462:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port32" scoped="" ref="0x102257568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10235eca0"/></to>
    </wire>
    <wire loc="475:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port44" scoped="" ref="0x102273568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x102364ca0"/></to>
    </wire>
    <wire loc="499:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port66" scoped="" ref="0x10227e568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1023afca0"/></to>
    </wire>
    <wire loc="439:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x1022237f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x102311478"/></to>
    </wire>
    <wire loc="452:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x102235568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1023163d8"/></to>
    </wire>
    <wire loc="465:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port35" scoped="" ref="0x102251568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1023503d8"/></to>
    </wire>
    <wire loc="478:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port47" scoped="" ref="0x10226c568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1023893d8"/></to>
    </wire>
    <wire loc="534:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SCL" scoped="" ref="0x1022a0548"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1023593d8"/></to>
    </wire>
    <wire loc="547:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC2" scoped="" ref="0x1022bc558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1023c2ca0"/></to>
    </wire>
    <wire loc="533:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK0" scoped="" ref="0x1022a2560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1023593d8"/></to>
    </wire>
    <wire loc="483:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port51" scoped="" ref="0x102268568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1023803d8"/></to>
    </wire>
    <wire loc="554:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC0" scoped="" ref="0x1022b0558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1023afca0"/></to>
    </wire>
    <wire loc="558:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSOUT" scoped="" ref="0x1022dc568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1023993d8"/></to>
    </wire>
    <wire loc="529:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE0" scoped="" ref="0x1022ab5b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x102333ca0"/></to>
    </wire>
    <wire loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x10192bca0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x101d5f020"/></to>
    </wire>
    <wire loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x101d5c4e0"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x10199f3c8"/></to>
    </wire>
    <wire loc="63:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x102c4d020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x102c41710"/></to>
    </wire>
    <wire loc="64:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x102c4dbd8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x10256c920"/></to>
    </wire>
    <wire loc="66:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x10284f578"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x102c4c888"/></to>
    </wire>
    <wire loc="65:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x102c4c888"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x10256b5d0"/></to>
    </wire>
    <wire loc="67:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x10284ebd8"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x102c4a020"/></to>
    </wire>
    <wire loc="66:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x102c4a020"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x102569968"/></to>
    </wire>
    <wire loc="25:../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x10256c920"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x102563740"/></to>
    </wire>
    <wire loc="26:../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x10256b5d0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x1025640c0"/></to>
    </wire>
    <wire loc="60:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x102c40450"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x10250c020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x102c3e060"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x10256b5d0"/></to>
    </wire>
    <wire loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x10250c020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x10253c2c8"/></to>
    </wire>
    <wire loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x10253b060"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x10256f5b0"/></to>
    </wire>
    <wire loc="22:../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x10256f5b0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x1025618e8"/></to>
    </wire>
    <wire loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x10253bc38"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x10256b5d0"/></to>
    </wire>
    <wire loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x102539268"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x10256c920"/></to>
    </wire>
    <wire loc="169:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x102538020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x10192bca0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x1025387c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x10192bca0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="41:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LplxPacket" scoped="" ref="0x102565458"/></from>
      <to><interface-ref name="LplxPacket" scoped="" ref="0x102821a08"/></to>
    </wire>
    <wire loc="36:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x1025618e8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x102553d10"/></to>
    </wire>
    <wire loc="24:../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x10256c348"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x10255e628"/></to>
    </wire>
    <wire loc="39:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x10255e628"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x1025899b8"/></to>
    </wire>
    <wire loc="43:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x102563740"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x10281dda0"/></to>
    </wire>
    <wire loc="23:../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x10256e7a0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x102560ab0"/></to>
    </wire>
    <wire loc="38:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x102560ab0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x10258be40"/></to>
    </wire>
    <wire loc="44:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x1025624d0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x10281cb68"/></to>
    </wire>
    <wire loc="32:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x102568ca8"/></from>
      <to><interface-ref name="RadioControl" scoped="" ref="0x1025e92b8"/></to>
    </wire>
    <wire loc="42:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x1025640c0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x10281e798"/></to>
    </wire>
    <wire loc="35:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x102555700"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x102587020"/></to>
    </wire>
    <wire loc="15:../../tos/chips/cc2420/x-lpl/CC2420xLplC.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x1025e92b8"/></from>
      <to><interface-ref name="RadioControl" scoped="" ref="0x1025de020"/></to>
    </wire>
    <wire loc="33:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="OppoRouting" scoped="" ref="0x102562de8"/></from>
      <to><interface-ref name="OppoRouting" scoped="" ref="0x1025e7de8"/></to>
    </wire>
    <wire loc="21:../../tos/chips/cc2420/x-lpl/CC2420xLplC.nc">
      <from><interface-ref name="OppoRouting" scoped="" ref="0x1025e7de8"/></from>
      <to><interface-ref name="OppoRouting" scoped="" ref="0x102061830"/></to>
    </wire>
    <wire loc="37:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x102554508"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x1025884e8"/></to>
    </wire>
    <wire loc="46:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x102586020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x1025e9a48"/></to>
    </wire>
    <wire loc="16:../../tos/chips/cc2420/x-lpl/CC2420xLplC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x1025e9a48"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x1025de7b0"/></to>
    </wire>
    <wire loc="47:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x102580c50"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x1025e7108"/></to>
    </wire>
    <wire loc="18:../../tos/chips/cc2420/x-lpl/CC2420xLplC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x1025e7108"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x1025dddb8"/></to>
    </wire>
    <wire loc="48:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSnoop" scoped="" ref="0x102585348"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x1025e77a0"/></to>
    </wire>
    <wire loc="19:../../tos/chips/cc2420/x-lpl/CC2420xLplC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x1025e77a0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x102046020"/></to>
    </wire>
    <wire loc="49:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="BulkSend" scoped="" ref="0x1025802b8"/></from>
      <to><interface-ref name="BulkSend" scoped="" ref="0x1025e8798"/></to>
    </wire>
    <wire loc="17:../../tos/chips/cc2420/x-lpl/CC2420xLplC.nc">
      <from><interface-ref name="BulkSend" scoped="" ref="0x1025e8798"/></from>
      <to><interface-ref name="BulkSend" scoped="" ref="0x1025dd488"/></to>
    </wire>
    <wire loc="50:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LplxPacket" scoped="" ref="0x102585948"/></from>
      <to><interface-ref name="LplxPacket" scoped="" ref="0x102821a08"/></to>
    </wire>
    <wire loc="51:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x10257fbd8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x10281dda0"/></to>
    </wire>
    <wire loc="52:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x1025845d0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x10281e798"/></to>
    </wire>
    <wire loc="55:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x10257e8b8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x1021f77d8"/></to>
    </wire>
    <wire loc="20:../../tos/chips/cc2420/x-lpl/CC2420xLplC.nc">
      <from><interface-ref name="RadioTimerUpdate" scoped="" ref="0x1025e1350"/></from>
      <to><interface-ref name="RadioTimerUpdate" scoped="" ref="0x1025dc4a0"/></to>
    </wire>
    <wire loc="26:../../tos/chips/cc2420/x-lpl/CC2420xLplC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x1025dce58"/></from>
      <to><interface-ref name="LplSend" scoped="" ref="0x102047a68"/></to>
    </wire>
    <wire loc="27:../../tos/chips/cc2420/x-lpl/CC2420xLplC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x1025db708"/></from>
      <to><interface-ref name="LplReceive" scoped="" ref="0x102042688"/></to>
    </wire>
    <wire loc="28:../../tos/chips/cc2420/x-lpl/CC2420xLplC.nc">
      <from><interface-ref name="LplTime" scoped="" ref="0x1025da600"/></from>
      <to><interface-ref name="LplTime" scoped="" ref="0x1020632d8"/></to>
    </wire>
    <wire loc="31:../../tos/chips/cc2420/x-lpl/CC2420xLplC.nc">
      <from><interface-ref name="SleepTimer" scoped="" ref="0x1025d9020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x1026421c8"/></to>
    </wire>
    <wire loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x1026421c8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x10263ce40"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="34:../../tos/chips/cc2420/x-lpl/CC2420xLplC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x1025d1508"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x1027f0530"/></to>
    </wire>
    <wire loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x1027f0530"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x1027ea320"/></to>
    </wire>
    <wire loc="37:../../tos/chips/cc2420/x-lpl/CC2420xLplC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x1025d1c98"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x1021f77d8"/></to>
    </wire>
    <wire loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x10263ce40"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x1026304a0"/></to>
    </wire>
    <wire loc="47:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x1026304a0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x1027d5328"/></to>
    </wire>
    <wire loc="46:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x102633750"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x102667b40"/></to>
    </wire>
    <wire loc="41:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x102667b40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x102c9c358"/></to>
    </wire>
    <wire loc="50:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x1027cf678"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x102758528"/></to>
    </wire>
    <wire loc="51:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x1027536b0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x10273f4b8"/></to>
    </wire>
    <wire loc="42:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x10273f4b8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x102c96a20"/></to>
    </wire>
    <wire loc="52:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x1027c59d0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x1026c22e8"/></to>
    </wire>
    <wire loc="39:../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x1026c22e8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x1026e48d8"/></to>
    </wire>
    <wire loc="41:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x102c9c358"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x102cdad90"/></to>
    </wire>
    <wire loc="44:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x102cead20"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x102c9cb40"/></to>
    </wire>
    <wire loc="42:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x102c9cb40"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x102cd9648"/></to>
    </wire>
    <wire loc="45:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x102cecb38"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x1026c22e8"/></to>
    </wire>
    <wire loc="44:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x102cd55a8"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x102ce0e60"/></to>
    </wire>
    <wire loc="38:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x102ce0e60"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x10264b020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="45:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x102cd4bd8"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x102cdd430"/></to>
    </wire>
    <wire loc="39:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x102cdd430"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x10264ab60"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="46:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x102cd2020"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x102cdc740"/></to>
    </wire>
    <wire loc="40:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x102cdc740"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x102687498"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="47:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x102cd2c18"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x1021f77d8"/></to>
    </wire>
    <wire loc="14:../../tos/chips/msp430/timer/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x10264b020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerA" scoped="" ref="0x101e29930"/></to>
    </wire>
    <wire loc="15:../../tos/chips/msp430/timer/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x10264ab60"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlA0" scoped="" ref="0x101e22da8"/></to>
    </wire>
    <wire loc="16:../../tos/chips/msp430/timer/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x102687498"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA0" scoped="" ref="0x101e3aa88"/></to>
    </wire>
    <wire loc="18:../../tos/chips/msp430/timer/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x10264b020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerA" scoped="" ref="0x101e29930"/></to>
    </wire>
    <wire loc="19:../../tos/chips/msp430/timer/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x10264ab60"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlA1" scoped="" ref="0x101e27218"/></to>
    </wire>
    <wire loc="20:../../tos/chips/msp430/timer/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x102687498"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA1" scoped="" ref="0x101e1f868"/></to>
    </wire>
    <wire loc="22:../../tos/chips/msp430/timer/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x10264b020"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerA" scoped="" ref="0x101e29930"/></to>
    </wire>
    <wire loc="23:../../tos/chips/msp430/timer/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x10264ab60"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlA2" scoped="" ref="0x101e21710"/></to>
    </wire>
    <wire loc="24:../../tos/chips/msp430/timer/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x102687498"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA2" scoped="" ref="0x101e1e6e0"/></to>
    </wire>
    <wire loc="41:../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x1026fab10"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x1026b9118"/></to>
    </wire>
    <wire loc="39:../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Counter32khz" scoped="" ref="0x1026b9118"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x1026b5888"/></to>
    </wire>
    <wire loc="44:../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="RadioTimerUpdate" scoped="" ref="0x1026f7ad0"/></from>
      <to><interface-ref name="RadioTimerUpdate" scoped="" ref="0x1025e1350"/></to>
    </wire>
    <wire loc="40:../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x1026e98c0"/></from>
      <to><interface-ref name="TimerA" scoped="" ref="0x101e29930"/></to>
    </wire>
    <wire loc="76:../../tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x102793900"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x10192bca0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:../../tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x1027c8020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x10192bca0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x1027ef4c0"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x1027eb2b8"/></to>
    </wire>
    <wire loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x1027f5758"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x1027eea40"/></to>
    </wire>
    <wire loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x10288d408"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x10256c920"/></to>
    </wire>
    <wire loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x10288b020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x10256b5d0"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/MainC.nc">
      <documentation loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="40:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformC.nc">
      <documentation loc="34:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre and Cory Sharp&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="3:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformP.nc" safe="">
      <module/>
    </component>
    <component qname="MotePlatformC" loc="1:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosb/MotePlatformC.nc" safe="">
      <module/>
    </component>
    <component qname="MoteClockC" loc="37:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosb/MoteClockC.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosb/MoteClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockC" loc="26:../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <documentation loc="22:../../tos/chips/msp430/timer/Msp430ClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockP" loc="38:../../tos/chips/msp430/timer/Msp430ClockP.nc" safe="">
      <module/>
    </component>
    <component qname="Msp430TimerC" loc="26:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <documentation loc="22:../../tos/chips/msp430/timer/Msp430TimerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA" loc="28(Msp430TimerC.Msp430TimerA):../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:302">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:368">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:352">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB" loc="28(Msp430TimerC.Msp430TimerB):../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:286">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:400">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:384">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA0" loc="28(Msp430TimerC.Msp430TimerA0):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="22:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:354">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:370">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA1" loc="28(Msp430TimerC.Msp430TimerA1):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="22:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:356">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:372">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA2" loc="28(Msp430TimerC.Msp430TimerA2):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="22:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:358">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:374">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB0" loc="28(Msp430TimerC.Msp430TimerB0):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="22:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:386">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:402">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerCommonP" loc="2:../../tos/chips/msp430/timer/Msp430TimerCommonP.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420xRTxP" loc="6:../../tos/chips/cc2420/x-rtx/CC2420xRTxP.nc">
      <module/>
    </component>
    <component qname="LedsC" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/LedsC.nc">
      <documentation loc="34:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="40:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <documentation loc="34:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <documentation loc="35:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for general-purpose I/O.&#10;&#10; @author Joe Polastre&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC.P10" loc="39(HplMsp430GeneralIOC.P10):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P11" loc="39(HplMsp430GeneralIOC.P11):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P12" loc="39(HplMsp430GeneralIOC.P12):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P13" loc="39(HplMsp430GeneralIOC.P13):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P14" loc="39(HplMsp430GeneralIOC.P14):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P15" loc="39(HplMsp430GeneralIOC.P15):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P16" loc="39(HplMsp430GeneralIOC.P16):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P17" loc="39(HplMsp430GeneralIOC.P17):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P20" loc="39(HplMsp430GeneralIOC.P20):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P21" loc="39(HplMsp430GeneralIOC.P21):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P22" loc="39(HplMsp430GeneralIOC.P22):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P23" loc="39(HplMsp430GeneralIOC.P23):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P24" loc="39(HplMsp430GeneralIOC.P24):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P25" loc="39(HplMsp430GeneralIOC.P25):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P26" loc="39(HplMsp430GeneralIOC.P26):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P27" loc="39(HplMsp430GeneralIOC.P27):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P30" loc="39(HplMsp430GeneralIOC.P30):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P31" loc="39(HplMsp430GeneralIOC.P31):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P32" loc="39(HplMsp430GeneralIOC.P32):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P33" loc="39(HplMsp430GeneralIOC.P33):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P34" loc="39(HplMsp430GeneralIOC.P34):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P35" loc="39(HplMsp430GeneralIOC.P35):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P36" loc="39(HplMsp430GeneralIOC.P36):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P37" loc="39(HplMsp430GeneralIOC.P37):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P40" loc="39(HplMsp430GeneralIOC.P40):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P41" loc="39(HplMsp430GeneralIOC.P41):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P42" loc="39(HplMsp430GeneralIOC.P42):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P43" loc="39(HplMsp430GeneralIOC.P43):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P44" loc="39(HplMsp430GeneralIOC.P44):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P45" loc="39(HplMsp430GeneralIOC.P45):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P46" loc="39(HplMsp430GeneralIOC.P46):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P47" loc="39(HplMsp430GeneralIOC.P47):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P50" loc="39(HplMsp430GeneralIOC.P50):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P51" loc="39(HplMsp430GeneralIOC.P51):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P52" loc="39(HplMsp430GeneralIOC.P52):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P53" loc="39(HplMsp430GeneralIOC.P53):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P54" loc="39(HplMsp430GeneralIOC.P54):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P55" loc="39(HplMsp430GeneralIOC.P55):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P56" loc="39(HplMsp430GeneralIOC.P56):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P57" loc="39(HplMsp430GeneralIOC.P57):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P60" loc="39(HplMsp430GeneralIOC.P60):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P61" loc="39(HplMsp430GeneralIOC.P61):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P62" loc="39(HplMsp430GeneralIOC.P62):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P63" loc="39(HplMsp430GeneralIOC.P63):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P64" loc="39(HplMsp430GeneralIOC.P64):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P65" loc="39(HplMsp430GeneralIOC.P65):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P66" loc="39(HplMsp430GeneralIOC.P66):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P67" loc="39(HplMsp430GeneralIOC.P67):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led0Impl" loc="42(PlatformLedsC.Led0Impl):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led1Impl" loc="42(PlatformLedsC.Led1Impl):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led2Impl" loc="42(PlatformLedsC.Led2Impl):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="McuSleepC" loc="49:../../tos/chips/msp430/McuSleepC.nc" safe="">
      <documentation loc="33:../../tos/chips/msp430/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430. Code for low power calculation copied from older&#10; msp430hardware.h by Vlado Handziski, Joe Polastre, and Cory Sharp.&#10;&#10;&#10; @author Philip Levis&#10; @author Vlado Handziski&#10; @author Joe Polastre&#10; @author Cory Sharp&#10; @date   October 26, 2005&#10; @see  Please refer to TEP 112 for more information about this component and its&#10;          intended use.&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MoteClockP" loc="38:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosb/MoteClockP.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosb/MoteClockP.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="RadioCountToLedsC" loc="49:RadioCountToLedsC.nc" safe="">
      <documentation loc="36:RadioCountToLedsC.nc">
        <short>&#10; Implementation of the RadioCountToLeds application.</short>
        <long>&#10; Implementation of the RadioCountToLeds application. RadioCountToLeds &#10; maintains a 4Hz counter, broadcasting its value in an AM packet &#10; every time it gets updated. A RadioCountToLeds node that hears a counter &#10; displays the bottom three bits on its LEDs. This application is a useful &#10; test to show that basic AM communication and timers work.&#10;&#10; @author Philip Levis&#10; @date   June 6 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RadioCountToLedsAppC.AMSenderC" loc="47(RadioCountToLedsAppC.AMSenderC):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMSenderC.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RadioCountToLedsAppC.AMSenderC.SenderC" loc="47(RadioCountToLedsAppC.AMSenderC.SenderC):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x101f003b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RadioCountToLedsAppC.AMSenderC.SenderC.AMQueueEntryP" loc="43(RadioCountToLedsAppC.AMSenderC.SenderC.AMQueueEntryP):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x101f003b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueP.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="45(AMQueueP.AMQueueImplP):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="3:../../tos/platforms/telosa/ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageC" loc="9:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageP" loc="5:../../tos/chips/cc2420/CC2420ActiveMessageP.nc" safe="">
      <module/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420xLplC" loc="1:../../tos/chips/cc2420/x-lpl/CC2420xLplC.nc">
      <configuration/>
    </component>
    <component qname="CC2420xLplP" loc="8:../../tos/chips/cc2420/x-lpl/CC2420xLplP.nc">
      <module/>
    </component>
    <component qname="CC2420xLplC.SleepTimer" loc="44(CC2420xLplC.SleepTimer):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TimerMilliP.nc">
      <documentation loc="34:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="32:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <documentation loc="22:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
        <short>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.</short>
        <long>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.  TimerMilliC in tos/system/ uses this component to&#10; allocate new timers.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C" loc="30(HilTimerMilliC.AlarmMilli32C):../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <documentation loc="22:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom" loc="30(HilTimerMilliC.AlarmMilli32C.AlarmFrom):../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="22:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer" loc="26(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer):../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="22:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzMapC" loc="7:../../tos/chips/msp430/timer/Msp430Timer32khzMapC.nc">
      <documentation loc="1:../../tos/chips/msp430/timer/Msp430Timer32khzMapC.nc">
        <short>&#10; Msp430TimerMicroMapC presents as paramaterized interfaces all of the Micro&#10; hardware timers on the MSP430 that are available for compile time allocation&#10; by &#34;new AlarmMicro16C()&#34;, &#34;new AlarmMicro32C()&#34;, and so on.</short>
        <long>&#10; Msp430TimerMicroMapC presents as paramaterized interfaces all of the Micro&#10; hardware timers on the MSP430 that are available for compile time allocation&#10; by &#34;new AlarmMicro16C()&#34;, &#34;new AlarmMicro32C()&#34;, and so on.&#10;*</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm" loc="34(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm):../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="23:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1024731d8"/>
            <typename><typedef-ref name="T32khz" ref="0x102473530"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C" loc="30:../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <documentation loc="22:../../tos/chips/msp430/timer/CounterMilli32C.nc">
        <short>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.</short>
        <long>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC" loc="30:../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <documentation loc="22:../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
        <short>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.</short>
        <long>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC.Counter" loc="31(Msp430Counter32khzC.Counter):../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="22:../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1024731d8"/>
            <typename><typedef-ref name="T32khz" ref="0x102473530"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C.Transform" loc="56(CounterMilli32C.Transform):../../tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x102475a18"/>
            <typename><typedef-ref name="TMilli" ref="0x102475d70"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x1016a3020"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1024731d8"/>
            <typename><typedef-ref name="T32khz" ref="0x102473530"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x1016a2b20"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x1016a3020"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.Transform" loc="51(HilTimerMilliC.AlarmMilli32C.Transform):../../tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x102475a18"/>
            <typename><typedef-ref name="TMilli" ref="0x102475d70"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x1016a3020"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1024731d8"/>
            <typename><typedef-ref name="T32khz" ref="0x102473530"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x1016a2b20"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):../../tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:../../tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x102475a18"/>
            <typename><typedef-ref name="TMilli" ref="0x102475d70"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="48(HilTimerMilliC.VirtualizeTimerC):../../tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:../../tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x102475a18"/>
            <typename><typedef-ref name="TMilli" ref="0x102475d70"/></typename>
          </type-tag>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x102475a18"/>
            <typename><typedef-ref name="TMilli" ref="0x102475d70"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RandomC" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/RandomC.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420xPacketP" loc="3:../../tos/chips/cc2420/x-packet/CC2420xPacketP.nc">
      <module/>
    </component>
    <component qname="RadioCountToLedsAppC.AMReceiverC" loc="43(RadioCountToLedsAppC.AMReceiverC):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMReceiverC.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RadioCountToLedsAppC.TimerMilliC" loc="44(RadioCountToLedsAppC.TimerMilliC):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430TimerP" loc="28:../../tos/chips/msp430/timer/Msp430TimerP.nc" abstract="" safe="">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxIV_addr" ref="0x101e48878" loc="29:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x1016a2b20"/></typename>
          </type-int>
        </constant>
        <constant name="TxR_addr" ref="0x101e48bf0" loc="30:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x1016a2b20"/></typename>
          </type-int>
        </constant>
        <constant name="TxCTL_addr" ref="0x101e47020" loc="31:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x1016a2b20"/></typename>
          </type-int>
        </constant>
        <constant name="TxIFG" ref="0x101e47378" loc="32:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x1016a2b20"/></typename>
          </type-int>
        </constant>
        <constant name="TxCLR" ref="0x101e476d0" loc="33:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x1016a2b20"/></typename>
          </type-int>
        </constant>
        <constant name="TxIE" ref="0x101e47a20" loc="34:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x1016a2b20"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL0" ref="0x101e47d88" loc="35:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x1016a2b20"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL1" ref="0x101e46150" loc="36:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x1016a2b20"/></typename>
          </type-int>
        </constant>
        <constant name="isClockSourceAsync" ref="0x101e46500" loc="37:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10191c1d0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430TimerCapComP" loc="28:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc" abstract="" safe="">
      <documentation loc="22:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxCCTLx_addr" ref="0x101e6d928" loc="29:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x1016a2b20"/></typename>
          </type-int>
        </constant>
        <constant name="TxCCRx_addr" ref="0x101e6dcd8" loc="30:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x1016a2b20"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOP" loc="39:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc" abstract="" safe="">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_in_addr" ref="0x1022d6998" loc="40:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_out_addr" ref="0x1022d6d20" loc="41:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_dir_addr" ref="0x1022d5108" loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_sel_addr" ref="0x1022d5490" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="pin" ref="0x1022d57e0" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x1016a2790"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430GpioC" loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc" abstract="" safe="">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AMSenderC" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMSenderC.nc" abstract="">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x1024d5020" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x101f003b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DirectAMSenderC" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x1024c15b8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x101f003b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x1024f0170" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x101f003b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x1025082a8" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmMilli32C" loc="30:../../tos/chips/msp430/timer/AlarmMilli32C.nc" abstract="">
      <documentation loc="22:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz16C" loc="30:../../tos/chips/msp430/timer/Alarm32khz16C.nc" abstract="">
      <documentation loc="22:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzC" loc="26:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc" abstract="">
      <documentation loc="22:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430AlarmC" loc="34:../../tos/chips/msp430/timer/Msp430AlarmC.nc" abstract="" safe="">
      <documentation loc="23:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x102675a10" loc="34:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
          <component-ref qname="Msp430AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x102675a10"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430CounterC" loc="31:../../tos/chips/msp430/timer/Msp430CounterC.nc" abstract="" safe="">
      <documentation loc="22:../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x1026b4020" loc="31:../../tos/chips/msp430/timer/Msp430CounterC.nc">
          <component-ref qname="Msp430CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x1026b4020"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="56:../../tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x1026bbdb8" loc="57:../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x1026bbdb8"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x1026e35a8" loc="58:../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x1026e35a8"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x1026e3970" loc="59:../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x1026e3970"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x1026e1110" loc="60:../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x1026e1110"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x1026e14b8" loc="61:../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x1016a2790"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x1026e1c48" loc="62:../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x1026e1c48"/></type-var>
        </typedef>
        <constant name="isdco" ref="0x1026e0020" loc="63:../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10191c1d0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:../../tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x1026f24d8" loc="52:../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x1026f24d8"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x1026f2c40" loc="53:../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x1026f2c40"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x1026f1068" loc="54:../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x1026f1068"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x1026f17e0" loc="55:../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x1026f17e0"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x1026f1b88" loc="56:../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x1016a2790"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:../../tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:../../tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x10273b688" loc="46:../../tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x10273b688"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="48:../../tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:../../tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x102791da0" loc="48:../../tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x102791da0"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x10278e108" loc="48:../../tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x1027c4310" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x1027c4310"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AMReceiverC" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x10284cd38" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x101f003b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x101d9a680" loc="58:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x101d9a680"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x101d9a9d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x101d9b220" loc="57:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x101d9b220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x101d9b570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x101d9e5b8" loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x101d9e5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x101d9e908"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x101d954f8" loc="6:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteInit" scoped="" ref="0x101d954f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x101d95848"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x101d98740" loc="4:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x101d98740"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x101d98a90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteClockInit" ref="0x101d98e10" loc="5:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x101d98e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x101d951a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x101d95b98" loc="7:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LedsInit" scoped="" ref="0x101d95b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x101d94020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x101d97610" loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosb/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x101d97610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x101d97960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MoteClockInit" ref="0x101db40e8" loc="39:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosb/MoteClockC.nc">
      <component-ref qname="MoteClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x101db40e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x101db4438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x101dc72b8" loc="29:../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x101dc72b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x101dcd1a8"/>
        <function-ref name="initTimerB" scoped="" ref="0x101dc7790"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x101dc7918"/>
        <function-ref name="initTimerA" scoped="" ref="0x101dc7aa0"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x101dc7608"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x101dc7c28"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x101dc7db0"/>
        <function-ref name="initClocks" scoped="" ref="0x101dcd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x101dce020" loc="28:../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x101dce020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x101dce370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x101dd6ba0" loc="41:../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x101dd6ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x101dd5ad8"/>
        <function-ref name="initTimerB" scoped="" ref="0x101dd51a8"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x101dd5330"/>
        <function-ref name="initTimerA" scoped="" ref="0x101dd54b8"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x101dd5020"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x101dd5640"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x101dd57c8"/>
        <function-ref name="initClocks" scoped="" ref="0x101dd5950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x101dd5e08" loc="42:../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x101dd5e08"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x101dd41a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x101dd6530" loc="40:../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x101dd6530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x101dd6880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA2" ref="0x101e21710" loc="31:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA2" scoped="" ref="0x101e21710"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x101e21a60"/>
        <function-ref name="getControl" scoped="" ref="0x101e21be8"/>
        <function-ref name="enableEvents" scoped="" ref="0x101e21d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x101e20020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x101e201a8"/>
        <function-ref name="disableEvents" scoped="" ref="0x101e20330"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x101e204b8"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x101e20640"/>
        <function-ref name="setControl" scoped="" ref="0x101e207c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA1" ref="0x101e380c0" loc="36:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA1" scoped="" ref="0x101e380c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x101e38410"/>
        <function-ref name="setSynchronous" scoped="" ref="0x101e38598"/>
        <function-ref name="captured" scoped="" ref="0x101e38720"/>
        <function-ref name="clearOverflow" scoped="" ref="0x101e388a8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x101e38a30"/>
        <function-ref name="setEdge" scoped="" ref="0x101e38bb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB0" ref="0x101e30710" loc="40:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB0" scoped="" ref="0x101e30710"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x101e30a60"/>
        <function-ref name="getControl" scoped="" ref="0x101e30be8"/>
        <function-ref name="enableEvents" scoped="" ref="0x101e30d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x101e2f020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x101e2f1a8"/>
        <function-ref name="disableEvents" scoped="" ref="0x101e2f330"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x101e2f4b8"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x101e2f640"/>
        <function-ref name="setControl" scoped="" ref="0x101e2f7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA1" ref="0x101e1f868" loc="33:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0x101e1f868"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x101e1fbb8"/>
        <function-ref name="setEvent" scoped="" ref="0x101e1fd40"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x101e1e020"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x101e1e1a8"/>
        <function-ref name="fired" scoped="" ref="0x101e1e330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA0" ref="0x101e22da8" loc="29:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0x101e22da8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x101e28170"/>
        <function-ref name="getControl" scoped="" ref="0x101e282f8"/>
        <function-ref name="enableEvents" scoped="" ref="0x101e28480"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x101e28608"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x101e28790"/>
        <function-ref name="disableEvents" scoped="" ref="0x101e28918"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x101e28aa0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x101e28c28"/>
        <function-ref name="setControl" scoped="" ref="0x101e28db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA2" ref="0x101e37020" loc="37:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA2" scoped="" ref="0x101e37020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x101e37370"/>
        <function-ref name="setSynchronous" scoped="" ref="0x101e374f8"/>
        <function-ref name="captured" scoped="" ref="0x101e37680"/>
        <function-ref name="clearOverflow" scoped="" ref="0x101e37808"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x101e37990"/>
        <function-ref name="setEdge" scoped="" ref="0x101e37b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerA" ref="0x101e29930" loc="28:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0x101e29930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x101e29c80"/>
        <function-ref name="setClockSource" scoped="" ref="0x101e29e08"/>
        <function-ref name="enableEvents" scoped="" ref="0x101e11020"/>
        <function-ref name="get" scoped="" ref="0x101e111a8"/>
        <function-ref name="disableEvents" scoped="" ref="0x101e11330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x101e114b8"/>
        <function-ref name="getMode" scoped="" ref="0x101e11640"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x101e117c8"/>
        <function-ref name="overflow" scoped="" ref="0x101e11950"/>
        <function-ref name="setMode" scoped="" ref="0x101e11ad8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x101e11c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA2" ref="0x101e1e6e0" loc="34:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA2" scoped="" ref="0x101e1e6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x101e1ea30"/>
        <function-ref name="setEvent" scoped="" ref="0x101e1ebb8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x101e1ed40"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x101e39020"/>
        <function-ref name="fired" scoped="" ref="0x101e391a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA1" ref="0x101e27218" loc="30:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0x101e27218"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x101e27568"/>
        <function-ref name="getControl" scoped="" ref="0x101e276f0"/>
        <function-ref name="enableEvents" scoped="" ref="0x101e27878"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x101e27a00"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x101e27b88"/>
        <function-ref name="disableEvents" scoped="" ref="0x101e27d10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x101e21020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x101e211a8"/>
        <function-ref name="setControl" scoped="" ref="0x101e21330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA0" ref="0x101e321b0" loc="35:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA0" scoped="" ref="0x101e321b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x101e32500"/>
        <function-ref name="setSynchronous" scoped="" ref="0x101e32688"/>
        <function-ref name="captured" scoped="" ref="0x101e32810"/>
        <function-ref name="clearOverflow" scoped="" ref="0x101e32998"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x101e32b20"/>
        <function-ref name="setEdge" scoped="" ref="0x101e32ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA0" ref="0x101e3aa88" loc="32:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0x101e3aa88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x101e3add8"/>
        <function-ref name="setEvent" scoped="" ref="0x101e1f020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x101e1f1a8"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x101e1f330"/>
        <function-ref name="fired" scoped="" ref="0x101e1f4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerB" ref="0x101e31020" loc="39:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerB" scoped="" ref="0x101e31020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x101e31370"/>
        <function-ref name="setClockSource" scoped="" ref="0x101e314f8"/>
        <function-ref name="enableEvents" scoped="" ref="0x101e31680"/>
        <function-ref name="get" scoped="" ref="0x101e31808"/>
        <function-ref name="disableEvents" scoped="" ref="0x101e31990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x101e31b18"/>
        <function-ref name="getMode" scoped="" ref="0x101e31ca0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x101e31e28"/>
        <function-ref name="overflow" scoped="" ref="0x101e30020"/>
        <function-ref name="setMode" scoped="" ref="0x101e301a8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x101e30330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB0" ref="0x101e2e9f0" loc="42:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB0" scoped="" ref="0x101e2e9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x101e2ed40"/>
        <function-ref name="setSynchronous" scoped="" ref="0x101e2c020"/>
        <function-ref name="captured" scoped="" ref="0x101e2c1a8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x101e2c330"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x101e2c4b8"/>
        <function-ref name="setEdge" scoped="" ref="0x101e2c640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB0" ref="0x101e2fb78" loc="41:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB0" scoped="" ref="0x101e2fb78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x101e2e020"/>
        <function-ref name="setEvent" scoped="" ref="0x101e2e1a8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x101e2e330"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x101e2e4b8"/>
        <function-ref name="fired" scoped="" ref="0x101e2e640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x101e77c70" loc="42:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x101e77c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x101e75020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x101e77658" loc="41:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x101e77658"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x101e779a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x101e752e8" loc="43:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x101e752e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x101e75638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x101e77020" loc="40:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x101e77020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1016a2790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x101e77390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x101e79798" loc="39:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x101e79798"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x101e79ae8"/>
        <function-ref name="setClockSource" scoped="" ref="0x101e79c70"/>
        <function-ref name="enableEvents" scoped="" ref="0x101e79df8"/>
        <function-ref name="get" scoped="" ref="0x101e78020"/>
        <function-ref name="disableEvents" scoped="" ref="0x101e781a8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x101e78330"/>
        <function-ref name="getMode" scoped="" ref="0x101e784b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x101e78640"/>
        <function-ref name="overflow" scoped="" ref="0x101e787c8"/>
        <function-ref name="setMode" scoped="" ref="0x101e78950"/>
        <function-ref name="setInputDivider" scoped="" ref="0x101e78ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x101e6f638" loc="42:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x101e6f638"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x101e6f988"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x101e6f020" loc="41:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x101e6f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x101e6f370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x101e6fc50" loc="43:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x101e6fc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x101e6e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x101e708a0" loc="40:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x101e708a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1016a2790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x101e70c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x101e711e8" loc="39:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x101e711e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x101e71538"/>
        <function-ref name="setClockSource" scoped="" ref="0x101e716c0"/>
        <function-ref name="enableEvents" scoped="" ref="0x101e71848"/>
        <function-ref name="get" scoped="" ref="0x101e719d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x101e71b58"/>
        <function-ref name="clearOverflow" scoped="" ref="0x101e71ce0"/>
        <function-ref name="getMode" scoped="" ref="0x101e71e68"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x101e70020"/>
        <function-ref name="overflow" scoped="" ref="0x101e701a8"/>
        <function-ref name="setMode" scoped="" ref="0x101e70330"/>
        <function-ref name="setInputDivider" scoped="" ref="0x101e704b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x101ecdc58" loc="35:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x101ecdc58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x101ecc020"/>
        <function-ref name="setSynchronous" scoped="" ref="0x101ecc1a8"/>
        <function-ref name="captured" scoped="" ref="0x101ecc330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x101ecc4b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x101ecc640"/>
        <function-ref name="setEdge" scoped="" ref="0x101ecc7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x101e6bc80" loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x101e6bc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x101ece020"/>
        <function-ref name="getControl" scoped="" ref="0x101ece1a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x101ece330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x101ece4b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x101ece640"/>
        <function-ref name="disableEvents" scoped="" ref="0x101ece7c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x101ece950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x101ecead8"/>
        <function-ref name="setControl" scoped="" ref="0x101ecec60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x101eca100" loc="37:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x101eca100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x101eca450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x101ecd020" loc="34:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x101ecd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x101ecd370"/>
        <function-ref name="setEvent" scoped="" ref="0x101ecd4f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x101ecd680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x101ecd808"/>
        <function-ref name="fired" scoped="" ref="0x101ecd990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x101ecca90" loc="36:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x101ecca90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x101eccde0"/>
        <function-ref name="setClockSource" scoped="" ref="0x101ecb020"/>
        <function-ref name="enableEvents" scoped="" ref="0x101ecb1a8"/>
        <function-ref name="get" scoped="" ref="0x101ecb330"/>
        <function-ref name="disableEvents" scoped="" ref="0x101ecb4b8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x101ecb640"/>
        <function-ref name="getMode" scoped="" ref="0x101ecb7c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x101ecb950"/>
        <function-ref name="overflow" scoped="" ref="0x101ecbad8"/>
        <function-ref name="setMode" scoped="" ref="0x101ecbc60"/>
        <function-ref name="setInputDivider" scoped="" ref="0x101ecbde8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x101ec5c58" loc="35:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x101ec5c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x101ec4020"/>
        <function-ref name="setSynchronous" scoped="" ref="0x101ec41a8"/>
        <function-ref name="captured" scoped="" ref="0x101ec4330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x101ec44b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x101ec4640"/>
        <function-ref name="setEdge" scoped="" ref="0x101ec47c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x101ec8c80" loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x101ec8c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x101ec6020"/>
        <function-ref name="getControl" scoped="" ref="0x101ec61a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x101ec6330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x101ec64b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x101ec6640"/>
        <function-ref name="disableEvents" scoped="" ref="0x101ec67c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x101ec6950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x101ec6ad8"/>
        <function-ref name="setControl" scoped="" ref="0x101ec6c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x101ec2100" loc="37:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x101ec2100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x101ec2450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x101ec5020" loc="34:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x101ec5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x101ec5370"/>
        <function-ref name="setEvent" scoped="" ref="0x101ec54f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x101ec5680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x101ec5808"/>
        <function-ref name="fired" scoped="" ref="0x101ec5990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x101ec4a90" loc="36:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x101ec4a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x101ec4de0"/>
        <function-ref name="setClockSource" scoped="" ref="0x101ec3020"/>
        <function-ref name="enableEvents" scoped="" ref="0x101ec31a8"/>
        <function-ref name="get" scoped="" ref="0x101ec3330"/>
        <function-ref name="disableEvents" scoped="" ref="0x101ec34b8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x101ec3640"/>
        <function-ref name="getMode" scoped="" ref="0x101ec37c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x101ec3950"/>
        <function-ref name="overflow" scoped="" ref="0x101ec3ad8"/>
        <function-ref name="setMode" scoped="" ref="0x101ec3c60"/>
        <function-ref name="setInputDivider" scoped="" ref="0x101ec3de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x101ebec58" loc="35:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x101ebec58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x101edf020"/>
        <function-ref name="setSynchronous" scoped="" ref="0x101edf1a8"/>
        <function-ref name="captured" scoped="" ref="0x101edf330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x101edf4b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x101edf640"/>
        <function-ref name="setEdge" scoped="" ref="0x101edf7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x101ec0c80" loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x101ec0c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x101ebf020"/>
        <function-ref name="getControl" scoped="" ref="0x101ebf1a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x101ebf330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x101ebf4b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x101ebf640"/>
        <function-ref name="disableEvents" scoped="" ref="0x101ebf7c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x101ebf950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x101ebfad8"/>
        <function-ref name="setControl" scoped="" ref="0x101ebfc60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x101edd100" loc="37:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x101edd100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x101edd450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x101ebe020" loc="34:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x101ebe020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x101ebe370"/>
        <function-ref name="setEvent" scoped="" ref="0x101ebe4f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x101ebe680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x101ebe808"/>
        <function-ref name="fired" scoped="" ref="0x101ebe990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x101edfa90" loc="36:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x101edfa90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x101edfde0"/>
        <function-ref name="setClockSource" scoped="" ref="0x101ede020"/>
        <function-ref name="enableEvents" scoped="" ref="0x101ede1a8"/>
        <function-ref name="get" scoped="" ref="0x101ede330"/>
        <function-ref name="disableEvents" scoped="" ref="0x101ede4b8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x101ede640"/>
        <function-ref name="getMode" scoped="" ref="0x101ede7c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x101ede950"/>
        <function-ref name="overflow" scoped="" ref="0x101edead8"/>
        <function-ref name="setMode" scoped="" ref="0x101edec60"/>
        <function-ref name="setInputDivider" scoped="" ref="0x101edede8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x101ed9c58" loc="35:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x101ed9c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x101ed7020"/>
        <function-ref name="setSynchronous" scoped="" ref="0x101ed71a8"/>
        <function-ref name="captured" scoped="" ref="0x101ed7330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x101ed74b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x101ed7640"/>
        <function-ref name="setEdge" scoped="" ref="0x101ed77c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x101edbc80" loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x101edbc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x101eda020"/>
        <function-ref name="getControl" scoped="" ref="0x101eda1a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x101eda330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x101eda4b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x101eda640"/>
        <function-ref name="disableEvents" scoped="" ref="0x101eda7c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x101eda950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x101edaad8"/>
        <function-ref name="setControl" scoped="" ref="0x101edac60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x101ed5100" loc="37:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x101ed5100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x101ed5450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x101ed9020" loc="34:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x101ed9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x101ed9370"/>
        <function-ref name="setEvent" scoped="" ref="0x101ed94f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x101ed9680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x101ed9808"/>
        <function-ref name="fired" scoped="" ref="0x101ed9990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x101ed7a90" loc="36:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x101ed7a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x101ed7de0"/>
        <function-ref name="setClockSource" scoped="" ref="0x101ed6020"/>
        <function-ref name="enableEvents" scoped="" ref="0x101ed61a8"/>
        <function-ref name="get" scoped="" ref="0x101ed6330"/>
        <function-ref name="disableEvents" scoped="" ref="0x101ed64b8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x101ed6640"/>
        <function-ref name="getMode" scoped="" ref="0x101ed67c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x101ed6950"/>
        <function-ref name="overflow" scoped="" ref="0x101ed6ad8"/>
        <function-ref name="setMode" scoped="" ref="0x101ed6c60"/>
        <function-ref name="setInputDivider" scoped="" ref="0x101ed6de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA0" ref="0x101ed14f8" loc="4:../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA0" scoped="" ref="0x101ed14f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x101ed1848"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA1" ref="0x101ed1c40" loc="5:../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA1" scoped="" ref="0x101ed1c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x101ed0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB0" ref="0x101ed0418" loc="6:../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB0" scoped="" ref="0x101ed0418"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x101ed0768"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x101ecf080" loc="10:../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x101ecf080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x101ecf3d0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x101ecf558"/>
        <function-ref name="led1On" scoped="" ref="0x101ecf6e0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x101ecf868"/>
        <function-ref name="led2Toggle" scoped="" ref="0x101ecf9f0"/>
        <function-ref name="get" scoped="" ref="0x101ecfb78"/>
        <function-ref name="led1Off" scoped="" ref="0x101ecfd00"/>
        <function-ref name="led2Off" scoped="" ref="0x101ef04b8"/>
        <function-ref name="set" scoped="" ref="0x101ef0020"/>
        <function-ref name="led0On" scoped="" ref="0x101ef01a8"/>
        <function-ref name="led2On" scoped="" ref="0x101ef0330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB1" ref="0x102067020" loc="13:../../tos/chips/cc2420/x-rtx/CC2420xRTxP.nc">
      <component-ref qname="CC2420xRTxP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB1" scoped="" ref="0x102067020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x102067370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x102046020" loc="10:../../tos/chips/cc2420/x-rtx/CC2420xRTxP.nc">
      <component-ref qname="CC2420xRTxP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x102046020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x102046370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OppoRouting" ref="0x102061830" loc="12:../../tos/chips/cc2420/x-rtx/CC2420xRTxP.nc">
      <component-ref qname="CC2420xRTxP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OppoRouting" scoped="" ref="0x102061830"/></type-interface>
      <instance>
        <interfacedef-ref qname="OppoRouting"/>
      </instance>
      <interface-functions>
        <function-ref name="setLocalMetric" scoped="" ref="0x102061b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x10204c288" loc="7:../../tos/chips/cc2420/x-rtx/CC2420xRTxP.nc">
      <component-ref qname="CC2420xRTxP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x10204c288"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10204c5d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x102067628" loc="15:../../tos/chips/cc2420/x-rtx/CC2420xRTxP.nc">
      <component-ref qname="CC2420xRTxP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x102067628"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x102067978"/>
        <function-ref name="led0Toggle" scoped="" ref="0x102067b00"/>
        <function-ref name="led1On" scoped="" ref="0x102067c88"/>
        <function-ref name="led1Toggle" scoped="" ref="0x102067e10"/>
        <function-ref name="led2Toggle" scoped="" ref="0x102062020"/>
        <function-ref name="get" scoped="" ref="0x1020621a8"/>
        <function-ref name="led1Off" scoped="" ref="0x102062330"/>
        <function-ref name="led2Off" scoped="" ref="0x102062950"/>
        <function-ref name="set" scoped="" ref="0x1020624b8"/>
        <function-ref name="led0On" scoped="" ref="0x102062640"/>
        <function-ref name="led2On" scoped="" ref="0x1020627c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LplSend" ref="0x102047a68" loc="8:../../tos/chips/cc2420/x-rtx/CC2420xRTxP.nc">
      <component-ref qname="CC2420xRTxP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LplSend" scoped="" ref="0x102047a68"/></type-interface>
      <instance>
        <interfacedef-ref qname="LplSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x102047db8"/>
        <function-ref name="sendDone" scoped="" ref="0x10204b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LplTime" ref="0x1020632d8" loc="11:../../tos/chips/cc2420/x-rtx/CC2420xRTxP.nc">
      <component-ref qname="CC2420xRTxP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LplTime" scoped="" ref="0x1020632d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LplTime"/>
      </instance>
      <interface-functions>
        <function-ref name="timeRadio" scoped="" ref="0x102063628"/>
        <function-ref name="timeCompensated" scoped="" ref="0x1020637b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LplReceive" ref="0x102042688" loc="9:../../tos/chips/cc2420/x-rtx/CC2420xRTxP.nc">
      <component-ref qname="CC2420xRTxP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LplReceive" scoped="" ref="0x102042688"/></type-interface>
      <instance>
        <interfacedef-ref qname="LplReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="txDetect" scoped="" ref="0x1020429d8"/>
        <function-ref name="rxInit" scoped="" ref="0x102042b60"/>
        <function-ref name="receive" scoped="" ref="0x102042ce8"/>
        <function-ref name="rxOn" scoped="" ref="0x102042e70"/>
        <function-ref name="rxBuffSet" scoped="" ref="0x10204a020"/>
        <function-ref name="rxEnable" scoped="" ref="0x10204a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x1021f77d8" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x1021f77d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x1021f7b28"/>
        <function-ref name="led0Toggle" scoped="" ref="0x1021f7cb0"/>
        <function-ref name="led1On" scoped="" ref="0x1021f7e38"/>
        <function-ref name="led1Toggle" scoped="" ref="0x1021f4020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x1021f41a8"/>
        <function-ref name="get" scoped="" ref="0x1021f4330"/>
        <function-ref name="led1Off" scoped="" ref="0x1021f44b8"/>
        <function-ref name="led2Off" scoped="" ref="0x1021f4ad8"/>
        <function-ref name="set" scoped="" ref="0x1021f4640"/>
        <function-ref name="led0On" scoped="" ref="0x1021f47c8"/>
        <function-ref name="led2On" scoped="" ref="0x1021f4950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x102217348" loc="50:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x102217348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x102217698"/>
        <function-ref name="isInput" scoped="" ref="0x102217820"/>
        <function-ref name="toggle" scoped="" ref="0x1022179a8"/>
        <function-ref name="isOutput" scoped="" ref="0x102217b30"/>
        <function-ref name="get" scoped="" ref="0x102217cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x102217e40"/>
        <function-ref name="set" scoped="" ref="0x1021ee020"/>
        <function-ref name="clr" scoped="" ref="0x1021ee1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x1021f39d0" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x1021f39d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1021f3d20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x1021ee4c0" loc="51:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x1021ee4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1021ee810"/>
        <function-ref name="isInput" scoped="" ref="0x1021ee998"/>
        <function-ref name="toggle" scoped="" ref="0x1021eeb20"/>
        <function-ref name="isOutput" scoped="" ref="0x1021eeca8"/>
        <function-ref name="get" scoped="" ref="0x1021eee30"/>
        <function-ref name="makeOutput" scoped="" ref="0x10221c020"/>
        <function-ref name="set" scoped="" ref="0x10221c1a8"/>
        <function-ref name="clr" scoped="" ref="0x10221c330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x1021f0020" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x1021f0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x1021f0370"/>
        <function-ref name="led0Toggle" scoped="" ref="0x1021f04f8"/>
        <function-ref name="led1On" scoped="" ref="0x1021f0680"/>
        <function-ref name="led1Toggle" scoped="" ref="0x1021f0808"/>
        <function-ref name="led2Toggle" scoped="" ref="0x1021f0990"/>
        <function-ref name="get" scoped="" ref="0x1021f0b18"/>
        <function-ref name="led1Off" scoped="" ref="0x1021f0ca0"/>
        <function-ref name="led2Off" scoped="" ref="0x1021ef330"/>
        <function-ref name="set" scoped="" ref="0x1021f0e28"/>
        <function-ref name="led0On" scoped="" ref="0x1021ef020"/>
        <function-ref name="led2On" scoped="" ref="0x1021ef1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x10221c648" loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x10221c648"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10221c998"/>
        <function-ref name="isInput" scoped="" ref="0x10221cb20"/>
        <function-ref name="toggle" scoped="" ref="0x10221cca8"/>
        <function-ref name="isOutput" scoped="" ref="0x10221ce30"/>
        <function-ref name="get" scoped="" ref="0x102215020"/>
        <function-ref name="makeOutput" scoped="" ref="0x1022151a8"/>
        <function-ref name="set" scoped="" ref="0x102215330"/>
        <function-ref name="clr" scoped="" ref="0x1022154b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x1021f1ab0" loc="41:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x1021f1ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1021f1e00"/>
        <function-ref name="isInput" scoped="" ref="0x10222b020"/>
        <function-ref name="toggle" scoped="" ref="0x10222b1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x10222b330"/>
        <function-ref name="get" scoped="" ref="0x10222b4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10222b640"/>
        <function-ref name="set" scoped="" ref="0x10222b7c8"/>
        <function-ref name="clr" scoped="" ref="0x10222b950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x10222bca8" loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x10222bca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10222a020"/>
        <function-ref name="isInput" scoped="" ref="0x10222a1a8"/>
        <function-ref name="toggle" scoped="" ref="0x10222a330"/>
        <function-ref name="isOutput" scoped="" ref="0x10222a4b8"/>
        <function-ref name="get" scoped="" ref="0x10222a640"/>
        <function-ref name="makeOutput" scoped="" ref="0x10222a7c8"/>
        <function-ref name="set" scoped="" ref="0x10222a950"/>
        <function-ref name="clr" scoped="" ref="0x10222aad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x102228020" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x102228020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x102228370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x10222ae30" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x10222ae30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1022291a8"/>
        <function-ref name="isInput" scoped="" ref="0x102229330"/>
        <function-ref name="toggle" scoped="" ref="0x1022294b8"/>
        <function-ref name="isOutput" scoped="" ref="0x102229640"/>
        <function-ref name="get" scoped="" ref="0x1022297c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x102229950"/>
        <function-ref name="set" scoped="" ref="0x102229ad8"/>
        <function-ref name="clr" scoped="" ref="0x102229c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x102244568" loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x102244568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1022448b8"/>
        <function-ref name="isInput" scoped="" ref="0x102244a40"/>
        <function-ref name="setResistor" scoped="" ref="0x102244bc8"/>
        <function-ref name="toggle" scoped="" ref="0x102244d50"/>
        <function-ref name="isOutput" scoped="" ref="0x102243020"/>
        <function-ref name="getResistor" scoped="" ref="0x1022431a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x102243330"/>
        <function-ref name="get" scoped="" ref="0x1022434b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x102243640"/>
        <function-ref name="getRaw" scoped="" ref="0x1022437c8"/>
        <function-ref name="set" scoped="" ref="0x102243950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x102243ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x102243c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x102242020"/>
        <function-ref name="clr" scoped="" ref="0x1022421a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x10225f568" loc="66:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x10225f568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10225f8b8"/>
        <function-ref name="isInput" scoped="" ref="0x10225fa40"/>
        <function-ref name="setResistor" scoped="" ref="0x10225fbc8"/>
        <function-ref name="toggle" scoped="" ref="0x10225fd50"/>
        <function-ref name="isOutput" scoped="" ref="0x10225e020"/>
        <function-ref name="getResistor" scoped="" ref="0x10225e1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10225e330"/>
        <function-ref name="get" scoped="" ref="0x10225e4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10225e640"/>
        <function-ref name="getRaw" scoped="" ref="0x10225e7c8"/>
        <function-ref name="set" scoped="" ref="0x10225e950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10225ead8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10225ec60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10225d020"/>
        <function-ref name="clr" scoped="" ref="0x10225d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SDA" ref="0x1022a77d0" loc="145:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SDA" scoped="" ref="0x1022a77d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1022a7b20"/>
        <function-ref name="isInput" scoped="" ref="0x1022a7ca8"/>
        <function-ref name="setResistor" scoped="" ref="0x1022a7e30"/>
        <function-ref name="toggle" scoped="" ref="0x1022a6020"/>
        <function-ref name="isOutput" scoped="" ref="0x1022a61a8"/>
        <function-ref name="getResistor" scoped="" ref="0x1022a6330"/>
        <function-ref name="makeOutput" scoped="" ref="0x1022a64b8"/>
        <function-ref name="get" scoped="" ref="0x1022a6640"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1022a67c8"/>
        <function-ref name="getRaw" scoped="" ref="0x1022a6950"/>
        <function-ref name="set" scoped="" ref="0x1022a6ad8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1022a6c60"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1022a6de8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1022a5120"/>
        <function-ref name="clr" scoped="" ref="0x1022a52a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC6" ref="0x1022b4558" loc="165:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC6" scoped="" ref="0x1022b4558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1022b48a8"/>
        <function-ref name="isInput" scoped="" ref="0x1022b4a30"/>
        <function-ref name="setResistor" scoped="" ref="0x1022b4bb8"/>
        <function-ref name="toggle" scoped="" ref="0x1022b4d40"/>
        <function-ref name="isOutput" scoped="" ref="0x1022b3020"/>
        <function-ref name="getResistor" scoped="" ref="0x1022b31a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x1022b3330"/>
        <function-ref name="get" scoped="" ref="0x1022b34b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1022b3640"/>
        <function-ref name="getRaw" scoped="" ref="0x1022b37c8"/>
        <function-ref name="set" scoped="" ref="0x1022b3950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1022b3ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1022b3c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1022b2020"/>
        <function-ref name="clr" scoped="" ref="0x1022b21a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI0" ref="0x1022a5660" loc="146:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI0" scoped="" ref="0x1022a5660"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1022a59b0"/>
        <function-ref name="isInput" scoped="" ref="0x1022a5b38"/>
        <function-ref name="setResistor" scoped="" ref="0x1022a5cc0"/>
        <function-ref name="toggle" scoped="" ref="0x1022a5e48"/>
        <function-ref name="isOutput" scoped="" ref="0x1022a3020"/>
        <function-ref name="getResistor" scoped="" ref="0x1022a31a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x1022a3330"/>
        <function-ref name="get" scoped="" ref="0x1022a34b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1022a3640"/>
        <function-ref name="getRaw" scoped="" ref="0x1022a37c8"/>
        <function-ref name="set" scoped="" ref="0x1022a3950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1022a3ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1022a3c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1022a2020"/>
        <function-ref name="clr" scoped="" ref="0x1022a21a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port30" ref="0x10225b568" loc="71:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port30" scoped="" ref="0x10225b568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10225b8b8"/>
        <function-ref name="isInput" scoped="" ref="0x10225ba40"/>
        <function-ref name="setResistor" scoped="" ref="0x10225bbc8"/>
        <function-ref name="toggle" scoped="" ref="0x10225bd50"/>
        <function-ref name="isOutput" scoped="" ref="0x10225a020"/>
        <function-ref name="getResistor" scoped="" ref="0x10225a1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10225a330"/>
        <function-ref name="get" scoped="" ref="0x10225a4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10225a640"/>
        <function-ref name="getRaw" scoped="" ref="0x10225a7c8"/>
        <function-ref name="set" scoped="" ref="0x10225a950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10225aad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10225ac60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x102259020"/>
        <function-ref name="clr" scoped="" ref="0x1022591a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port42" ref="0x102277568" loc="84:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port42" scoped="" ref="0x102277568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1022778b8"/>
        <function-ref name="isInput" scoped="" ref="0x102277a40"/>
        <function-ref name="setResistor" scoped="" ref="0x102277bc8"/>
        <function-ref name="toggle" scoped="" ref="0x102277d50"/>
        <function-ref name="isOutput" scoped="" ref="0x102276020"/>
        <function-ref name="getResistor" scoped="" ref="0x1022761a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x102276330"/>
        <function-ref name="get" scoped="" ref="0x1022764b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x102276640"/>
        <function-ref name="getRaw" scoped="" ref="0x1022767c8"/>
        <function-ref name="set" scoped="" ref="0x102276950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x102276ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x102276c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x102275020"/>
        <function-ref name="clr" scoped="" ref="0x1022751a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port54" ref="0x102292568" loc="97:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port54" scoped="" ref="0x102292568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1022928b8"/>
        <function-ref name="isInput" scoped="" ref="0x102292a40"/>
        <function-ref name="setResistor" scoped="" ref="0x102292bc8"/>
        <function-ref name="toggle" scoped="" ref="0x102292d50"/>
        <function-ref name="isOutput" scoped="" ref="0x102291020"/>
        <function-ref name="getResistor" scoped="" ref="0x1022911a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x102291330"/>
        <function-ref name="get" scoped="" ref="0x1022914b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x102291640"/>
        <function-ref name="getRaw" scoped="" ref="0x1022917c8"/>
        <function-ref name="set" scoped="" ref="0x102291950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x102291ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x102291c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x102290020"/>
        <function-ref name="clr" scoped="" ref="0x1022901a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port64" ref="0x102282568" loc="108:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0x102282568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1022828b8"/>
        <function-ref name="isInput" scoped="" ref="0x102282a40"/>
        <function-ref name="setResistor" scoped="" ref="0x102282bc8"/>
        <function-ref name="toggle" scoped="" ref="0x102282d50"/>
        <function-ref name="isOutput" scoped="" ref="0x102281020"/>
        <function-ref name="getResistor" scoped="" ref="0x1022811a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x102281330"/>
        <function-ref name="get" scoped="" ref="0x1022814b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x102281640"/>
        <function-ref name="getRaw" scoped="" ref="0x1022817c8"/>
        <function-ref name="set" scoped="" ref="0x102281950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x102281ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x102281c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x102280020"/>
        <function-ref name="clr" scoped="" ref="0x1022801a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD0" ref="0x10229e560" loc="149:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD0" scoped="" ref="0x10229e560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10229e8b0"/>
        <function-ref name="isInput" scoped="" ref="0x10229ea38"/>
        <function-ref name="setResistor" scoped="" ref="0x10229ebc0"/>
        <function-ref name="toggle" scoped="" ref="0x10229ed48"/>
        <function-ref name="isOutput" scoped="" ref="0x10229d020"/>
        <function-ref name="getResistor" scoped="" ref="0x10229d1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10229d330"/>
        <function-ref name="get" scoped="" ref="0x10229d4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10229d640"/>
        <function-ref name="getRaw" scoped="" ref="0x10229d7c8"/>
        <function-ref name="set" scoped="" ref="0x10229d950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10229dad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10229dc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10229c020"/>
        <function-ref name="clr" scoped="" ref="0x10229c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC0" ref="0x1022c0558" loc="159:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC0" scoped="" ref="0x1022c0558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1022c08a8"/>
        <function-ref name="isInput" scoped="" ref="0x1022c0a30"/>
        <function-ref name="setResistor" scoped="" ref="0x1022c0bb8"/>
        <function-ref name="toggle" scoped="" ref="0x1022c0d40"/>
        <function-ref name="isOutput" scoped="" ref="0x1022bf020"/>
        <function-ref name="getResistor" scoped="" ref="0x1022bf1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x1022bf330"/>
        <function-ref name="get" scoped="" ref="0x1022bf4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1022bf640"/>
        <function-ref name="getRaw" scoped="" ref="0x1022bf7c8"/>
        <function-ref name="set" scoped="" ref="0x1022bf950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1022bfad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1022bfc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1022be020"/>
        <function-ref name="clr" scoped="" ref="0x1022be1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSIN" ref="0x1022de560" loc="171:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSIN" scoped="" ref="0x1022de560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1022de8b0"/>
        <function-ref name="isInput" scoped="" ref="0x1022dea38"/>
        <function-ref name="setResistor" scoped="" ref="0x1022debc0"/>
        <function-ref name="toggle" scoped="" ref="0x1022ded48"/>
        <function-ref name="isOutput" scoped="" ref="0x1022dd020"/>
        <function-ref name="getResistor" scoped="" ref="0x1022dd1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x1022dd330"/>
        <function-ref name="get" scoped="" ref="0x1022dd4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1022dd640"/>
        <function-ref name="getRaw" scoped="" ref="0x1022dd7c8"/>
        <function-ref name="set" scoped="" ref="0x1022dd950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1022ddad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1022ddc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1022dc020"/>
        <function-ref name="clr" scoped="" ref="0x1022dc1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x10223d568" loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x10223d568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10223d8b8"/>
        <function-ref name="isInput" scoped="" ref="0x10223da40"/>
        <function-ref name="setResistor" scoped="" ref="0x10223dbc8"/>
        <function-ref name="toggle" scoped="" ref="0x10223dd50"/>
        <function-ref name="isOutput" scoped="" ref="0x10223c020"/>
        <function-ref name="getResistor" scoped="" ref="0x10223c1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10223c330"/>
        <function-ref name="get" scoped="" ref="0x10223c4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10223c640"/>
        <function-ref name="getRaw" scoped="" ref="0x10223c7c8"/>
        <function-ref name="set" scoped="" ref="0x10223c950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10223cad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10223cc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10223b020"/>
        <function-ref name="clr" scoped="" ref="0x10223b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD0" ref="0x10229c560" loc="150:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD0" scoped="" ref="0x10229c560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10229c8b0"/>
        <function-ref name="isInput" scoped="" ref="0x10229ca38"/>
        <function-ref name="setResistor" scoped="" ref="0x10229cbc0"/>
        <function-ref name="toggle" scoped="" ref="0x10229cd48"/>
        <function-ref name="isOutput" scoped="" ref="0x10229b020"/>
        <function-ref name="getResistor" scoped="" ref="0x10229b1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10229b330"/>
        <function-ref name="get" scoped="" ref="0x10229b4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10229b640"/>
        <function-ref name="getRaw" scoped="" ref="0x10229b7c8"/>
        <function-ref name="set" scoped="" ref="0x10229b950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10229bad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10229bc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10229a020"/>
        <function-ref name="clr" scoped="" ref="0x10229a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x102239568" loc="61:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x102239568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1022398b8"/>
        <function-ref name="isInput" scoped="" ref="0x102239a40"/>
        <function-ref name="setResistor" scoped="" ref="0x102239bc8"/>
        <function-ref name="toggle" scoped="" ref="0x102239d50"/>
        <function-ref name="isOutput" scoped="" ref="0x102238020"/>
        <function-ref name="getResistor" scoped="" ref="0x1022381a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x102238330"/>
        <function-ref name="get" scoped="" ref="0x1022384b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x102238640"/>
        <function-ref name="getRaw" scoped="" ref="0x1022387c8"/>
        <function-ref name="set" scoped="" ref="0x102238950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x102238ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x102238c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x102237020"/>
        <function-ref name="clr" scoped="" ref="0x1022371a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port33" ref="0x102255568" loc="74:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port33" scoped="" ref="0x102255568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1022558b8"/>
        <function-ref name="isInput" scoped="" ref="0x102255a40"/>
        <function-ref name="setResistor" scoped="" ref="0x102255bc8"/>
        <function-ref name="toggle" scoped="" ref="0x102255d50"/>
        <function-ref name="isOutput" scoped="" ref="0x102254020"/>
        <function-ref name="getResistor" scoped="" ref="0x1022541a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x102254330"/>
        <function-ref name="get" scoped="" ref="0x1022544b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x102254640"/>
        <function-ref name="getRaw" scoped="" ref="0x1022547c8"/>
        <function-ref name="set" scoped="" ref="0x102254950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x102254ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x102254c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x102253020"/>
        <function-ref name="clr" scoped="" ref="0x1022531a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port45" ref="0x102270568" loc="87:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port45" scoped="" ref="0x102270568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1022708b8"/>
        <function-ref name="isInput" scoped="" ref="0x102270a40"/>
        <function-ref name="setResistor" scoped="" ref="0x102270bc8"/>
        <function-ref name="toggle" scoped="" ref="0x102270d50"/>
        <function-ref name="isOutput" scoped="" ref="0x10226f020"/>
        <function-ref name="getResistor" scoped="" ref="0x10226f1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10226f330"/>
        <function-ref name="get" scoped="" ref="0x10226f4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10226f640"/>
        <function-ref name="getRaw" scoped="" ref="0x10226f7c8"/>
        <function-ref name="set" scoped="" ref="0x10226f950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10226fad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10226fc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10226e020"/>
        <function-ref name="clr" scoped="" ref="0x10226e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port57" ref="0x10228c568" loc="100:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port57" scoped="" ref="0x10228c568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10228c8b8"/>
        <function-ref name="isInput" scoped="" ref="0x10228ca40"/>
        <function-ref name="setResistor" scoped="" ref="0x10228cbc8"/>
        <function-ref name="toggle" scoped="" ref="0x10228cd50"/>
        <function-ref name="isOutput" scoped="" ref="0x10228b020"/>
        <function-ref name="getResistor" scoped="" ref="0x10228b1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10228b330"/>
        <function-ref name="get" scoped="" ref="0x10228b4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10228b640"/>
        <function-ref name="getRaw" scoped="" ref="0x10228b7c8"/>
        <function-ref name="set" scoped="" ref="0x10228b950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10228bad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10228bc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10228a020"/>
        <function-ref name="clr" scoped="" ref="0x10228a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port67" ref="0x1022ad568" loc="111:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0x1022ad568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1022ad8b8"/>
        <function-ref name="isInput" scoped="" ref="0x1022ada40"/>
        <function-ref name="setResistor" scoped="" ref="0x1022adbc8"/>
        <function-ref name="toggle" scoped="" ref="0x1022add50"/>
        <function-ref name="isOutput" scoped="" ref="0x1022ac020"/>
        <function-ref name="getResistor" scoped="" ref="0x1022ac1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x1022ac330"/>
        <function-ref name="get" scoped="" ref="0x1022ac4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1022ac640"/>
        <function-ref name="getRaw" scoped="" ref="0x1022ac7c8"/>
        <function-ref name="set" scoped="" ref="0x1022ac950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1022acad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1022acc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1022ab020"/>
        <function-ref name="clr" scoped="" ref="0x1022ab1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x102248668" loc="51:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x102248668"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1022489b8"/>
        <function-ref name="isInput" scoped="" ref="0x102248b40"/>
        <function-ref name="setResistor" scoped="" ref="0x102248cc8"/>
        <function-ref name="toggle" scoped="" ref="0x102248e50"/>
        <function-ref name="isOutput" scoped="" ref="0x102247020"/>
        <function-ref name="getResistor" scoped="" ref="0x1022471a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x102247330"/>
        <function-ref name="get" scoped="" ref="0x1022474b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x102247640"/>
        <function-ref name="getRaw" scoped="" ref="0x1022477c8"/>
        <function-ref name="set" scoped="" ref="0x102247950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x102247ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x102247c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x102246020"/>
        <function-ref name="clr" scoped="" ref="0x1022461a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x102263568" loc="64:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x102263568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1022639b8"/>
        <function-ref name="isInput" scoped="" ref="0x102263b40"/>
        <function-ref name="setResistor" scoped="" ref="0x102263cc8"/>
        <function-ref name="toggle" scoped="" ref="0x102263e50"/>
        <function-ref name="isOutput" scoped="" ref="0x102262020"/>
        <function-ref name="getResistor" scoped="" ref="0x1022621a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x102262330"/>
        <function-ref name="get" scoped="" ref="0x1022624b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x102262640"/>
        <function-ref name="getRaw" scoped="" ref="0x1022627c8"/>
        <function-ref name="set" scoped="" ref="0x102262950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x102262ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x102262c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x102261020"/>
        <function-ref name="clr" scoped="" ref="0x1022611a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port36" ref="0x10224f568" loc="77:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port36" scoped="" ref="0x10224f568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10224f8b8"/>
        <function-ref name="isInput" scoped="" ref="0x10224fa40"/>
        <function-ref name="setResistor" scoped="" ref="0x10224fbc8"/>
        <function-ref name="toggle" scoped="" ref="0x10224fd50"/>
        <function-ref name="isOutput" scoped="" ref="0x10224e020"/>
        <function-ref name="getResistor" scoped="" ref="0x10224e1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10224e330"/>
        <function-ref name="get" scoped="" ref="0x10224e4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10224e640"/>
        <function-ref name="getRaw" scoped="" ref="0x10224e7c8"/>
        <function-ref name="set" scoped="" ref="0x10224e950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10224ead8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10224ec60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10224d020"/>
        <function-ref name="clr" scoped="" ref="0x10224d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO0" ref="0x1022a9970" loc="144:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO0" scoped="" ref="0x1022a9970"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1022a9cc0"/>
        <function-ref name="isInput" scoped="" ref="0x1022a9e48"/>
        <function-ref name="setResistor" scoped="" ref="0x1022a8020"/>
        <function-ref name="toggle" scoped="" ref="0x1022a81a8"/>
        <function-ref name="isOutput" scoped="" ref="0x1022a8330"/>
        <function-ref name="getResistor" scoped="" ref="0x1022a84b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x1022a8640"/>
        <function-ref name="get" scoped="" ref="0x1022a87c8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1022a8950"/>
        <function-ref name="getRaw" scoped="" ref="0x1022a8ad8"/>
        <function-ref name="set" scoped="" ref="0x1022a8c60"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1022a8de8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1022a7020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1022a72a8"/>
        <function-ref name="clr" scoped="" ref="0x1022a7430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC3" ref="0x1022ba558" loc="162:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC3" scoped="" ref="0x1022ba558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1022ba8a8"/>
        <function-ref name="isInput" scoped="" ref="0x1022baa30"/>
        <function-ref name="setResistor" scoped="" ref="0x1022babb8"/>
        <function-ref name="toggle" scoped="" ref="0x1022bad40"/>
        <function-ref name="isOutput" scoped="" ref="0x1022b9020"/>
        <function-ref name="getResistor" scoped="" ref="0x1022b91a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x1022b9330"/>
        <function-ref name="get" scoped="" ref="0x1022b94b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1022b9640"/>
        <function-ref name="getRaw" scoped="" ref="0x1022b97c8"/>
        <function-ref name="set" scoped="" ref="0x1022b9950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1022b9ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1022b9c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1022b8020"/>
        <function-ref name="clr" scoped="" ref="0x1022b81a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC1" ref="0x1022ae558" loc="169:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC1" scoped="" ref="0x1022ae558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1022ae8a8"/>
        <function-ref name="isInput" scoped="" ref="0x1022aea30"/>
        <function-ref name="setResistor" scoped="" ref="0x1022aebb8"/>
        <function-ref name="toggle" scoped="" ref="0x1022aed40"/>
        <function-ref name="isOutput" scoped="" ref="0x1022df020"/>
        <function-ref name="getResistor" scoped="" ref="0x1022df1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x1022df330"/>
        <function-ref name="get" scoped="" ref="0x1022df4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1022df640"/>
        <function-ref name="getRaw" scoped="" ref="0x1022df7c8"/>
        <function-ref name="set" scoped="" ref="0x1022df950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1022dfad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1022dfc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1022de020"/>
        <function-ref name="clr" scoped="" ref="0x1022de1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK1" ref="0x1022c6560" loc="155:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK1" scoped="" ref="0x1022c6560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1022c68b0"/>
        <function-ref name="isInput" scoped="" ref="0x1022c6a38"/>
        <function-ref name="setResistor" scoped="" ref="0x1022c6bc0"/>
        <function-ref name="toggle" scoped="" ref="0x1022c6d48"/>
        <function-ref name="isOutput" scoped="" ref="0x1022c5020"/>
        <function-ref name="getResistor" scoped="" ref="0x1022c51a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x1022c5330"/>
        <function-ref name="get" scoped="" ref="0x1022c54b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1022c5640"/>
        <function-ref name="getRaw" scoped="" ref="0x1022c57c8"/>
        <function-ref name="set" scoped="" ref="0x1022c5950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1022c5ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1022c5c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1022c4020"/>
        <function-ref name="clr" scoped="" ref="0x1022c41a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port40" ref="0x10227b568" loc="82:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port40" scoped="" ref="0x10227b568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10227bab8"/>
        <function-ref name="isInput" scoped="" ref="0x10227bc40"/>
        <function-ref name="setResistor" scoped="" ref="0x10227bdc8"/>
        <function-ref name="toggle" scoped="" ref="0x10227a020"/>
        <function-ref name="isOutput" scoped="" ref="0x10227a1a8"/>
        <function-ref name="getResistor" scoped="" ref="0x10227a330"/>
        <function-ref name="makeOutput" scoped="" ref="0x10227a4b8"/>
        <function-ref name="get" scoped="" ref="0x10227a640"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10227a7c8"/>
        <function-ref name="getRaw" scoped="" ref="0x10227a950"/>
        <function-ref name="set" scoped="" ref="0x10227aad8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10227ac60"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10227ade8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x102279120"/>
        <function-ref name="clr" scoped="" ref="0x1022792a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port52" ref="0x102266568" loc="95:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port52" scoped="" ref="0x102266568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1022668b8"/>
        <function-ref name="isInput" scoped="" ref="0x102266a40"/>
        <function-ref name="setResistor" scoped="" ref="0x102266bc8"/>
        <function-ref name="toggle" scoped="" ref="0x102266d50"/>
        <function-ref name="isOutput" scoped="" ref="0x102265020"/>
        <function-ref name="getResistor" scoped="" ref="0x1022651a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x102265330"/>
        <function-ref name="get" scoped="" ref="0x1022654b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x102265640"/>
        <function-ref name="getRaw" scoped="" ref="0x1022657c8"/>
        <function-ref name="set" scoped="" ref="0x102265950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x102265ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x102265c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x102294020"/>
        <function-ref name="clr" scoped="" ref="0x1022941a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port62" ref="0x102286568" loc="106:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0x102286568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1022868b8"/>
        <function-ref name="isInput" scoped="" ref="0x102286a40"/>
        <function-ref name="setResistor" scoped="" ref="0x102286bc8"/>
        <function-ref name="toggle" scoped="" ref="0x102286d50"/>
        <function-ref name="isOutput" scoped="" ref="0x102285020"/>
        <function-ref name="getResistor" scoped="" ref="0x1022851a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x102285330"/>
        <function-ref name="get" scoped="" ref="0x1022854b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x102285640"/>
        <function-ref name="getRaw" scoped="" ref="0x1022857c8"/>
        <function-ref name="set" scoped="" ref="0x102285950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x102285ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x102285c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x102284020"/>
        <function-ref name="clr" scoped="" ref="0x1022841a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC4" ref="0x1022b8558" loc="163:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC4" scoped="" ref="0x1022b8558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1022b88a8"/>
        <function-ref name="isInput" scoped="" ref="0x1022b8a30"/>
        <function-ref name="setResistor" scoped="" ref="0x1022b8bb8"/>
        <function-ref name="toggle" scoped="" ref="0x1022b8d40"/>
        <function-ref name="isOutput" scoped="" ref="0x1022b7020"/>
        <function-ref name="getResistor" scoped="" ref="0x1022b71a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x1022b7330"/>
        <function-ref name="get" scoped="" ref="0x1022b74b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1022b7640"/>
        <function-ref name="getRaw" scoped="" ref="0x1022b77c8"/>
        <function-ref name="set" scoped="" ref="0x1022b7950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1022b7ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1022b7c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1022b6020"/>
        <function-ref name="clr" scoped="" ref="0x1022b61a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE1" ref="0x10229a558" loc="152:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE1" scoped="" ref="0x10229a558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10229a8a8"/>
        <function-ref name="isInput" scoped="" ref="0x10229aa30"/>
        <function-ref name="setResistor" scoped="" ref="0x10229abb8"/>
        <function-ref name="toggle" scoped="" ref="0x10229ad40"/>
        <function-ref name="isOutput" scoped="" ref="0x102299020"/>
        <function-ref name="getResistor" scoped="" ref="0x1022991a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x102299330"/>
        <function-ref name="get" scoped="" ref="0x1022994b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x102299640"/>
        <function-ref name="getRaw" scoped="" ref="0x1022997c8"/>
        <function-ref name="set" scoped="" ref="0x102299950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x102299ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x102299c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x102298020"/>
        <function-ref name="clr" scoped="" ref="0x1022981a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x102242568" loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x102242568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1022428b8"/>
        <function-ref name="isInput" scoped="" ref="0x102242a40"/>
        <function-ref name="setResistor" scoped="" ref="0x102242bc8"/>
        <function-ref name="toggle" scoped="" ref="0x102242d50"/>
        <function-ref name="isOutput" scoped="" ref="0x102240020"/>
        <function-ref name="getResistor" scoped="" ref="0x1022401a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x102240330"/>
        <function-ref name="get" scoped="" ref="0x1022404b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x102240640"/>
        <function-ref name="getRaw" scoped="" ref="0x1022407c8"/>
        <function-ref name="set" scoped="" ref="0x102240950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x102240ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x102240c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10223f020"/>
        <function-ref name="clr" scoped="" ref="0x10223f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x10225d568" loc="67:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x10225d568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10225d8b8"/>
        <function-ref name="isInput" scoped="" ref="0x10225da40"/>
        <function-ref name="setResistor" scoped="" ref="0x10225dbc8"/>
        <function-ref name="toggle" scoped="" ref="0x10225dd50"/>
        <function-ref name="isOutput" scoped="" ref="0x10225c020"/>
        <function-ref name="getResistor" scoped="" ref="0x10225c1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10225c330"/>
        <function-ref name="get" scoped="" ref="0x10225c4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10225c640"/>
        <function-ref name="getRaw" scoped="" ref="0x10225c7c8"/>
        <function-ref name="set" scoped="" ref="0x10225c950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10225cad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10225cc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10225b020"/>
        <function-ref name="clr" scoped="" ref="0x10225b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port60" ref="0x10228a568" loc="104:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0x10228a568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10228a8b8"/>
        <function-ref name="isInput" scoped="" ref="0x10228aa40"/>
        <function-ref name="setResistor" scoped="" ref="0x10228abc8"/>
        <function-ref name="toggle" scoped="" ref="0x10228ad50"/>
        <function-ref name="isOutput" scoped="" ref="0x102289020"/>
        <function-ref name="getResistor" scoped="" ref="0x1022891a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x102289330"/>
        <function-ref name="get" scoped="" ref="0x1022894b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x102289640"/>
        <function-ref name="getRaw" scoped="" ref="0x1022897c8"/>
        <function-ref name="set" scoped="" ref="0x102289950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x102289ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x102289c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x102288020"/>
        <function-ref name="clr" scoped="" ref="0x1022881a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port31" ref="0x102259568" loc="72:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port31" scoped="" ref="0x102259568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1022598b8"/>
        <function-ref name="isInput" scoped="" ref="0x102259a40"/>
        <function-ref name="setResistor" scoped="" ref="0x102259bc8"/>
        <function-ref name="toggle" scoped="" ref="0x102259d50"/>
        <function-ref name="isOutput" scoped="" ref="0x102258020"/>
        <function-ref name="getResistor" scoped="" ref="0x1022581a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x102258330"/>
        <function-ref name="get" scoped="" ref="0x1022584b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x102258640"/>
        <function-ref name="getRaw" scoped="" ref="0x1022587c8"/>
        <function-ref name="set" scoped="" ref="0x102258950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x102258ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x102258c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x102257020"/>
        <function-ref name="clr" scoped="" ref="0x1022571a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port43" ref="0x102275568" loc="85:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port43" scoped="" ref="0x102275568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1022758b8"/>
        <function-ref name="isInput" scoped="" ref="0x102275a40"/>
        <function-ref name="setResistor" scoped="" ref="0x102275bc8"/>
        <function-ref name="toggle" scoped="" ref="0x102275d50"/>
        <function-ref name="isOutput" scoped="" ref="0x102274020"/>
        <function-ref name="getResistor" scoped="" ref="0x1022741a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x102274330"/>
        <function-ref name="get" scoped="" ref="0x1022744b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x102274640"/>
        <function-ref name="getRaw" scoped="" ref="0x1022747c8"/>
        <function-ref name="set" scoped="" ref="0x102274950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x102274ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x102274c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x102273020"/>
        <function-ref name="clr" scoped="" ref="0x1022731a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port55" ref="0x102290568" loc="98:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port55" scoped="" ref="0x102290568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1022908b8"/>
        <function-ref name="isInput" scoped="" ref="0x102290a40"/>
        <function-ref name="setResistor" scoped="" ref="0x102290bc8"/>
        <function-ref name="toggle" scoped="" ref="0x102290d50"/>
        <function-ref name="isOutput" scoped="" ref="0x10228f020"/>
        <function-ref name="getResistor" scoped="" ref="0x10228f1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10228f330"/>
        <function-ref name="get" scoped="" ref="0x10228f4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10228f640"/>
        <function-ref name="getRaw" scoped="" ref="0x10228f7c8"/>
        <function-ref name="set" scoped="" ref="0x10228f950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10228fad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10228fc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10228e020"/>
        <function-ref name="clr" scoped="" ref="0x10228e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port65" ref="0x102280568" loc="109:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0x102280568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1022808b8"/>
        <function-ref name="isInput" scoped="" ref="0x102280a40"/>
        <function-ref name="setResistor" scoped="" ref="0x102280bc8"/>
        <function-ref name="toggle" scoped="" ref="0x102280d50"/>
        <function-ref name="isOutput" scoped="" ref="0x10227f020"/>
        <function-ref name="getResistor" scoped="" ref="0x10227f1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10227f330"/>
        <function-ref name="get" scoped="" ref="0x10227f4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10227f640"/>
        <function-ref name="getRaw" scoped="" ref="0x10227f7c8"/>
        <function-ref name="set" scoped="" ref="0x10227f950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10227fad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10227fc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10227e020"/>
        <function-ref name="clr" scoped="" ref="0x10227e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI1" ref="0x102296560" loc="154:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI1" scoped="" ref="0x102296560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1022968b0"/>
        <function-ref name="isInput" scoped="" ref="0x102296a38"/>
        <function-ref name="setResistor" scoped="" ref="0x102296bc0"/>
        <function-ref name="toggle" scoped="" ref="0x102296d48"/>
        <function-ref name="isOutput" scoped="" ref="0x102295020"/>
        <function-ref name="getResistor" scoped="" ref="0x1022951a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x102295330"/>
        <function-ref name="get" scoped="" ref="0x1022954b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x102295640"/>
        <function-ref name="getRaw" scoped="" ref="0x1022957c8"/>
        <function-ref name="set" scoped="" ref="0x102295950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x102295ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x102295c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1022c6020"/>
        <function-ref name="clr" scoped="" ref="0x1022c61a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x10224a950" loc="49:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x10224a950"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10224aca0"/>
        <function-ref name="isInput" scoped="" ref="0x10224ae28"/>
        <function-ref name="setResistor" scoped="" ref="0x102224020"/>
        <function-ref name="toggle" scoped="" ref="0x1022241a8"/>
        <function-ref name="isOutput" scoped="" ref="0x102224330"/>
        <function-ref name="getResistor" scoped="" ref="0x1022244b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x102224640"/>
        <function-ref name="get" scoped="" ref="0x1022247c8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x102224950"/>
        <function-ref name="getRaw" scoped="" ref="0x102224ad8"/>
        <function-ref name="set" scoped="" ref="0x102224c60"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x102224de8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x102223020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1022232a8"/>
        <function-ref name="clr" scoped="" ref="0x102223430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x102237568" loc="62:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x102237568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1022378b8"/>
        <function-ref name="isInput" scoped="" ref="0x102237a40"/>
        <function-ref name="setResistor" scoped="" ref="0x102237bc8"/>
        <function-ref name="toggle" scoped="" ref="0x102237d50"/>
        <function-ref name="isOutput" scoped="" ref="0x102236020"/>
        <function-ref name="getResistor" scoped="" ref="0x1022361a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x102236330"/>
        <function-ref name="get" scoped="" ref="0x1022364b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x102236640"/>
        <function-ref name="getRaw" scoped="" ref="0x1022367c8"/>
        <function-ref name="set" scoped="" ref="0x102236950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x102236ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x102236c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x102235020"/>
        <function-ref name="clr" scoped="" ref="0x1022351a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port34" ref="0x102253568" loc="75:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port34" scoped="" ref="0x102253568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1022538b8"/>
        <function-ref name="isInput" scoped="" ref="0x102253a40"/>
        <function-ref name="setResistor" scoped="" ref="0x102253bc8"/>
        <function-ref name="toggle" scoped="" ref="0x102253d50"/>
        <function-ref name="isOutput" scoped="" ref="0x102252020"/>
        <function-ref name="getResistor" scoped="" ref="0x1022521a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x102252330"/>
        <function-ref name="get" scoped="" ref="0x1022524b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x102252640"/>
        <function-ref name="getRaw" scoped="" ref="0x1022527c8"/>
        <function-ref name="set" scoped="" ref="0x102252950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x102252ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x102252c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x102251020"/>
        <function-ref name="clr" scoped="" ref="0x1022511a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port46" ref="0x10226e568" loc="88:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port46" scoped="" ref="0x10226e568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10226e8b8"/>
        <function-ref name="isInput" scoped="" ref="0x10226ea40"/>
        <function-ref name="setResistor" scoped="" ref="0x10226ebc8"/>
        <function-ref name="toggle" scoped="" ref="0x10226ed50"/>
        <function-ref name="isOutput" scoped="" ref="0x10226d020"/>
        <function-ref name="getResistor" scoped="" ref="0x10226d1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10226d330"/>
        <function-ref name="get" scoped="" ref="0x10226d4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10226d640"/>
        <function-ref name="getRaw" scoped="" ref="0x10226d7c8"/>
        <function-ref name="set" scoped="" ref="0x10226d950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10226dad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10226dc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10226c020"/>
        <function-ref name="clr" scoped="" ref="0x10226c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD1" ref="0x1022c4560" loc="156:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD1" scoped="" ref="0x1022c4560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1022c48b0"/>
        <function-ref name="isInput" scoped="" ref="0x1022c4a38"/>
        <function-ref name="setResistor" scoped="" ref="0x1022c4bc0"/>
        <function-ref name="toggle" scoped="" ref="0x1022c4d48"/>
        <function-ref name="isOutput" scoped="" ref="0x1022c3020"/>
        <function-ref name="getResistor" scoped="" ref="0x1022c31a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x1022c3330"/>
        <function-ref name="get" scoped="" ref="0x1022c34b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1022c3640"/>
        <function-ref name="getRaw" scoped="" ref="0x1022c37c8"/>
        <function-ref name="set" scoped="" ref="0x1022c3950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1022c3ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1022c3c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1022c2020"/>
        <function-ref name="clr" scoped="" ref="0x1022c21a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC1" ref="0x1022be558" loc="160:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC1" scoped="" ref="0x1022be558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1022be8a8"/>
        <function-ref name="isInput" scoped="" ref="0x1022bea30"/>
        <function-ref name="setResistor" scoped="" ref="0x1022bebb8"/>
        <function-ref name="toggle" scoped="" ref="0x1022bed40"/>
        <function-ref name="isOutput" scoped="" ref="0x1022bd020"/>
        <function-ref name="getResistor" scoped="" ref="0x1022bd1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x1022bd330"/>
        <function-ref name="get" scoped="" ref="0x1022bd4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1022bd640"/>
        <function-ref name="getRaw" scoped="" ref="0x1022bd7c8"/>
        <function-ref name="set" scoped="" ref="0x1022bd950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1022bdad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1022bdc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1022bc020"/>
        <function-ref name="clr" scoped="" ref="0x1022bc1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC7" ref="0x1022b2558" loc="166:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC7" scoped="" ref="0x1022b2558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1022b28a8"/>
        <function-ref name="isInput" scoped="" ref="0x1022b2a30"/>
        <function-ref name="setResistor" scoped="" ref="0x1022b2bb8"/>
        <function-ref name="toggle" scoped="" ref="0x1022b2d40"/>
        <function-ref name="isOutput" scoped="" ref="0x1022b1020"/>
        <function-ref name="getResistor" scoped="" ref="0x1022b11a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x1022b1330"/>
        <function-ref name="get" scoped="" ref="0x1022b14b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1022b1640"/>
        <function-ref name="getRaw" scoped="" ref="0x1022b17c8"/>
        <function-ref name="set" scoped="" ref="0x1022b1950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1022b1ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1022b1c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1022b0020"/>
        <function-ref name="clr" scoped="" ref="0x1022b01a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port50" ref="0x10226a568" loc="93:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port50" scoped="" ref="0x10226a568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10226a8b8"/>
        <function-ref name="isInput" scoped="" ref="0x10226aa40"/>
        <function-ref name="setResistor" scoped="" ref="0x10226abc8"/>
        <function-ref name="toggle" scoped="" ref="0x10226ad50"/>
        <function-ref name="isOutput" scoped="" ref="0x102269020"/>
        <function-ref name="getResistor" scoped="" ref="0x1022691a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x102269330"/>
        <function-ref name="get" scoped="" ref="0x1022694b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x102269640"/>
        <function-ref name="getRaw" scoped="" ref="0x1022697c8"/>
        <function-ref name="set" scoped="" ref="0x102269950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x102269ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x102269c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x102268020"/>
        <function-ref name="clr" scoped="" ref="0x1022681a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD1" ref="0x1022c2560" loc="157:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD1" scoped="" ref="0x1022c2560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1022c28b0"/>
        <function-ref name="isInput" scoped="" ref="0x1022c2a38"/>
        <function-ref name="setResistor" scoped="" ref="0x1022c2bc0"/>
        <function-ref name="toggle" scoped="" ref="0x1022c2d48"/>
        <function-ref name="isOutput" scoped="" ref="0x1022c1020"/>
        <function-ref name="getResistor" scoped="" ref="0x1022c11a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x1022c1330"/>
        <function-ref name="get" scoped="" ref="0x1022c14b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1022c1640"/>
        <function-ref name="getRaw" scoped="" ref="0x1022c17c8"/>
        <function-ref name="set" scoped="" ref="0x1022c1950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1022c1ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1022c1c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1022c0020"/>
        <function-ref name="clr" scoped="" ref="0x1022c01a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x102246568" loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x102246568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1022468b8"/>
        <function-ref name="isInput" scoped="" ref="0x102246a40"/>
        <function-ref name="setResistor" scoped="" ref="0x102246bc8"/>
        <function-ref name="toggle" scoped="" ref="0x102246d50"/>
        <function-ref name="isOutput" scoped="" ref="0x102245020"/>
        <function-ref name="getResistor" scoped="" ref="0x1022451a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x102245330"/>
        <function-ref name="get" scoped="" ref="0x1022454b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x102245640"/>
        <function-ref name="getRaw" scoped="" ref="0x1022457c8"/>
        <function-ref name="set" scoped="" ref="0x102245950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x102245ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x102245c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x102244020"/>
        <function-ref name="clr" scoped="" ref="0x1022441a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x102261568" loc="65:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x102261568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1022618b8"/>
        <function-ref name="isInput" scoped="" ref="0x102261a40"/>
        <function-ref name="setResistor" scoped="" ref="0x102261bc8"/>
        <function-ref name="toggle" scoped="" ref="0x102261d50"/>
        <function-ref name="isOutput" scoped="" ref="0x102260020"/>
        <function-ref name="getResistor" scoped="" ref="0x1022601a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x102260330"/>
        <function-ref name="get" scoped="" ref="0x1022604b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x102260640"/>
        <function-ref name="getRaw" scoped="" ref="0x1022607c8"/>
        <function-ref name="set" scoped="" ref="0x102260950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x102260ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x102260c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10225f020"/>
        <function-ref name="clr" scoped="" ref="0x10225f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port37" ref="0x10224d568" loc="78:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port37" scoped="" ref="0x10224d568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10224d8b8"/>
        <function-ref name="isInput" scoped="" ref="0x10224da40"/>
        <function-ref name="setResistor" scoped="" ref="0x10224dbc8"/>
        <function-ref name="toggle" scoped="" ref="0x10224dd50"/>
        <function-ref name="isOutput" scoped="" ref="0x10227c020"/>
        <function-ref name="getResistor" scoped="" ref="0x10227c1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10227c330"/>
        <function-ref name="get" scoped="" ref="0x10227c4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10227c640"/>
        <function-ref name="getRaw" scoped="" ref="0x10227c7c8"/>
        <function-ref name="set" scoped="" ref="0x10227c950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10227cad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10227cc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10227b020"/>
        <function-ref name="clr" scoped="" ref="0x10227b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO1" ref="0x102298560" loc="153:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO1" scoped="" ref="0x102298560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1022988b0"/>
        <function-ref name="isInput" scoped="" ref="0x102298a38"/>
        <function-ref name="setResistor" scoped="" ref="0x102298bc0"/>
        <function-ref name="toggle" scoped="" ref="0x102298d48"/>
        <function-ref name="isOutput" scoped="" ref="0x102297020"/>
        <function-ref name="getResistor" scoped="" ref="0x1022971a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x102297330"/>
        <function-ref name="get" scoped="" ref="0x1022974b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x102297640"/>
        <function-ref name="getRaw" scoped="" ref="0x1022977c8"/>
        <function-ref name="set" scoped="" ref="0x102297950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x102297ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x102297c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x102296020"/>
        <function-ref name="clr" scoped="" ref="0x1022961a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC5" ref="0x1022b6558" loc="164:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC5" scoped="" ref="0x1022b6558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1022b68a8"/>
        <function-ref name="isInput" scoped="" ref="0x1022b6a30"/>
        <function-ref name="setResistor" scoped="" ref="0x1022b6bb8"/>
        <function-ref name="toggle" scoped="" ref="0x1022b6d40"/>
        <function-ref name="isOutput" scoped="" ref="0x1022b5020"/>
        <function-ref name="getResistor" scoped="" ref="0x1022b51a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x1022b5330"/>
        <function-ref name="get" scoped="" ref="0x1022b54b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1022b5640"/>
        <function-ref name="getRaw" scoped="" ref="0x1022b57c8"/>
        <function-ref name="set" scoped="" ref="0x1022b5950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1022b5ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1022b5c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1022b4020"/>
        <function-ref name="clr" scoped="" ref="0x1022b41a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port41" ref="0x102279668" loc="83:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port41" scoped="" ref="0x102279668"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1022799b8"/>
        <function-ref name="isInput" scoped="" ref="0x102279b40"/>
        <function-ref name="setResistor" scoped="" ref="0x102279cc8"/>
        <function-ref name="toggle" scoped="" ref="0x102279e50"/>
        <function-ref name="isOutput" scoped="" ref="0x102278020"/>
        <function-ref name="getResistor" scoped="" ref="0x1022781a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x102278330"/>
        <function-ref name="get" scoped="" ref="0x1022784b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x102278640"/>
        <function-ref name="getRaw" scoped="" ref="0x1022787c8"/>
        <function-ref name="set" scoped="" ref="0x102278950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x102278ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x102278c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x102277020"/>
        <function-ref name="clr" scoped="" ref="0x1022771a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port53" ref="0x102294568" loc="96:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port53" scoped="" ref="0x102294568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1022948b8"/>
        <function-ref name="isInput" scoped="" ref="0x102294a40"/>
        <function-ref name="setResistor" scoped="" ref="0x102294bc8"/>
        <function-ref name="toggle" scoped="" ref="0x102294d50"/>
        <function-ref name="isOutput" scoped="" ref="0x102293020"/>
        <function-ref name="getResistor" scoped="" ref="0x1022931a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x102293330"/>
        <function-ref name="get" scoped="" ref="0x1022934b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x102293640"/>
        <function-ref name="getRaw" scoped="" ref="0x1022937c8"/>
        <function-ref name="set" scoped="" ref="0x102293950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x102293ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x102293c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x102292020"/>
        <function-ref name="clr" scoped="" ref="0x1022921a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port63" ref="0x102284568" loc="107:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0x102284568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1022848b8"/>
        <function-ref name="isInput" scoped="" ref="0x102284a40"/>
        <function-ref name="setResistor" scoped="" ref="0x102284bc8"/>
        <function-ref name="toggle" scoped="" ref="0x102284d50"/>
        <function-ref name="isOutput" scoped="" ref="0x102283020"/>
        <function-ref name="getResistor" scoped="" ref="0x1022831a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x102283330"/>
        <function-ref name="get" scoped="" ref="0x1022834b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x102283640"/>
        <function-ref name="getRaw" scoped="" ref="0x1022837c8"/>
        <function-ref name="set" scoped="" ref="0x102283950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x102283ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x102283c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x102282020"/>
        <function-ref name="clr" scoped="" ref="0x1022821a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x10223f568" loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x10223f568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10223f8b8"/>
        <function-ref name="isInput" scoped="" ref="0x10223fa40"/>
        <function-ref name="setResistor" scoped="" ref="0x10223fbc8"/>
        <function-ref name="toggle" scoped="" ref="0x10223fd50"/>
        <function-ref name="isOutput" scoped="" ref="0x10223e020"/>
        <function-ref name="getResistor" scoped="" ref="0x10223e1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10223e330"/>
        <function-ref name="get" scoped="" ref="0x10223e4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10223e640"/>
        <function-ref name="getRaw" scoped="" ref="0x10223e7c8"/>
        <function-ref name="set" scoped="" ref="0x10223e950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10223ead8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10223ec60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10223d020"/>
        <function-ref name="clr" scoped="" ref="0x10223d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port61" ref="0x102288568" loc="105:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0x102288568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1022888b8"/>
        <function-ref name="isInput" scoped="" ref="0x102288a40"/>
        <function-ref name="setResistor" scoped="" ref="0x102288bc8"/>
        <function-ref name="toggle" scoped="" ref="0x102288d50"/>
        <function-ref name="isOutput" scoped="" ref="0x102287020"/>
        <function-ref name="getResistor" scoped="" ref="0x1022871a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x102287330"/>
        <function-ref name="get" scoped="" ref="0x1022874b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x102287640"/>
        <function-ref name="getRaw" scoped="" ref="0x1022877c8"/>
        <function-ref name="set" scoped="" ref="0x102287950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x102287ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x102287c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x102286020"/>
        <function-ref name="clr" scoped="" ref="0x1022861a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x10223b568" loc="60:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x10223b568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10223b8b8"/>
        <function-ref name="isInput" scoped="" ref="0x10223ba40"/>
        <function-ref name="setResistor" scoped="" ref="0x10223bbc8"/>
        <function-ref name="toggle" scoped="" ref="0x10223bd50"/>
        <function-ref name="isOutput" scoped="" ref="0x10223a020"/>
        <function-ref name="getResistor" scoped="" ref="0x10223a1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10223a330"/>
        <function-ref name="get" scoped="" ref="0x10223a4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10223a640"/>
        <function-ref name="getRaw" scoped="" ref="0x10223a7c8"/>
        <function-ref name="set" scoped="" ref="0x10223a950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10223aad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10223ac60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x102239020"/>
        <function-ref name="clr" scoped="" ref="0x1022391a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port32" ref="0x102257568" loc="73:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port32" scoped="" ref="0x102257568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1022578b8"/>
        <function-ref name="isInput" scoped="" ref="0x102257a40"/>
        <function-ref name="setResistor" scoped="" ref="0x102257bc8"/>
        <function-ref name="toggle" scoped="" ref="0x102257d50"/>
        <function-ref name="isOutput" scoped="" ref="0x102256020"/>
        <function-ref name="getResistor" scoped="" ref="0x1022561a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x102256330"/>
        <function-ref name="get" scoped="" ref="0x1022564b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x102256640"/>
        <function-ref name="getRaw" scoped="" ref="0x1022567c8"/>
        <function-ref name="set" scoped="" ref="0x102256950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x102256ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x102256c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x102255020"/>
        <function-ref name="clr" scoped="" ref="0x1022551a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port44" ref="0x102273568" loc="86:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port44" scoped="" ref="0x102273568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1022738b8"/>
        <function-ref name="isInput" scoped="" ref="0x102273a40"/>
        <function-ref name="setResistor" scoped="" ref="0x102273bc8"/>
        <function-ref name="toggle" scoped="" ref="0x102273d50"/>
        <function-ref name="isOutput" scoped="" ref="0x102271020"/>
        <function-ref name="getResistor" scoped="" ref="0x1022711a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x102271330"/>
        <function-ref name="get" scoped="" ref="0x1022714b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x102271640"/>
        <function-ref name="getRaw" scoped="" ref="0x1022717c8"/>
        <function-ref name="set" scoped="" ref="0x102271950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x102271ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x102271c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x102270020"/>
        <function-ref name="clr" scoped="" ref="0x1022701a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port56" ref="0x10228e568" loc="99:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port56" scoped="" ref="0x10228e568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10228e8b8"/>
        <function-ref name="isInput" scoped="" ref="0x10228ea40"/>
        <function-ref name="setResistor" scoped="" ref="0x10228ebc8"/>
        <function-ref name="toggle" scoped="" ref="0x10228ed50"/>
        <function-ref name="isOutput" scoped="" ref="0x10228d020"/>
        <function-ref name="getResistor" scoped="" ref="0x10228d1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10228d330"/>
        <function-ref name="get" scoped="" ref="0x10228d4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10228d640"/>
        <function-ref name="getRaw" scoped="" ref="0x10228d7c8"/>
        <function-ref name="set" scoped="" ref="0x10228d950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10228dad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10228dc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10228c020"/>
        <function-ref name="clr" scoped="" ref="0x10228c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port66" ref="0x10227e568" loc="110:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0x10227e568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10227e8b8"/>
        <function-ref name="isInput" scoped="" ref="0x10227ea40"/>
        <function-ref name="setResistor" scoped="" ref="0x10227ebc8"/>
        <function-ref name="toggle" scoped="" ref="0x10227ed50"/>
        <function-ref name="isOutput" scoped="" ref="0x10227d020"/>
        <function-ref name="getResistor" scoped="" ref="0x10227d1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10227d330"/>
        <function-ref name="get" scoped="" ref="0x10227d4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10227d640"/>
        <function-ref name="getRaw" scoped="" ref="0x10227d7c8"/>
        <function-ref name="set" scoped="" ref="0x10227d950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10227dad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10227dc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1022ad020"/>
        <function-ref name="clr" scoped="" ref="0x1022ad1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x1022237f0" loc="50:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x1022237f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x102223b40"/>
        <function-ref name="isInput" scoped="" ref="0x102223cc8"/>
        <function-ref name="setResistor" scoped="" ref="0x102223e50"/>
        <function-ref name="toggle" scoped="" ref="0x102249020"/>
        <function-ref name="isOutput" scoped="" ref="0x1022491a8"/>
        <function-ref name="getResistor" scoped="" ref="0x102249330"/>
        <function-ref name="makeOutput" scoped="" ref="0x1022494b8"/>
        <function-ref name="get" scoped="" ref="0x102249640"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1022497c8"/>
        <function-ref name="getRaw" scoped="" ref="0x102249950"/>
        <function-ref name="set" scoped="" ref="0x102249ad8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x102249c60"/>
        <function-ref name="isIOFunc" scoped="" ref="0x102249de8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x102248120"/>
        <function-ref name="clr" scoped="" ref="0x1022482a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x102235568" loc="63:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x102235568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1022358b8"/>
        <function-ref name="isInput" scoped="" ref="0x102235a40"/>
        <function-ref name="setResistor" scoped="" ref="0x102235bc8"/>
        <function-ref name="toggle" scoped="" ref="0x102235d50"/>
        <function-ref name="isOutput" scoped="" ref="0x102264020"/>
        <function-ref name="getResistor" scoped="" ref="0x1022641a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x102264330"/>
        <function-ref name="get" scoped="" ref="0x1022644b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x102264640"/>
        <function-ref name="getRaw" scoped="" ref="0x1022647c8"/>
        <function-ref name="set" scoped="" ref="0x102264950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x102264ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x102264c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x102263020"/>
        <function-ref name="clr" scoped="" ref="0x1022631a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port35" ref="0x102251568" loc="76:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port35" scoped="" ref="0x102251568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1022518b8"/>
        <function-ref name="isInput" scoped="" ref="0x102251a40"/>
        <function-ref name="setResistor" scoped="" ref="0x102251bc8"/>
        <function-ref name="toggle" scoped="" ref="0x102251d50"/>
        <function-ref name="isOutput" scoped="" ref="0x102250020"/>
        <function-ref name="getResistor" scoped="" ref="0x1022501a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x102250330"/>
        <function-ref name="get" scoped="" ref="0x1022504b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x102250640"/>
        <function-ref name="getRaw" scoped="" ref="0x1022507c8"/>
        <function-ref name="set" scoped="" ref="0x102250950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x102250ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x102250c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10224f020"/>
        <function-ref name="clr" scoped="" ref="0x10224f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port47" ref="0x10226c568" loc="89:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port47" scoped="" ref="0x10226c568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10226c8b8"/>
        <function-ref name="isInput" scoped="" ref="0x10226ca40"/>
        <function-ref name="setResistor" scoped="" ref="0x10226cbc8"/>
        <function-ref name="toggle" scoped="" ref="0x10226cd50"/>
        <function-ref name="isOutput" scoped="" ref="0x10226b020"/>
        <function-ref name="getResistor" scoped="" ref="0x10226b1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10226b330"/>
        <function-ref name="get" scoped="" ref="0x10226b4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10226b640"/>
        <function-ref name="getRaw" scoped="" ref="0x10226b7c8"/>
        <function-ref name="set" scoped="" ref="0x10226b950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10226bad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10226bc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10226a020"/>
        <function-ref name="clr" scoped="" ref="0x10226a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCL" ref="0x1022a0548" loc="148:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCL" scoped="" ref="0x1022a0548"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1022a0898"/>
        <function-ref name="isInput" scoped="" ref="0x1022a0a20"/>
        <function-ref name="setResistor" scoped="" ref="0x1022a0ba8"/>
        <function-ref name="toggle" scoped="" ref="0x1022a0d30"/>
        <function-ref name="isOutput" scoped="" ref="0x10229f020"/>
        <function-ref name="getResistor" scoped="" ref="0x10229f1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10229f330"/>
        <function-ref name="get" scoped="" ref="0x10229f4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10229f640"/>
        <function-ref name="getRaw" scoped="" ref="0x10229f7c8"/>
        <function-ref name="set" scoped="" ref="0x10229f950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10229fad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10229fc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10229e020"/>
        <function-ref name="clr" scoped="" ref="0x10229e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC2" ref="0x1022bc558" loc="161:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC2" scoped="" ref="0x1022bc558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1022bc8a8"/>
        <function-ref name="isInput" scoped="" ref="0x1022bca30"/>
        <function-ref name="setResistor" scoped="" ref="0x1022bcbb8"/>
        <function-ref name="toggle" scoped="" ref="0x1022bcd40"/>
        <function-ref name="isOutput" scoped="" ref="0x1022bb020"/>
        <function-ref name="getResistor" scoped="" ref="0x1022bb1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x1022bb330"/>
        <function-ref name="get" scoped="" ref="0x1022bb4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1022bb640"/>
        <function-ref name="getRaw" scoped="" ref="0x1022bb7c8"/>
        <function-ref name="set" scoped="" ref="0x1022bb950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1022bbad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1022bbc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1022ba020"/>
        <function-ref name="clr" scoped="" ref="0x1022ba1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK0" ref="0x1022a2560" loc="147:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK0" scoped="" ref="0x1022a2560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1022a28b0"/>
        <function-ref name="isInput" scoped="" ref="0x1022a2a38"/>
        <function-ref name="setResistor" scoped="" ref="0x1022a2bc0"/>
        <function-ref name="toggle" scoped="" ref="0x1022a2d48"/>
        <function-ref name="isOutput" scoped="" ref="0x1022a1020"/>
        <function-ref name="getResistor" scoped="" ref="0x1022a11a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x1022a1330"/>
        <function-ref name="get" scoped="" ref="0x1022a14b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1022a1640"/>
        <function-ref name="getRaw" scoped="" ref="0x1022a17c8"/>
        <function-ref name="set" scoped="" ref="0x1022a1950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1022a1ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1022a1c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1022a0020"/>
        <function-ref name="clr" scoped="" ref="0x1022a01a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port51" ref="0x102268568" loc="94:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port51" scoped="" ref="0x102268568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1022688b8"/>
        <function-ref name="isInput" scoped="" ref="0x102268a40"/>
        <function-ref name="setResistor" scoped="" ref="0x102268bc8"/>
        <function-ref name="toggle" scoped="" ref="0x102268d50"/>
        <function-ref name="isOutput" scoped="" ref="0x102267020"/>
        <function-ref name="getResistor" scoped="" ref="0x1022671a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x102267330"/>
        <function-ref name="get" scoped="" ref="0x1022674b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x102267640"/>
        <function-ref name="getRaw" scoped="" ref="0x1022677c8"/>
        <function-ref name="set" scoped="" ref="0x102267950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x102267ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x102267c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x102266020"/>
        <function-ref name="clr" scoped="" ref="0x1022661a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC0" ref="0x1022b0558" loc="168:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC0" scoped="" ref="0x1022b0558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1022b08a8"/>
        <function-ref name="isInput" scoped="" ref="0x1022b0a30"/>
        <function-ref name="setResistor" scoped="" ref="0x1022b0bb8"/>
        <function-ref name="toggle" scoped="" ref="0x1022b0d40"/>
        <function-ref name="isOutput" scoped="" ref="0x1022af020"/>
        <function-ref name="getResistor" scoped="" ref="0x1022af1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x1022af330"/>
        <function-ref name="get" scoped="" ref="0x1022af4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1022af640"/>
        <function-ref name="getRaw" scoped="" ref="0x1022af7c8"/>
        <function-ref name="set" scoped="" ref="0x1022af950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1022afad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1022afc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1022ae020"/>
        <function-ref name="clr" scoped="" ref="0x1022ae1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSOUT" ref="0x1022dc568" loc="172:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSOUT" scoped="" ref="0x1022dc568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1022dc8b8"/>
        <function-ref name="isInput" scoped="" ref="0x1022dca40"/>
        <function-ref name="setResistor" scoped="" ref="0x1022dcbc8"/>
        <function-ref name="toggle" scoped="" ref="0x1022dcd50"/>
        <function-ref name="isOutput" scoped="" ref="0x1022db020"/>
        <function-ref name="getResistor" scoped="" ref="0x1022db1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x1022db330"/>
        <function-ref name="get" scoped="" ref="0x1022db4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1022db640"/>
        <function-ref name="getRaw" scoped="" ref="0x1022db7c8"/>
        <function-ref name="set" scoped="" ref="0x1022db950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1022dbad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1022dbc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1022da020"/>
        <function-ref name="clr" scoped="" ref="0x1022da1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE0" ref="0x1022ab5b8" loc="143:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE0" scoped="" ref="0x1022ab5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1022abd08"/>
        <function-ref name="isInput" scoped="" ref="0x1022aa020"/>
        <function-ref name="setResistor" scoped="" ref="0x1022aa1a8"/>
        <function-ref name="toggle" scoped="" ref="0x1022aa330"/>
        <function-ref name="isOutput" scoped="" ref="0x1022aa4b8"/>
        <function-ref name="getResistor" scoped="" ref="0x1022aa640"/>
        <function-ref name="makeOutput" scoped="" ref="0x1022aa7c8"/>
        <function-ref name="get" scoped="" ref="0x1022aa950"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1022aaad8"/>
        <function-ref name="getRaw" scoped="" ref="0x1022aac60"/>
        <function-ref name="set" scoped="" ref="0x1022aade8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1022a9020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1022a91a8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1022a9430"/>
        <function-ref name="clr" scoped="" ref="0x1022a95b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1022d7e18" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P10"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1022d7e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1022e31a8"/>
        <function-ref name="isInput" scoped="" ref="0x1022e3330"/>
        <function-ref name="setResistor" scoped="" ref="0x1022e34b8"/>
        <function-ref name="toggle" scoped="" ref="0x1022e3640"/>
        <function-ref name="isOutput" scoped="" ref="0x1022e37c8"/>
        <function-ref name="getResistor" scoped="" ref="0x1022e3950"/>
        <function-ref name="makeOutput" scoped="" ref="0x1022e3ad8"/>
        <function-ref name="get" scoped="" ref="0x1022e3c60"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1022e3de8"/>
        <function-ref name="getRaw" scoped="" ref="0x1022e2020"/>
        <function-ref name="set" scoped="" ref="0x1022e21a8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1022e2330"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1022e24b8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1022e2740"/>
        <function-ref name="clr" scoped="" ref="0x1022e28c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x102311478" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P11"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x102311478"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1023117c8"/>
        <function-ref name="isInput" scoped="" ref="0x102311950"/>
        <function-ref name="setResistor" scoped="" ref="0x102311ad8"/>
        <function-ref name="toggle" scoped="" ref="0x102311c60"/>
        <function-ref name="isOutput" scoped="" ref="0x102311de8"/>
        <function-ref name="getResistor" scoped="" ref="0x102310020"/>
        <function-ref name="makeOutput" scoped="" ref="0x1023101a8"/>
        <function-ref name="get" scoped="" ref="0x102310330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1023104b8"/>
        <function-ref name="getRaw" scoped="" ref="0x102310640"/>
        <function-ref name="set" scoped="" ref="0x1023107c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x102310950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x102310ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x102310d60"/>
        <function-ref name="clr" scoped="" ref="0x10230f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10230dca0" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P12"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10230dca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10230c020"/>
        <function-ref name="isInput" scoped="" ref="0x10230c1a8"/>
        <function-ref name="setResistor" scoped="" ref="0x10230c330"/>
        <function-ref name="toggle" scoped="" ref="0x10230c4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x10230c640"/>
        <function-ref name="getResistor" scoped="" ref="0x10230c7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10230c950"/>
        <function-ref name="get" scoped="" ref="0x10230cad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10230cc60"/>
        <function-ref name="getRaw" scoped="" ref="0x10230cde8"/>
        <function-ref name="set" scoped="" ref="0x10230b020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10230b1a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10230b330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10230b5b8"/>
        <function-ref name="clr" scoped="" ref="0x10230b740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1023083d8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P13"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1023083d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x102308728"/>
        <function-ref name="isInput" scoped="" ref="0x1023088b0"/>
        <function-ref name="setResistor" scoped="" ref="0x102308a38"/>
        <function-ref name="toggle" scoped="" ref="0x102308bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x102308d48"/>
        <function-ref name="getResistor" scoped="" ref="0x102307020"/>
        <function-ref name="makeOutput" scoped="" ref="0x1023071a8"/>
        <function-ref name="get" scoped="" ref="0x102307330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1023074b8"/>
        <function-ref name="getRaw" scoped="" ref="0x102307640"/>
        <function-ref name="set" scoped="" ref="0x1023077c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x102307950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x102307ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x102307d60"/>
        <function-ref name="clr" scoped="" ref="0x102306020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x102304ca0" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P14"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x102304ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x102303020"/>
        <function-ref name="isInput" scoped="" ref="0x1023031a8"/>
        <function-ref name="setResistor" scoped="" ref="0x102303330"/>
        <function-ref name="toggle" scoped="" ref="0x1023034b8"/>
        <function-ref name="isOutput" scoped="" ref="0x102303640"/>
        <function-ref name="getResistor" scoped="" ref="0x1023037c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x102303950"/>
        <function-ref name="get" scoped="" ref="0x102303ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x102303c60"/>
        <function-ref name="getRaw" scoped="" ref="0x102303de8"/>
        <function-ref name="set" scoped="" ref="0x102302020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1023021a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x102302330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1023025b8"/>
        <function-ref name="clr" scoped="" ref="0x102302740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1022ff3d8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P15"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1022ff3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1022ff728"/>
        <function-ref name="isInput" scoped="" ref="0x1022ff8b0"/>
        <function-ref name="setResistor" scoped="" ref="0x1022ffa38"/>
        <function-ref name="toggle" scoped="" ref="0x1022ffbc0"/>
        <function-ref name="isOutput" scoped="" ref="0x1022ffd48"/>
        <function-ref name="getResistor" scoped="" ref="0x1022fe020"/>
        <function-ref name="makeOutput" scoped="" ref="0x1022fe1a8"/>
        <function-ref name="get" scoped="" ref="0x1022fe330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1022fe4b8"/>
        <function-ref name="getRaw" scoped="" ref="0x1022fe640"/>
        <function-ref name="set" scoped="" ref="0x1022fe7c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1022fe950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1022fead8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1022fed60"/>
        <function-ref name="clr" scoped="" ref="0x1022fd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1022fbca0" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P16"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1022fbca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1022fa020"/>
        <function-ref name="isInput" scoped="" ref="0x1022fa1a8"/>
        <function-ref name="setResistor" scoped="" ref="0x1022fa330"/>
        <function-ref name="toggle" scoped="" ref="0x1022fa4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x1022fa640"/>
        <function-ref name="getResistor" scoped="" ref="0x1022fa7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x1022fa950"/>
        <function-ref name="get" scoped="" ref="0x1022faad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1022fac60"/>
        <function-ref name="getRaw" scoped="" ref="0x1022fade8"/>
        <function-ref name="set" scoped="" ref="0x1022f9020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1022f91a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1022f9330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1022f95b8"/>
        <function-ref name="clr" scoped="" ref="0x1022f9740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1023283d8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P17"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1023283d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x102328728"/>
        <function-ref name="isInput" scoped="" ref="0x1023288b0"/>
        <function-ref name="setResistor" scoped="" ref="0x102328a38"/>
        <function-ref name="toggle" scoped="" ref="0x102328bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x102328d48"/>
        <function-ref name="getResistor" scoped="" ref="0x102327020"/>
        <function-ref name="makeOutput" scoped="" ref="0x1023271a8"/>
        <function-ref name="get" scoped="" ref="0x102327330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1023274b8"/>
        <function-ref name="getRaw" scoped="" ref="0x102327640"/>
        <function-ref name="set" scoped="" ref="0x1023277c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x102327950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x102327ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x102327d60"/>
        <function-ref name="clr" scoped="" ref="0x102326020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x102324ca0" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P20"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x102324ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x102323020"/>
        <function-ref name="isInput" scoped="" ref="0x1023231a8"/>
        <function-ref name="setResistor" scoped="" ref="0x102323330"/>
        <function-ref name="toggle" scoped="" ref="0x1023234b8"/>
        <function-ref name="isOutput" scoped="" ref="0x102323640"/>
        <function-ref name="getResistor" scoped="" ref="0x1023237c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x102323950"/>
        <function-ref name="get" scoped="" ref="0x102323ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x102323c60"/>
        <function-ref name="getRaw" scoped="" ref="0x102323de8"/>
        <function-ref name="set" scoped="" ref="0x102322020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1023221a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x102322330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1023225b8"/>
        <function-ref name="clr" scoped="" ref="0x102322740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10231f3d8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P21"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10231f3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10231f728"/>
        <function-ref name="isInput" scoped="" ref="0x10231f8b0"/>
        <function-ref name="setResistor" scoped="" ref="0x10231fa38"/>
        <function-ref name="toggle" scoped="" ref="0x10231fbc0"/>
        <function-ref name="isOutput" scoped="" ref="0x10231fd48"/>
        <function-ref name="getResistor" scoped="" ref="0x10231e020"/>
        <function-ref name="makeOutput" scoped="" ref="0x10231e1a8"/>
        <function-ref name="get" scoped="" ref="0x10231e330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10231e4b8"/>
        <function-ref name="getRaw" scoped="" ref="0x10231e640"/>
        <function-ref name="set" scoped="" ref="0x10231e7c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10231e950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10231ead8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10231ed60"/>
        <function-ref name="clr" scoped="" ref="0x10231d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10231bca0" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P22"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10231bca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10231a020"/>
        <function-ref name="isInput" scoped="" ref="0x10231a1a8"/>
        <function-ref name="setResistor" scoped="" ref="0x10231a330"/>
        <function-ref name="toggle" scoped="" ref="0x10231a4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x10231a640"/>
        <function-ref name="getResistor" scoped="" ref="0x10231a7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10231a950"/>
        <function-ref name="get" scoped="" ref="0x10231aad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10231ac60"/>
        <function-ref name="getRaw" scoped="" ref="0x10231ade8"/>
        <function-ref name="set" scoped="" ref="0x102319020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1023191a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x102319330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1023195b8"/>
        <function-ref name="clr" scoped="" ref="0x102319740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1023163d8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P23"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1023163d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x102316728"/>
        <function-ref name="isInput" scoped="" ref="0x1023168b0"/>
        <function-ref name="setResistor" scoped="" ref="0x102316a38"/>
        <function-ref name="toggle" scoped="" ref="0x102316bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x102316d48"/>
        <function-ref name="getResistor" scoped="" ref="0x102315020"/>
        <function-ref name="makeOutput" scoped="" ref="0x1023151a8"/>
        <function-ref name="get" scoped="" ref="0x102315330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1023154b8"/>
        <function-ref name="getRaw" scoped="" ref="0x102315640"/>
        <function-ref name="set" scoped="" ref="0x1023157c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x102315950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x102315ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x102315d60"/>
        <function-ref name="clr" scoped="" ref="0x102314020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x102312d08" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P24"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x102312d08"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1023450a0"/>
        <function-ref name="isInput" scoped="" ref="0x102345228"/>
        <function-ref name="setResistor" scoped="" ref="0x1023453b0"/>
        <function-ref name="toggle" scoped="" ref="0x102345538"/>
        <function-ref name="isOutput" scoped="" ref="0x1023456c0"/>
        <function-ref name="getResistor" scoped="" ref="0x102345848"/>
        <function-ref name="makeOutput" scoped="" ref="0x1023459d0"/>
        <function-ref name="get" scoped="" ref="0x102345b58"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x102345ce0"/>
        <function-ref name="getRaw" scoped="" ref="0x102345e68"/>
        <function-ref name="set" scoped="" ref="0x102344020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1023441a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x102344330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1023445b8"/>
        <function-ref name="clr" scoped="" ref="0x102344740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1023413d8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P25"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1023413d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x102341728"/>
        <function-ref name="isInput" scoped="" ref="0x1023418b0"/>
        <function-ref name="setResistor" scoped="" ref="0x102341a38"/>
        <function-ref name="toggle" scoped="" ref="0x102341bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x102341d48"/>
        <function-ref name="getResistor" scoped="" ref="0x102340020"/>
        <function-ref name="makeOutput" scoped="" ref="0x1023401a8"/>
        <function-ref name="get" scoped="" ref="0x102340330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1023404b8"/>
        <function-ref name="getRaw" scoped="" ref="0x102340640"/>
        <function-ref name="set" scoped="" ref="0x1023407c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x102340950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x102340ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x102340d60"/>
        <function-ref name="clr" scoped="" ref="0x10233f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10233dca0" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P26"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10233dca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10233b020"/>
        <function-ref name="isInput" scoped="" ref="0x10233b1a8"/>
        <function-ref name="setResistor" scoped="" ref="0x10233b330"/>
        <function-ref name="toggle" scoped="" ref="0x10233b4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x10233b640"/>
        <function-ref name="getResistor" scoped="" ref="0x10233b7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10233b950"/>
        <function-ref name="get" scoped="" ref="0x10233bad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10233bc60"/>
        <function-ref name="getRaw" scoped="" ref="0x10233bde8"/>
        <function-ref name="set" scoped="" ref="0x10233a020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10233a1a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10233a330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10233a5b8"/>
        <function-ref name="clr" scoped="" ref="0x10233a740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1023373d8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P27"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1023373d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x102337728"/>
        <function-ref name="isInput" scoped="" ref="0x1023378b0"/>
        <function-ref name="setResistor" scoped="" ref="0x102337a38"/>
        <function-ref name="toggle" scoped="" ref="0x102337bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x102337d48"/>
        <function-ref name="getResistor" scoped="" ref="0x102336020"/>
        <function-ref name="makeOutput" scoped="" ref="0x1023361a8"/>
        <function-ref name="get" scoped="" ref="0x102336330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1023364b8"/>
        <function-ref name="getRaw" scoped="" ref="0x102336640"/>
        <function-ref name="set" scoped="" ref="0x1023367c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x102336950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x102336ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x102336d60"/>
        <function-ref name="clr" scoped="" ref="0x102335020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x102333ca0" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P30"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x102333ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x102332020"/>
        <function-ref name="isInput" scoped="" ref="0x1023321a8"/>
        <function-ref name="setResistor" scoped="" ref="0x102332330"/>
        <function-ref name="toggle" scoped="" ref="0x1023324b8"/>
        <function-ref name="isOutput" scoped="" ref="0x102332640"/>
        <function-ref name="getResistor" scoped="" ref="0x1023327c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x102332950"/>
        <function-ref name="get" scoped="" ref="0x102332ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x102332c60"/>
        <function-ref name="getRaw" scoped="" ref="0x102332de8"/>
        <function-ref name="set" scoped="" ref="0x102331020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1023311a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x102331330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1023315b8"/>
        <function-ref name="clr" scoped="" ref="0x102331740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10232e3d8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P31"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10232e3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10232e728"/>
        <function-ref name="isInput" scoped="" ref="0x10232e8b0"/>
        <function-ref name="setResistor" scoped="" ref="0x10232ea38"/>
        <function-ref name="toggle" scoped="" ref="0x10232ebc0"/>
        <function-ref name="isOutput" scoped="" ref="0x10232ed48"/>
        <function-ref name="getResistor" scoped="" ref="0x10232d020"/>
        <function-ref name="makeOutput" scoped="" ref="0x10232d1a8"/>
        <function-ref name="get" scoped="" ref="0x10232d330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10232d4b8"/>
        <function-ref name="getRaw" scoped="" ref="0x10232d640"/>
        <function-ref name="set" scoped="" ref="0x10232d7c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10232d950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10232dad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10232dd60"/>
        <function-ref name="clr" scoped="" ref="0x10232c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10235eca0" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P32"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10235eca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10235d020"/>
        <function-ref name="isInput" scoped="" ref="0x10235d1a8"/>
        <function-ref name="setResistor" scoped="" ref="0x10235d330"/>
        <function-ref name="toggle" scoped="" ref="0x10235d4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x10235d640"/>
        <function-ref name="getResistor" scoped="" ref="0x10235d7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10235d950"/>
        <function-ref name="get" scoped="" ref="0x10235dad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10235dc60"/>
        <function-ref name="getRaw" scoped="" ref="0x10235dde8"/>
        <function-ref name="set" scoped="" ref="0x10235c020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10235c1a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10235c330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10235c5b8"/>
        <function-ref name="clr" scoped="" ref="0x10235c740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1023593d8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P33"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1023593d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x102359728"/>
        <function-ref name="isInput" scoped="" ref="0x1023598b0"/>
        <function-ref name="setResistor" scoped="" ref="0x102359a38"/>
        <function-ref name="toggle" scoped="" ref="0x102359bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x102359d48"/>
        <function-ref name="getResistor" scoped="" ref="0x102358020"/>
        <function-ref name="makeOutput" scoped="" ref="0x1023581a8"/>
        <function-ref name="get" scoped="" ref="0x102358330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1023584b8"/>
        <function-ref name="getRaw" scoped="" ref="0x102358640"/>
        <function-ref name="set" scoped="" ref="0x1023587c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x102358950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x102358ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x102358d60"/>
        <function-ref name="clr" scoped="" ref="0x102357020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x102355ca0" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P34"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x102355ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x102354020"/>
        <function-ref name="isInput" scoped="" ref="0x1023541a8"/>
        <function-ref name="setResistor" scoped="" ref="0x102354330"/>
        <function-ref name="toggle" scoped="" ref="0x1023544b8"/>
        <function-ref name="isOutput" scoped="" ref="0x102354640"/>
        <function-ref name="getResistor" scoped="" ref="0x1023547c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x102354950"/>
        <function-ref name="get" scoped="" ref="0x102354ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x102354c60"/>
        <function-ref name="getRaw" scoped="" ref="0x102354de8"/>
        <function-ref name="set" scoped="" ref="0x102353020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1023531a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x102353330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1023535b8"/>
        <function-ref name="clr" scoped="" ref="0x102353740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1023503d8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P35"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1023503d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x102350728"/>
        <function-ref name="isInput" scoped="" ref="0x1023508b0"/>
        <function-ref name="setResistor" scoped="" ref="0x102350a38"/>
        <function-ref name="toggle" scoped="" ref="0x102350bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x102350d48"/>
        <function-ref name="getResistor" scoped="" ref="0x10234f020"/>
        <function-ref name="makeOutput" scoped="" ref="0x10234f1a8"/>
        <function-ref name="get" scoped="" ref="0x10234f330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10234f4b8"/>
        <function-ref name="getRaw" scoped="" ref="0x10234f640"/>
        <function-ref name="set" scoped="" ref="0x10234f7c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10234f950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10234fad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10234fd60"/>
        <function-ref name="clr" scoped="" ref="0x10234e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10234cca0" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P36"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10234cca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10234a020"/>
        <function-ref name="isInput" scoped="" ref="0x10234a1a8"/>
        <function-ref name="setResistor" scoped="" ref="0x10234a330"/>
        <function-ref name="toggle" scoped="" ref="0x10234a4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x10234a640"/>
        <function-ref name="getResistor" scoped="" ref="0x10234a7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10234a950"/>
        <function-ref name="get" scoped="" ref="0x10234aad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10234ac60"/>
        <function-ref name="getRaw" scoped="" ref="0x10234ade8"/>
        <function-ref name="set" scoped="" ref="0x102349020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1023491a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x102349330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1023495b8"/>
        <function-ref name="clr" scoped="" ref="0x102349740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1023463d8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P37"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1023463d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x102346728"/>
        <function-ref name="isInput" scoped="" ref="0x1023468b0"/>
        <function-ref name="setResistor" scoped="" ref="0x102346a38"/>
        <function-ref name="toggle" scoped="" ref="0x102346bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x102346d48"/>
        <function-ref name="getResistor" scoped="" ref="0x102379020"/>
        <function-ref name="makeOutput" scoped="" ref="0x1023791a8"/>
        <function-ref name="get" scoped="" ref="0x102379330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1023794b8"/>
        <function-ref name="getRaw" scoped="" ref="0x102379640"/>
        <function-ref name="set" scoped="" ref="0x1023797c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x102379950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x102379ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x102379d60"/>
        <function-ref name="clr" scoped="" ref="0x102378020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x102376dd8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P40"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x102376dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x102375170"/>
        <function-ref name="isInput" scoped="" ref="0x1023752f8"/>
        <function-ref name="setResistor" scoped="" ref="0x102375480"/>
        <function-ref name="toggle" scoped="" ref="0x102375608"/>
        <function-ref name="isOutput" scoped="" ref="0x102375790"/>
        <function-ref name="getResistor" scoped="" ref="0x102375918"/>
        <function-ref name="makeOutput" scoped="" ref="0x102375aa0"/>
        <function-ref name="get" scoped="" ref="0x102375c28"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x102375db0"/>
        <function-ref name="getRaw" scoped="" ref="0x102374020"/>
        <function-ref name="set" scoped="" ref="0x1023741a8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x102374330"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1023744b8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x102374740"/>
        <function-ref name="clr" scoped="" ref="0x1023748c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x102371478" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P41"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x102371478"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1023717c8"/>
        <function-ref name="isInput" scoped="" ref="0x102371950"/>
        <function-ref name="setResistor" scoped="" ref="0x102371ad8"/>
        <function-ref name="toggle" scoped="" ref="0x102371c60"/>
        <function-ref name="isOutput" scoped="" ref="0x102371de8"/>
        <function-ref name="getResistor" scoped="" ref="0x102370020"/>
        <function-ref name="makeOutput" scoped="" ref="0x1023701a8"/>
        <function-ref name="get" scoped="" ref="0x102370330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1023704b8"/>
        <function-ref name="getRaw" scoped="" ref="0x102370640"/>
        <function-ref name="set" scoped="" ref="0x1023707c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x102370950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x102370ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x102370d60"/>
        <function-ref name="clr" scoped="" ref="0x10236f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10236dca0" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P42"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10236dca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10236c020"/>
        <function-ref name="isInput" scoped="" ref="0x10236c1a8"/>
        <function-ref name="setResistor" scoped="" ref="0x10236c330"/>
        <function-ref name="toggle" scoped="" ref="0x10236c4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x10236c640"/>
        <function-ref name="getResistor" scoped="" ref="0x10236c7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10236c950"/>
        <function-ref name="get" scoped="" ref="0x10236cad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10236cc60"/>
        <function-ref name="getRaw" scoped="" ref="0x10236cde8"/>
        <function-ref name="set" scoped="" ref="0x10236b020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10236b1a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10236b330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10236b5b8"/>
        <function-ref name="clr" scoped="" ref="0x10236b740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1023683d8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P43"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1023683d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x102368728"/>
        <function-ref name="isInput" scoped="" ref="0x1023688b0"/>
        <function-ref name="setResistor" scoped="" ref="0x102368a38"/>
        <function-ref name="toggle" scoped="" ref="0x102368bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x102368d48"/>
        <function-ref name="getResistor" scoped="" ref="0x102367020"/>
        <function-ref name="makeOutput" scoped="" ref="0x1023671a8"/>
        <function-ref name="get" scoped="" ref="0x102367330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1023674b8"/>
        <function-ref name="getRaw" scoped="" ref="0x102367640"/>
        <function-ref name="set" scoped="" ref="0x1023677c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x102367950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x102367ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x102367d60"/>
        <function-ref name="clr" scoped="" ref="0x102366020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x102364ca0" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P44"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x102364ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x102363020"/>
        <function-ref name="isInput" scoped="" ref="0x1023631a8"/>
        <function-ref name="setResistor" scoped="" ref="0x102363330"/>
        <function-ref name="toggle" scoped="" ref="0x1023634b8"/>
        <function-ref name="isOutput" scoped="" ref="0x102363640"/>
        <function-ref name="getResistor" scoped="" ref="0x1023637c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x102363950"/>
        <function-ref name="get" scoped="" ref="0x102363ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x102363c60"/>
        <function-ref name="getRaw" scoped="" ref="0x102363de8"/>
        <function-ref name="set" scoped="" ref="0x102362020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1023621a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x102362330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1023625b8"/>
        <function-ref name="clr" scoped="" ref="0x102362740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1023933d8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P45"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1023933d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x102393728"/>
        <function-ref name="isInput" scoped="" ref="0x1023938b0"/>
        <function-ref name="setResistor" scoped="" ref="0x102393a38"/>
        <function-ref name="toggle" scoped="" ref="0x102393bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x102393d48"/>
        <function-ref name="getResistor" scoped="" ref="0x102392020"/>
        <function-ref name="makeOutput" scoped="" ref="0x1023921a8"/>
        <function-ref name="get" scoped="" ref="0x102392330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1023924b8"/>
        <function-ref name="getRaw" scoped="" ref="0x102392640"/>
        <function-ref name="set" scoped="" ref="0x1023927c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x102392950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x102392ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x102392d60"/>
        <function-ref name="clr" scoped="" ref="0x102391020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10238eca0" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P46"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10238eca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10238d020"/>
        <function-ref name="isInput" scoped="" ref="0x10238d1a8"/>
        <function-ref name="setResistor" scoped="" ref="0x10238d330"/>
        <function-ref name="toggle" scoped="" ref="0x10238d4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x10238d640"/>
        <function-ref name="getResistor" scoped="" ref="0x10238d7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10238d950"/>
        <function-ref name="get" scoped="" ref="0x10238dad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10238dc60"/>
        <function-ref name="getRaw" scoped="" ref="0x10238dde8"/>
        <function-ref name="set" scoped="" ref="0x10238c020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10238c1a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10238c330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10238c5b8"/>
        <function-ref name="clr" scoped="" ref="0x10238c740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1023893d8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P47"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1023893d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x102389728"/>
        <function-ref name="isInput" scoped="" ref="0x1023898b0"/>
        <function-ref name="setResistor" scoped="" ref="0x102389a38"/>
        <function-ref name="toggle" scoped="" ref="0x102389bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x102389d48"/>
        <function-ref name="getResistor" scoped="" ref="0x102388020"/>
        <function-ref name="makeOutput" scoped="" ref="0x1023881a8"/>
        <function-ref name="get" scoped="" ref="0x102388330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1023884b8"/>
        <function-ref name="getRaw" scoped="" ref="0x102388640"/>
        <function-ref name="set" scoped="" ref="0x1023887c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x102388950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x102388ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x102388d60"/>
        <function-ref name="clr" scoped="" ref="0x102387020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x102385ca0" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P50"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x102385ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x102384020"/>
        <function-ref name="isInput" scoped="" ref="0x1023841a8"/>
        <function-ref name="setResistor" scoped="" ref="0x102384330"/>
        <function-ref name="toggle" scoped="" ref="0x1023844b8"/>
        <function-ref name="isOutput" scoped="" ref="0x102384640"/>
        <function-ref name="getResistor" scoped="" ref="0x1023847c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x102384950"/>
        <function-ref name="get" scoped="" ref="0x102384ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x102384c60"/>
        <function-ref name="getRaw" scoped="" ref="0x102384de8"/>
        <function-ref name="set" scoped="" ref="0x102383020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1023831a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x102383330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1023835b8"/>
        <function-ref name="clr" scoped="" ref="0x102383740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1023803d8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P51"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1023803d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x102380728"/>
        <function-ref name="isInput" scoped="" ref="0x1023808b0"/>
        <function-ref name="setResistor" scoped="" ref="0x102380a38"/>
        <function-ref name="toggle" scoped="" ref="0x102380bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x102380d48"/>
        <function-ref name="getResistor" scoped="" ref="0x10237f020"/>
        <function-ref name="makeOutput" scoped="" ref="0x10237f1a8"/>
        <function-ref name="get" scoped="" ref="0x10237f330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10237f4b8"/>
        <function-ref name="getRaw" scoped="" ref="0x10237f640"/>
        <function-ref name="set" scoped="" ref="0x10237f7c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10237f950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10237fad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10237fd60"/>
        <function-ref name="clr" scoped="" ref="0x10237e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10237cca0" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P52"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10237cca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10237b020"/>
        <function-ref name="isInput" scoped="" ref="0x10237b1a8"/>
        <function-ref name="setResistor" scoped="" ref="0x10237b330"/>
        <function-ref name="toggle" scoped="" ref="0x10237b4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x10237b640"/>
        <function-ref name="getResistor" scoped="" ref="0x10237b7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10237b950"/>
        <function-ref name="get" scoped="" ref="0x10237bad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10237bc60"/>
        <function-ref name="getRaw" scoped="" ref="0x10237bde8"/>
        <function-ref name="set" scoped="" ref="0x10237a020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10237a1a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10237a330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10237a5b8"/>
        <function-ref name="clr" scoped="" ref="0x10237a740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1023ac3d8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P53"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1023ac3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1023ac728"/>
        <function-ref name="isInput" scoped="" ref="0x1023ac8b0"/>
        <function-ref name="setResistor" scoped="" ref="0x1023aca38"/>
        <function-ref name="toggle" scoped="" ref="0x1023acbc0"/>
        <function-ref name="isOutput" scoped="" ref="0x1023acd48"/>
        <function-ref name="getResistor" scoped="" ref="0x1023ab020"/>
        <function-ref name="makeOutput" scoped="" ref="0x1023ab1a8"/>
        <function-ref name="get" scoped="" ref="0x1023ab330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1023ab4b8"/>
        <function-ref name="getRaw" scoped="" ref="0x1023ab640"/>
        <function-ref name="set" scoped="" ref="0x1023ab7c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1023ab950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1023abad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1023abd60"/>
        <function-ref name="clr" scoped="" ref="0x1023aa020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1023a8ca0" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P54"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1023a8ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1023a7020"/>
        <function-ref name="isInput" scoped="" ref="0x1023a71a8"/>
        <function-ref name="setResistor" scoped="" ref="0x1023a7330"/>
        <function-ref name="toggle" scoped="" ref="0x1023a74b8"/>
        <function-ref name="isOutput" scoped="" ref="0x1023a7640"/>
        <function-ref name="getResistor" scoped="" ref="0x1023a77c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x1023a7950"/>
        <function-ref name="get" scoped="" ref="0x1023a7ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1023a7c60"/>
        <function-ref name="getRaw" scoped="" ref="0x1023a7de8"/>
        <function-ref name="set" scoped="" ref="0x1023a6020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1023a61a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1023a6330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1023a65b8"/>
        <function-ref name="clr" scoped="" ref="0x1023a6740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1023a33d8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P55"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1023a33d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1023a3728"/>
        <function-ref name="isInput" scoped="" ref="0x1023a38b0"/>
        <function-ref name="setResistor" scoped="" ref="0x1023a3a38"/>
        <function-ref name="toggle" scoped="" ref="0x1023a3bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x1023a3d48"/>
        <function-ref name="getResistor" scoped="" ref="0x1023a1020"/>
        <function-ref name="makeOutput" scoped="" ref="0x1023a11a8"/>
        <function-ref name="get" scoped="" ref="0x1023a1330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1023a14b8"/>
        <function-ref name="getRaw" scoped="" ref="0x1023a1640"/>
        <function-ref name="set" scoped="" ref="0x1023a17c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1023a1950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1023a1ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1023a1d60"/>
        <function-ref name="clr" scoped="" ref="0x1023a0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10239eca0" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P56"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10239eca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10239d020"/>
        <function-ref name="isInput" scoped="" ref="0x10239d1a8"/>
        <function-ref name="setResistor" scoped="" ref="0x10239d330"/>
        <function-ref name="toggle" scoped="" ref="0x10239d4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x10239d640"/>
        <function-ref name="getResistor" scoped="" ref="0x10239d7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10239d950"/>
        <function-ref name="get" scoped="" ref="0x10239dad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10239dc60"/>
        <function-ref name="getRaw" scoped="" ref="0x10239dde8"/>
        <function-ref name="set" scoped="" ref="0x10239c020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10239c1a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10239c330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10239c5b8"/>
        <function-ref name="clr" scoped="" ref="0x10239c740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1023993d8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P57"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1023993d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x102399728"/>
        <function-ref name="isInput" scoped="" ref="0x1023998b0"/>
        <function-ref name="setResistor" scoped="" ref="0x102399a38"/>
        <function-ref name="toggle" scoped="" ref="0x102399bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x102399d48"/>
        <function-ref name="getResistor" scoped="" ref="0x102398020"/>
        <function-ref name="makeOutput" scoped="" ref="0x1023981a8"/>
        <function-ref name="get" scoped="" ref="0x102398330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1023984b8"/>
        <function-ref name="getRaw" scoped="" ref="0x102398640"/>
        <function-ref name="set" scoped="" ref="0x1023987c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x102398950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x102398ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x102398d60"/>
        <function-ref name="clr" scoped="" ref="0x102397020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x102395ca0" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P60"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x102395ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x102394020"/>
        <function-ref name="isInput" scoped="" ref="0x1023941a8"/>
        <function-ref name="setResistor" scoped="" ref="0x102394330"/>
        <function-ref name="toggle" scoped="" ref="0x1023944b8"/>
        <function-ref name="isOutput" scoped="" ref="0x102394640"/>
        <function-ref name="getResistor" scoped="" ref="0x1023947c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x102394950"/>
        <function-ref name="get" scoped="" ref="0x102394ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x102394c60"/>
        <function-ref name="getRaw" scoped="" ref="0x102394de8"/>
        <function-ref name="set" scoped="" ref="0x1023c9020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1023c91a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1023c9330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1023c95b8"/>
        <function-ref name="clr" scoped="" ref="0x1023c9740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1023c63d8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P61"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1023c63d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1023c6728"/>
        <function-ref name="isInput" scoped="" ref="0x1023c68b0"/>
        <function-ref name="setResistor" scoped="" ref="0x1023c6a38"/>
        <function-ref name="toggle" scoped="" ref="0x1023c6bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x1023c6d48"/>
        <function-ref name="getResistor" scoped="" ref="0x1023c5020"/>
        <function-ref name="makeOutput" scoped="" ref="0x1023c51a8"/>
        <function-ref name="get" scoped="" ref="0x1023c5330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1023c54b8"/>
        <function-ref name="getRaw" scoped="" ref="0x1023c5640"/>
        <function-ref name="set" scoped="" ref="0x1023c57c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1023c5950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1023c5ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1023c5d60"/>
        <function-ref name="clr" scoped="" ref="0x1023c4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1023c2ca0" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P62"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1023c2ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1023c1020"/>
        <function-ref name="isInput" scoped="" ref="0x1023c11a8"/>
        <function-ref name="setResistor" scoped="" ref="0x1023c1330"/>
        <function-ref name="toggle" scoped="" ref="0x1023c14b8"/>
        <function-ref name="isOutput" scoped="" ref="0x1023c1640"/>
        <function-ref name="getResistor" scoped="" ref="0x1023c17c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x1023c1950"/>
        <function-ref name="get" scoped="" ref="0x1023c1ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1023c1c60"/>
        <function-ref name="getRaw" scoped="" ref="0x1023c1de8"/>
        <function-ref name="set" scoped="" ref="0x1023c0020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1023c01a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1023c0330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1023c05b8"/>
        <function-ref name="clr" scoped="" ref="0x1023c0740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1023bd3d8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P63"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1023bd3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1023bd728"/>
        <function-ref name="isInput" scoped="" ref="0x1023bd8b0"/>
        <function-ref name="setResistor" scoped="" ref="0x1023bda38"/>
        <function-ref name="toggle" scoped="" ref="0x1023bdbc0"/>
        <function-ref name="isOutput" scoped="" ref="0x1023bdd48"/>
        <function-ref name="getResistor" scoped="" ref="0x1023bc020"/>
        <function-ref name="makeOutput" scoped="" ref="0x1023bc1a8"/>
        <function-ref name="get" scoped="" ref="0x1023bc330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1023bc4b8"/>
        <function-ref name="getRaw" scoped="" ref="0x1023bc640"/>
        <function-ref name="set" scoped="" ref="0x1023bc7c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1023bc950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1023bcad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1023bcd60"/>
        <function-ref name="clr" scoped="" ref="0x1023bb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1023b9ca0" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P64"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1023b9ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1023b8020"/>
        <function-ref name="isInput" scoped="" ref="0x1023b81a8"/>
        <function-ref name="setResistor" scoped="" ref="0x1023b8330"/>
        <function-ref name="toggle" scoped="" ref="0x1023b84b8"/>
        <function-ref name="isOutput" scoped="" ref="0x1023b8640"/>
        <function-ref name="getResistor" scoped="" ref="0x1023b87c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x1023b8950"/>
        <function-ref name="get" scoped="" ref="0x1023b8ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1023b8c60"/>
        <function-ref name="getRaw" scoped="" ref="0x1023b8de8"/>
        <function-ref name="set" scoped="" ref="0x1023b7020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1023b71a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1023b7330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1023b75b8"/>
        <function-ref name="clr" scoped="" ref="0x1023b7740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1023b43d8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P65"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1023b43d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1023b4728"/>
        <function-ref name="isInput" scoped="" ref="0x1023b48b0"/>
        <function-ref name="setResistor" scoped="" ref="0x1023b4a38"/>
        <function-ref name="toggle" scoped="" ref="0x1023b4bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x1023b4d48"/>
        <function-ref name="getResistor" scoped="" ref="0x1023b2020"/>
        <function-ref name="makeOutput" scoped="" ref="0x1023b21a8"/>
        <function-ref name="get" scoped="" ref="0x1023b2330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1023b24b8"/>
        <function-ref name="getRaw" scoped="" ref="0x1023b2640"/>
        <function-ref name="set" scoped="" ref="0x1023b27c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1023b2950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1023b2ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1023b2d60"/>
        <function-ref name="clr" scoped="" ref="0x1023b1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1023afca0" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P66"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1023afca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1023e4020"/>
        <function-ref name="isInput" scoped="" ref="0x1023e41a8"/>
        <function-ref name="setResistor" scoped="" ref="0x1023e4330"/>
        <function-ref name="toggle" scoped="" ref="0x1023e44b8"/>
        <function-ref name="isOutput" scoped="" ref="0x1023e4640"/>
        <function-ref name="getResistor" scoped="" ref="0x1023e47c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x1023e4950"/>
        <function-ref name="get" scoped="" ref="0x1023e4ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1023e4c60"/>
        <function-ref name="getRaw" scoped="" ref="0x1023e4de8"/>
        <function-ref name="set" scoped="" ref="0x1023e3020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1023e31a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1023e3330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1023e35b8"/>
        <function-ref name="clr" scoped="" ref="0x1023e3740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1023e03d8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P67"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1023e03d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1023e0728"/>
        <function-ref name="isInput" scoped="" ref="0x1023e08b0"/>
        <function-ref name="setResistor" scoped="" ref="0x1023e0a38"/>
        <function-ref name="toggle" scoped="" ref="0x1023e0bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x1023e0d48"/>
        <function-ref name="getResistor" scoped="" ref="0x1023df020"/>
        <function-ref name="makeOutput" scoped="" ref="0x1023df1a8"/>
        <function-ref name="get" scoped="" ref="0x1023df330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1023df4b8"/>
        <function-ref name="getRaw" scoped="" ref="0x1023df640"/>
        <function-ref name="set" scoped="" ref="0x1023df7c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1023df950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1023dfad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1023dfd60"/>
        <function-ref name="clr" scoped="" ref="0x1023de020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x10240ada0" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x10240ada0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10243a170"/>
        <function-ref name="isInput" scoped="" ref="0x10243a2f8"/>
        <function-ref name="setResistor" scoped="" ref="0x10243a480"/>
        <function-ref name="toggle" scoped="" ref="0x10243a608"/>
        <function-ref name="isOutput" scoped="" ref="0x10243a790"/>
        <function-ref name="getResistor" scoped="" ref="0x10243a918"/>
        <function-ref name="makeOutput" scoped="" ref="0x10243aaa0"/>
        <function-ref name="get" scoped="" ref="0x10243ac28"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10243adb0"/>
        <function-ref name="getRaw" scoped="" ref="0x102439020"/>
        <function-ref name="set" scoped="" ref="0x1024391a8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x102439330"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1024394b8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x102439740"/>
        <function-ref name="clr" scoped="" ref="0x1024398c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x10240cc30" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x10240cc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10240a020"/>
        <function-ref name="isInput" scoped="" ref="0x10240a1a8"/>
        <function-ref name="toggle" scoped="" ref="0x10240a330"/>
        <function-ref name="isOutput" scoped="" ref="0x10240a4b8"/>
        <function-ref name="get" scoped="" ref="0x10240a640"/>
        <function-ref name="makeOutput" scoped="" ref="0x10240a7c8"/>
        <function-ref name="set" scoped="" ref="0x10240a950"/>
        <function-ref name="clr" scoped="" ref="0x10240aad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x1024365f8" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x1024365f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x102436948"/>
        <function-ref name="isInput" scoped="" ref="0x102436ad0"/>
        <function-ref name="setResistor" scoped="" ref="0x102436c58"/>
        <function-ref name="toggle" scoped="" ref="0x102436de0"/>
        <function-ref name="isOutput" scoped="" ref="0x102435020"/>
        <function-ref name="getResistor" scoped="" ref="0x1024351a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x102435330"/>
        <function-ref name="get" scoped="" ref="0x1024354b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x102435640"/>
        <function-ref name="getRaw" scoped="" ref="0x1024357c8"/>
        <function-ref name="set" scoped="" ref="0x102435950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x102435ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x102435c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x102434020"/>
        <function-ref name="clr" scoped="" ref="0x1024341a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x102437448" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x102437448"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x102437798"/>
        <function-ref name="isInput" scoped="" ref="0x102437920"/>
        <function-ref name="toggle" scoped="" ref="0x102437aa8"/>
        <function-ref name="isOutput" scoped="" ref="0x102437c30"/>
        <function-ref name="get" scoped="" ref="0x102437db8"/>
        <function-ref name="makeOutput" scoped="" ref="0x102436020"/>
        <function-ref name="set" scoped="" ref="0x1024361a8"/>
        <function-ref name="clr" scoped="" ref="0x102436330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x102432e20" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x102432e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1024311a8"/>
        <function-ref name="isInput" scoped="" ref="0x102431330"/>
        <function-ref name="setResistor" scoped="" ref="0x1024314b8"/>
        <function-ref name="toggle" scoped="" ref="0x102431640"/>
        <function-ref name="isOutput" scoped="" ref="0x1024317c8"/>
        <function-ref name="getResistor" scoped="" ref="0x102431950"/>
        <function-ref name="makeOutput" scoped="" ref="0x102431ad8"/>
        <function-ref name="get" scoped="" ref="0x102431c60"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x102431de8"/>
        <function-ref name="getRaw" scoped="" ref="0x102430020"/>
        <function-ref name="set" scoped="" ref="0x1024301a8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x102430330"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1024304b8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x102430740"/>
        <function-ref name="clr" scoped="" ref="0x1024308c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x102433cd0" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x102433cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1024320a0"/>
        <function-ref name="isInput" scoped="" ref="0x102432228"/>
        <function-ref name="toggle" scoped="" ref="0x1024323b0"/>
        <function-ref name="isOutput" scoped="" ref="0x102432538"/>
        <function-ref name="get" scoped="" ref="0x1024326c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x102432848"/>
        <function-ref name="set" scoped="" ref="0x1024329d0"/>
        <function-ref name="clr" scoped="" ref="0x102432b58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x101b52020" loc="55:../../tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x101b52020"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x101b52370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x10199f3c8" loc="51:../../tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x10199f3c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x10199f718"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x101c1e800" loc="52:../../tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerState" scoped="" ref="0x101c1e800"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x101c1eb50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430ClockInit" ref="0x101db16c8" loc="39:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosb/MoteClockP.nc">
      <component-ref qname="MoteClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x101db16c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x102450640"/>
        <function-ref name="initTimerB" scoped="" ref="0x101db1ba0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x101db1d28"/>
        <function-ref name="initTimerA" scoped="" ref="0x102450020"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x101db1a18"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x1024501a8"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x102450330"/>
        <function-ref name="initClocks" scoped="" ref="0x1024504b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x10247e140" loc="60:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x10247e140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10247e490"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x101d9d9b0" loc="57:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x101d9d9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x101d9dd00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x10247f9f8" loc="59:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PlatformInit" scoped="" ref="0x10247f9f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10247fd48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x10247f020" loc="58:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x10247f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10247f370"/>
        <function-ref name="taskLoop" scoped="" ref="0x10247f4f8"/>
        <function-ref name="runNextTask" scoped="" ref="0x10247f680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x10192bca0" loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x10192bca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1016a2790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x1018ea020"/>
        <function-ref name="runTask" scoped="" ref="0x1018ea1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x101924390" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x101924390"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1019246e0"/>
        <function-ref name="taskLoop" scoped="" ref="0x101924868"/>
        <function-ref name="runNextTask" scoped="" ref="0x1019249f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x101d5f020" loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x101d5f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1016a2790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x101d5f370"/>
        <function-ref name="runTask" scoped="" ref="0x101d5f4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x101d5c4e0" loc="57:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x101d5c4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x101d5c830"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x101d610c0" loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x101d610c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x101d61410"/>
        <function-ref name="taskLoop" scoped="" ref="0x101d61598"/>
        <function-ref name="runNextTask" scoped="" ref="0x101d61720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMControl" ref="0x10248a968" loc="57:RadioCountToLedsC.nc">
      <component-ref qname="RadioCountToLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMControl" scoped="" ref="0x10248a968"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x10248acb8"/>
        <function-ref name="stop" scoped="" ref="0x10248ae40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x102471bc8" loc="52:RadioCountToLedsC.nc">
      <component-ref qname="RadioCountToLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x102471bc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x102470020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x10249d178" loc="54:RadioCountToLedsC.nc">
      <component-ref qname="RadioCountToLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x10249d178"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x10249d4c8"/>
        <function-ref name="getPayload" scoped="" ref="0x10249d650"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x10249d7d8"/>
        <function-ref name="cancel" scoped="" ref="0x10249d960"/>
        <function-ref name="sendDone" scoped="" ref="0x10249dae8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime" ref="0x10248f108" loc="56:RadioCountToLedsC.nc">
      <component-ref qname="RadioCountToLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x10248f108"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x102475a18"/>
            <typename><typedef-ref name="TMilli" ref="0x102475d70"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x10248fc88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x10248b020" loc="58:RadioCountToLedsC.nc">
      <component-ref qname="RadioCountToLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x10248b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10248b370"/>
        <function-ref name="payloadLength" scoped="" ref="0x10248b4f8"/>
        <function-ref name="getPayload" scoped="" ref="0x10248b680"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x10248b808"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x10248b990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LplxPacket" ref="0x1024b6be8" loc="59:RadioCountToLedsC.nc">
      <component-ref qname="RadioCountToLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LplxPacket" scoped="" ref="0x1024b6be8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LplxPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setOppoRouting" scoped="" ref="0x102489020"/>
        <function-ref name="clearSettings" scoped="" ref="0x1024891a8"/>
        <function-ref name="setPacketBulk" scoped="" ref="0x102489330"/>
        <function-ref name="getPacketBulk" scoped="" ref="0x1024894b8"/>
        <function-ref name="setPacketCI" scoped="" ref="0x102489640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x1024702b0" loc="53:RadioCountToLedsC.nc">
      <component-ref qname="RadioCountToLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x1024702b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x102470600"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MilliTimer" ref="0x1024945a0" loc="55:RadioCountToLedsC.nc">
      <component-ref qname="RadioCountToLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MilliTimer" scoped="" ref="0x1024945a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x102475a18"/>
            <typename><typedef-ref name="TMilli" ref="0x102475d70"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x1024928f0"/>
        <function-ref name="fired" scoped="" ref="0x102493020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x102493d10"/>
        <function-ref name="isOneShot" scoped="" ref="0x1024938c0"/>
        <function-ref name="getdt" scoped="" ref="0x1024911c0"/>
        <function-ref name="gett0" scoped="" ref="0x102492d40"/>
        <function-ref name="isRunning" scoped="" ref="0x102493470"/>
        <function-ref name="startPeriodic" scoped="" ref="0x10246f118"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x102492320"/>
        <function-ref name="startOneShot" scoped="" ref="0x10246f5b8"/>
        <function-ref name="stop" scoped="" ref="0x10246fa58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x102472678" loc="51:RadioCountToLedsC.nc">
      <component-ref qname="RadioCountToLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x102472678"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x1024729c8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x102472b50"/>
        <function-ref name="led1On" scoped="" ref="0x102472cd8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x102472e60"/>
        <function-ref name="led2Toggle" scoped="" ref="0x102471020"/>
        <function-ref name="get" scoped="" ref="0x1024711a8"/>
        <function-ref name="led1Off" scoped="" ref="0x102471330"/>
        <function-ref name="led2Off" scoped="" ref="0x102471950"/>
        <function-ref name="set" scoped="" ref="0x1024714b8"/>
        <function-ref name="led0On" scoped="" ref="0x102471640"/>
        <function-ref name="led2On" scoped="" ref="0x1024717c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Acks" ref="0x1024af320" loc="60:RadioCountToLedsC.nc">
      <component-ref qname="RadioCountToLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x1024af320"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x1024af670"/>
        <function-ref name="noAck" scoped="" ref="0x1024af7f8"/>
        <function-ref name="wasAcked" scoped="" ref="0x1024af980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x102851c20" loc="49:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="RadioCountToLedsAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x102851c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x102850020"/>
        <function-ref name="getPayload" scoped="" ref="0x1028501a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x102850330"/>
        <function-ref name="cancel" scoped="" ref="0x1028504b8"/>
        <function-ref name="sendDone" scoped="" ref="0x102850640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x102850888" loc="50:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="RadioCountToLedsAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x102850888"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x102850bd8"/>
        <function-ref name="payloadLength" scoped="" ref="0x102850d60"/>
        <function-ref name="getPayload" scoped="" ref="0x10284f020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x10284f1a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x10284f330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x10284f578" loc="51:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="RadioCountToLedsAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x10284f578"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x10284f8c8"/>
        <function-ref name="source" scoped="" ref="0x10284fa50"/>
        <function-ref name="address" scoped="" ref="0x10284fbd8"/>
        <function-ref name="destination" scoped="" ref="0x10284fd60"/>
        <function-ref name="setSource" scoped="" ref="0x10284e020"/>
        <function-ref name="setDestination" scoped="" ref="0x10284e1a8"/>
        <function-ref name="type" scoped="" ref="0x10284e330"/>
        <function-ref name="setType" scoped="" ref="0x10284e4b8"/>
        <function-ref name="isForMe" scoped="" ref="0x10284e640"/>
        <function-ref name="setGroup" scoped="" ref="0x10284e7c8"/>
        <function-ref name="localGroup" scoped="" ref="0x10284e950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x10284ebd8" loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="RadioCountToLedsAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x10284ebd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x10284d020"/>
        <function-ref name="noAck" scoped="" ref="0x10284d1a8"/>
        <function-ref name="wasAcked" scoped="" ref="0x10284d330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x102c4d020" loc="49:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="RadioCountToLedsAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x102c4d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x102c4d370"/>
        <function-ref name="getPayload" scoped="" ref="0x102c4d4f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x102c4d680"/>
        <function-ref name="cancel" scoped="" ref="0x102c4d808"/>
        <function-ref name="sendDone" scoped="" ref="0x102c4d990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x102c4dbd8" loc="50:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="RadioCountToLedsAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x102c4dbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x102c4c020"/>
        <function-ref name="payloadLength" scoped="" ref="0x102c4c1a8"/>
        <function-ref name="getPayload" scoped="" ref="0x102c4c330"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x102c4c4b8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x102c4c640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x102c4c888" loc="51:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="RadioCountToLedsAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x102c4c888"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x102c4cbd8"/>
        <function-ref name="source" scoped="" ref="0x102c4cd60"/>
        <function-ref name="address" scoped="" ref="0x102c4b020"/>
        <function-ref name="destination" scoped="" ref="0x102c4b1a8"/>
        <function-ref name="setSource" scoped="" ref="0x102c4b330"/>
        <function-ref name="setDestination" scoped="" ref="0x102c4b4b8"/>
        <function-ref name="type" scoped="" ref="0x102c4b640"/>
        <function-ref name="setType" scoped="" ref="0x102c4b7c8"/>
        <function-ref name="isForMe" scoped="" ref="0x102c4b950"/>
        <function-ref name="setGroup" scoped="" ref="0x102c4bad8"/>
        <function-ref name="localGroup" scoped="" ref="0x102c4bc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x102c4a020" loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="RadioCountToLedsAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x102c4a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x102c4a370"/>
        <function-ref name="noAck" scoped="" ref="0x102c4a4f8"/>
        <function-ref name="wasAcked" scoped="" ref="0x102c4a680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x102c41710" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="RadioCountToLedsAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x102c41710"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x102c41a60"/>
        <function-ref name="getPayload" scoped="" ref="0x102c41be8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x102c41d70"/>
        <function-ref name="cancel" scoped="" ref="0x102c40020"/>
        <function-ref name="sendDone" scoped="" ref="0x102c401a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x102c40450" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="RadioCountToLedsAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x102c40450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x102c407a0"/>
        <function-ref name="getPayload" scoped="" ref="0x102c40928"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x102c40ab0"/>
        <function-ref name="cancel" scoped="" ref="0x102c40c38"/>
        <function-ref name="sendDone" scoped="" ref="0x102c40dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x102c3e060" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="RadioCountToLedsAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x102c3e060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x102c3e3b0"/>
        <function-ref name="source" scoped="" ref="0x102c3e538"/>
        <function-ref name="address" scoped="" ref="0x102c3e6c0"/>
        <function-ref name="destination" scoped="" ref="0x102c3e848"/>
        <function-ref name="setSource" scoped="" ref="0x102c3e9d0"/>
        <function-ref name="setDestination" scoped="" ref="0x102c3eb58"/>
        <function-ref name="type" scoped="" ref="0x102c3ece0"/>
        <function-ref name="setType" scoped="" ref="0x102c3ee68"/>
        <function-ref name="isForMe" scoped="" ref="0x102c95020"/>
        <function-ref name="setGroup" scoped="" ref="0x102c951a8"/>
        <function-ref name="localGroup" scoped="" ref="0x102c95330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x10250c020" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x10250c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1016a2790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x10250c370"/>
        <function-ref name="getPayload" scoped="" ref="0x10250c4f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x10250c680"/>
        <function-ref name="cancel" scoped="" ref="0x10250c808"/>
        <function-ref name="sendDone" scoped="" ref="0x10250c990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x10253b060" loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x10253b060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x101f003b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x10253b3d0"/>
        <function-ref name="getPayload" scoped="" ref="0x10253b558"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x10253b6e0"/>
        <function-ref name="cancel" scoped="" ref="0x10253b868"/>
        <function-ref name="sendDone" scoped="" ref="0x10253b9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x10253c2c8" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x10253c2c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1016a2790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x10253c638"/>
        <function-ref name="getPayload" scoped="" ref="0x10253c7c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x10253c948"/>
        <function-ref name="cancel" scoped="" ref="0x10253cad0"/>
        <function-ref name="sendDone" scoped="" ref="0x10253cc58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x102539268" loc="50:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x102539268"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1025395b8"/>
        <function-ref name="payloadLength" scoped="" ref="0x102539740"/>
        <function-ref name="getPayload" scoped="" ref="0x1025398c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x102539a50"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x102539bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x102538020" loc="169:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="errorTask" scoped="" ref="0x102538020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x102538370"/>
        <function-ref name="runTask" scoped="" ref="0x1025384f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x1025387c0" loc="126:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CancelTask" scoped="" ref="0x1025387c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x102538b10"/>
        <function-ref name="runTask" scoped="" ref="0x102538c98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x10253bc38" loc="49:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x10253bc38"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x10253a020"/>
        <function-ref name="source" scoped="" ref="0x10253a1a8"/>
        <function-ref name="address" scoped="" ref="0x10253a330"/>
        <function-ref name="destination" scoped="" ref="0x10253a4b8"/>
        <function-ref name="setSource" scoped="" ref="0x10253a640"/>
        <function-ref name="setDestination" scoped="" ref="0x10253a7c8"/>
        <function-ref name="type" scoped="" ref="0x10253a950"/>
        <function-ref name="setType" scoped="" ref="0x10253aad8"/>
        <function-ref name="isForMe" scoped="" ref="0x10253ac60"/>
        <function-ref name="setGroup" scoped="" ref="0x10253ade8"/>
        <function-ref name="localGroup" scoped="" ref="0x102539020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LplxPacket" ref="0x10256ac00" loc="13:../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LplxPacket" scoped="" ref="0x10256ac00"/></type-interface>
      <instance>
        <interfacedef-ref qname="LplxPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setOppoRouting" scoped="" ref="0x102569020"/>
        <function-ref name="clearSettings" scoped="" ref="0x1025691a8"/>
        <function-ref name="setPacketBulk" scoped="" ref="0x102569330"/>
        <function-ref name="getPacketBulk" scoped="" ref="0x1025694b8"/>
        <function-ref name="setPacketCI" scoped="" ref="0x102569640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x10256f5b0" loc="7:../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x10256f5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x101f003b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x10256f900"/>
        <function-ref name="getPayload" scoped="" ref="0x10256fa88"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x10256fc10"/>
        <function-ref name="cancel" scoped="" ref="0x10256fd98"/>
        <function-ref name="sendDone" scoped="" ref="0x10256e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x10256c348" loc="9:../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x10256c348"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x101f003b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x10256c698"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x10256c920" loc="11:../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x10256c920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10256cc70"/>
        <function-ref name="payloadLength" scoped="" ref="0x10256cdf8"/>
        <function-ref name="getPayload" scoped="" ref="0x10256b020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x10256b1a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x10256b330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x10256e7a0" loc="8:../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x10256e7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x101f003b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x10256eaf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x102569968" loc="14:../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x102569968"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x102569cb8"/>
        <function-ref name="noAck" scoped="" ref="0x102569e40"/>
        <function-ref name="wasAcked" scoped="" ref="0x102568020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x102536918" loc="5:../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x102536918"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x102536c68"/>
        <function-ref name="stop" scoped="" ref="0x102536df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x10256b5d0" loc="12:../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x10256b5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x10256b920"/>
        <function-ref name="source" scoped="" ref="0x10256baa8"/>
        <function-ref name="address" scoped="" ref="0x10256bc30"/>
        <function-ref name="destination" scoped="" ref="0x10256bdb8"/>
        <function-ref name="setSource" scoped="" ref="0x10256a020"/>
        <function-ref name="setDestination" scoped="" ref="0x10256a1a8"/>
        <function-ref name="type" scoped="" ref="0x10256a330"/>
        <function-ref name="setType" scoped="" ref="0x10256a4b8"/>
        <function-ref name="isForMe" scoped="" ref="0x10256a640"/>
        <function-ref name="setGroup" scoped="" ref="0x10256a7c8"/>
        <function-ref name="localGroup" scoped="" ref="0x10256a950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LplxPacket" ref="0x102565458" loc="12:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LplxPacket" scoped="" ref="0x102565458"/></type-interface>
      <instance>
        <interfacedef-ref qname="LplxPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setOppoRouting" scoped="" ref="0x1025657a8"/>
        <function-ref name="clearSettings" scoped="" ref="0x102565930"/>
        <function-ref name="setPacketBulk" scoped="" ref="0x102565ab8"/>
        <function-ref name="getPacketBulk" scoped="" ref="0x102565c40"/>
        <function-ref name="setPacketCI" scoped="" ref="0x102565dc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x102555700" loc="22:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x102555700"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x101f003b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x102555a50"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x102555bd8"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x102555d60"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x10255d020"/>
        <function-ref name="setCca" scoped="" ref="0x10255d1a8"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x10255d330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x102563740" loc="14:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x102563740"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x102563a90"/>
        <function-ref name="payloadLength" scoped="" ref="0x102563c18"/>
        <function-ref name="getPayload" scoped="" ref="0x102563da0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x102562020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x1025621a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioControl" ref="0x102568ca8" loc="11:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioControl" scoped="" ref="0x102568ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x102565020"/>
        <function-ref name="stop" scoped="" ref="0x1025651a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x1025618e8" loc="19:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x1025618e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x101f003b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x102561c38"/>
        <function-ref name="getPayload" scoped="" ref="0x102561dc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x102560020"/>
        <function-ref name="cancel" scoped="" ref="0x1025601a8"/>
        <function-ref name="sendDone" scoped="" ref="0x102560330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OppoRouting" ref="0x102562de8" loc="17:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OppoRouting" scoped="" ref="0x102562de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="OppoRouting"/>
      </instance>
      <interface-functions>
        <function-ref name="setLocalMetric" scoped="" ref="0x102561170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x10255e628" loc="21:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x10255e628"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x101f003b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x10255e978"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x102560ab0" loc="20:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x102560ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x101f003b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x102560e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x102554508" loc="23:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x102554508"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x101f003b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x102554858"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x1025624d0" loc="15:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x1025624d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x102562820"/>
        <function-ref name="noAck" scoped="" ref="0x1025629a8"/>
        <function-ref name="wasAcked" scoped="" ref="0x102562b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x1025640c0" loc="13:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x1025640c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x102564410"/>
        <function-ref name="source" scoped="" ref="0x102564598"/>
        <function-ref name="address" scoped="" ref="0x102564720"/>
        <function-ref name="destination" scoped="" ref="0x1025648a8"/>
        <function-ref name="setSource" scoped="" ref="0x102564a30"/>
        <function-ref name="setDestination" scoped="" ref="0x102564bb8"/>
        <function-ref name="type" scoped="" ref="0x102564d40"/>
        <function-ref name="setType" scoped="" ref="0x102563020"/>
        <function-ref name="isForMe" scoped="" ref="0x1025631a8"/>
        <function-ref name="setGroup" scoped="" ref="0x102563330"/>
        <function-ref name="localGroup" scoped="" ref="0x1025634b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x102580c50" loc="17:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x102580c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x102585020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x102586020" loc="15:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x102586020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x102586370"/>
        <function-ref name="getPayload" scoped="" ref="0x1025864f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x102586680"/>
        <function-ref name="cancel" scoped="" ref="0x102586808"/>
        <function-ref name="sendDone" scoped="" ref="0x102586990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LplxPacket" ref="0x102585948" loc="19:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LplxPacket" scoped="" ref="0x102585948"/></type-interface>
      <instance>
        <interfacedef-ref qname="LplxPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setOppoRouting" scoped="" ref="0x102585c98"/>
        <function-ref name="clearSettings" scoped="" ref="0x102585e20"/>
        <function-ref name="setPacketBulk" scoped="" ref="0x102584020"/>
        <function-ref name="getPacketBulk" scoped="" ref="0x1025841a8"/>
        <function-ref name="setPacketCI" scoped="" ref="0x102584330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x102587020" loc="11:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x102587020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x101f003b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x102587370"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x1025874f8"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x102587680"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x102587808"/>
        <function-ref name="setCca" scoped="" ref="0x102587990"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x102587b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x1025884e8" loc="10:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x1025884e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x101f003b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x102588838"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x10257fbd8" loc="21:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x10257fbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10257e020"/>
        <function-ref name="payloadLength" scoped="" ref="0x10257e1a8"/>
        <function-ref name="getPayload" scoped="" ref="0x10257e330"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x10257e4b8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x10257e640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x102553d10" loc="7:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x102553d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x101f003b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x10258b0a0"/>
        <function-ref name="getPayload" scoped="" ref="0x10258b228"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x10258b3b0"/>
        <function-ref name="cancel" scoped="" ref="0x10258b538"/>
        <function-ref name="sendDone" scoped="" ref="0x10258b6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x1025899b8" loc="9:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x1025899b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x101f003b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x102589d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x10258be40" loc="8:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x10258be40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x101f003b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x1025891c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BulkSend" ref="0x1025802b8" loc="16:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BulkSend" scoped="" ref="0x1025802b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BulkSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x102580608"/>
        <function-ref name="cancel" scoped="" ref="0x102580790"/>
        <function-ref name="sendDone" scoped="" ref="0x102580918"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x10257e8b8" loc="22:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x10257e8b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x10257ed08"/>
        <function-ref name="led0Toggle" scoped="" ref="0x10257d020"/>
        <function-ref name="led1On" scoped="" ref="0x10257d1a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x10257d330"/>
        <function-ref name="led2Toggle" scoped="" ref="0x10257d4b8"/>
        <function-ref name="get" scoped="" ref="0x10257d640"/>
        <function-ref name="led1Off" scoped="" ref="0x10257d7c8"/>
        <function-ref name="led2Off" scoped="" ref="0x10257dde8"/>
        <function-ref name="set" scoped="" ref="0x10257d950"/>
        <function-ref name="led0On" scoped="" ref="0x10257dad8"/>
        <function-ref name="led2On" scoped="" ref="0x10257dc60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x1025845d0" loc="20:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x1025845d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x102584920"/>
        <function-ref name="source" scoped="" ref="0x102584aa8"/>
        <function-ref name="address" scoped="" ref="0x102584c30"/>
        <function-ref name="destination" scoped="" ref="0x102584db8"/>
        <function-ref name="setSource" scoped="" ref="0x10257f020"/>
        <function-ref name="setDestination" scoped="" ref="0x10257f1a8"/>
        <function-ref name="type" scoped="" ref="0x10257f330"/>
        <function-ref name="setType" scoped="" ref="0x10257f4b8"/>
        <function-ref name="isForMe" scoped="" ref="0x10257f640"/>
        <function-ref name="setGroup" scoped="" ref="0x10257f7c8"/>
        <function-ref name="localGroup" scoped="" ref="0x10257f950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSnoop" ref="0x102585348" loc="18:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSnoop" scoped="" ref="0x102585348"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x102585698"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x1025bc338" loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x1025bc338"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x1025bc688"/>
        <function-ref name="changed" scoped="" ref="0x1025bc810"/>
        <function-ref name="amGroup" scoped="" ref="0x1025bc998"/>
        <function-ref name="setAddress" scoped="" ref="0x1025bcb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioTimerUpdate" ref="0x1025e1350" loc="9:../../tos/chips/cc2420/x-lpl/CC2420xLplC.nc">
      <component-ref qname="CC2420xLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioTimerUpdate" scoped="" ref="0x1025e1350"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioTimerUpdate"/>
      </instance>
      <interface-functions>
        <function-ref name="startRadioTime" scoped="" ref="0x1025e16a0"/>
        <function-ref name="counterUpdate" scoped="" ref="0x1025e1828"/>
        <function-ref name="triggerUpdate" scoped="" ref="0x1025e19b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioControl" ref="0x1025e92b8" loc="2:../../tos/chips/cc2420/x-lpl/CC2420xLplC.nc">
      <component-ref qname="CC2420xLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioControl" scoped="" ref="0x1025e92b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x1025e9608"/>
        <function-ref name="stop" scoped="" ref="0x1025e9790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x1025e9a48" loc="3:../../tos/chips/cc2420/x-lpl/CC2420xLplC.nc">
      <component-ref qname="CC2420xLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x1025e9a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x1025e9d98"/>
        <function-ref name="getPayload" scoped="" ref="0x1025e8020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x1025e81a8"/>
        <function-ref name="cancel" scoped="" ref="0x1025e8330"/>
        <function-ref name="sendDone" scoped="" ref="0x1025e84b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x1025e77a0" loc="6:../../tos/chips/cc2420/x-lpl/CC2420xLplC.nc">
      <component-ref qname="CC2420xLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x1025e77a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x1025e7af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OppoRouting" ref="0x1025e7de8" loc="7:../../tos/chips/cc2420/x-lpl/CC2420xLplC.nc">
      <component-ref qname="CC2420xLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OppoRouting" scoped="" ref="0x1025e7de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="OppoRouting"/>
      </instance>
      <interface-functions>
        <function-ref name="setLocalMetric" scoped="" ref="0x1025e6170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x1025e7108" loc="5:../../tos/chips/cc2420/x-lpl/CC2420xLplC.nc">
      <component-ref qname="CC2420xLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x1025e7108"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x1025e7458"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BulkSend" ref="0x1025e8798" loc="4:../../tos/chips/cc2420/x-lpl/CC2420xLplC.nc">
      <component-ref qname="CC2420xLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BulkSend" scoped="" ref="0x1025e8798"/></type-interface>
      <instance>
        <interfacedef-ref qname="BulkSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x1025e8ae8"/>
        <function-ref name="cancel" scoped="" ref="0x1025e8c70"/>
        <function-ref name="sendDone" scoped="" ref="0x1025e8df8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x1025dce58" loc="16:../../tos/chips/cc2420/x-lpl/CC2420xLplP.nc">
      <component-ref qname="CC2420xLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x1025dce58"/></type-interface>
      <instance>
        <interfacedef-ref qname="LplSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x1025db1e8"/>
        <function-ref name="sendDone" scoped="" ref="0x1025db370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x1025db708" loc="17:../../tos/chips/cc2420/x-lpl/CC2420xLplP.nc">
      <component-ref qname="CC2420xLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x1025db708"/></type-interface>
      <instance>
        <interfacedef-ref qname="LplReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="txDetect" scoped="" ref="0x1025dba58"/>
        <function-ref name="rxInit" scoped="" ref="0x1025dbbe0"/>
        <function-ref name="receive" scoped="" ref="0x1025dbd68"/>
        <function-ref name="rxOn" scoped="" ref="0x1025da020"/>
        <function-ref name="rxBuffSet" scoped="" ref="0x1025da1a8"/>
        <function-ref name="rxEnable" scoped="" ref="0x1025da330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioTimerUpdate" ref="0x1025dc4a0" loc="14:../../tos/chips/cc2420/x-lpl/CC2420xLplP.nc">
      <component-ref qname="CC2420xLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioTimerUpdate" scoped="" ref="0x1025dc4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioTimerUpdate"/>
      </instance>
      <interface-functions>
        <function-ref name="startRadioTime" scoped="" ref="0x1025dc7f0"/>
        <function-ref name="counterUpdate" scoped="" ref="0x1025dc978"/>
        <function-ref name="triggerUpdate" scoped="" ref="0x1025dcb00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioControl" ref="0x1025de020" loc="10:../../tos/chips/cc2420/x-lpl/CC2420xLplP.nc">
      <component-ref qname="CC2420xLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioControl" scoped="" ref="0x1025de020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x1025de370"/>
        <function-ref name="stop" scoped="" ref="0x1025de4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x1025de7b0" loc="11:../../tos/chips/cc2420/x-lpl/CC2420xLplP.nc">
      <component-ref qname="CC2420xLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x1025de7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x1025deb00"/>
        <function-ref name="getPayload" scoped="" ref="0x1025dec88"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x1025dee10"/>
        <function-ref name="cancel" scoped="" ref="0x1025dd020"/>
        <function-ref name="sendDone" scoped="" ref="0x1025dd1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x1025d1508" loc="20:../../tos/chips/cc2420/x-lpl/CC2420xLplP.nc">
      <component-ref qname="CC2420xLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x1025d1508"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x1025d1858"/>
        <function-ref name="rand32" scoped="" ref="0x1025d19e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x1025df848" loc="9:../../tos/chips/cc2420/x-lpl/CC2420xLplP.nc">
      <component-ref qname="CC2420xLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x1025df848"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1025dfb98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x1025dddb8" loc="13:../../tos/chips/cc2420/x-lpl/CC2420xLplP.nc">
      <component-ref qname="CC2420xLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x1025dddb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x1025dc170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BulkSend" ref="0x1025dd488" loc="12:../../tos/chips/cc2420/x-lpl/CC2420xLplP.nc">
      <component-ref qname="CC2420xLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BulkSend" scoped="" ref="0x1025dd488"/></type-interface>
      <instance>
        <interfacedef-ref qname="BulkSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x1025dd7d8"/>
        <function-ref name="cancel" scoped="" ref="0x1025dd960"/>
        <function-ref name="sendDone" scoped="" ref="0x1025ddae8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SleepTimer" ref="0x1025d9020" loc="19:../../tos/chips/cc2420/x-lpl/CC2420xLplP.nc">
      <component-ref qname="CC2420xLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SleepTimer" scoped="" ref="0x1025d9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x102475a18"/>
            <typename><typedef-ref name="TMilli" ref="0x102475d70"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x1025d52b8"/>
        <function-ref name="fired" scoped="" ref="0x1025d8978"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x1025d66c8"/>
        <function-ref name="isOneShot" scoped="" ref="0x1025d6278"/>
        <function-ref name="getdt" scoped="" ref="0x1025d5b58"/>
        <function-ref name="gett0" scoped="" ref="0x1025d5708"/>
        <function-ref name="isRunning" scoped="" ref="0x1025d8dc8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x1025d9b68"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x1025d6c98"/>
        <function-ref name="startOneShot" scoped="" ref="0x1025d8088"/>
        <function-ref name="stop" scoped="" ref="0x1025d8528"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x1025d1c98" loc="22:../../tos/chips/cc2420/x-lpl/CC2420xLplP.nc">
      <component-ref qname="CC2420xLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x1025d1c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x1025d3020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x1025d31a8"/>
        <function-ref name="led1On" scoped="" ref="0x1025d3330"/>
        <function-ref name="led1Toggle" scoped="" ref="0x1025d34b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x1025d3640"/>
        <function-ref name="get" scoped="" ref="0x1025d37c8"/>
        <function-ref name="led1Off" scoped="" ref="0x1025d3950"/>
        <function-ref name="led2Off" scoped="" ref="0x1025d2020"/>
        <function-ref name="set" scoped="" ref="0x1025d3ad8"/>
        <function-ref name="led0On" scoped="" ref="0x1025d3c60"/>
        <function-ref name="led2On" scoped="" ref="0x1025d3de8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LplTime" ref="0x1025da600" loc="18:../../tos/chips/cc2420/x-lpl/CC2420xLplP.nc">
      <component-ref qname="CC2420xLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LplTime" scoped="" ref="0x1025da600"/></type-interface>
      <instance>
        <interfacedef-ref qname="LplTime"/>
      </instance>
      <interface-functions>
        <function-ref name="timeRadio" scoped="" ref="0x1025da950"/>
        <function-ref name="timeCompensated" scoped="" ref="0x1025daad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x1026421c8" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="CC2420xLplC.SleepTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x1026421c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x102475a18"/>
            <typename><typedef-ref name="TMilli" ref="0x102475d70"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x1027f75f0"/>
        <function-ref name="fired" scoped="" ref="0x1027faaf0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x1027f88c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x1027f8470"/>
        <function-ref name="getdt" scoped="" ref="0x1027f6020"/>
        <function-ref name="gett0" scoped="" ref="0x1027f7a40"/>
        <function-ref name="isRunning" scoped="" ref="0x1027f8020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x102642d10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x1027f7020"/>
        <function-ref name="startOneShot" scoped="" ref="0x1027fa200"/>
        <function-ref name="stop" scoped="" ref="0x1027fa6a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x10263ce40" loc="49:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x10263ce40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x102475a18"/>
            <typename><typedef-ref name="TMilli" ref="0x102475d70"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1016a2790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x1026350c0"/>
        <function-ref name="fired" scoped="" ref="0x102638798"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x1026364d8"/>
        <function-ref name="isOneShot" scoped="" ref="0x102636088"/>
        <function-ref name="getdt" scoped="" ref="0x102635960"/>
        <function-ref name="gett0" scoped="" ref="0x102635510"/>
        <function-ref name="isRunning" scoped="" ref="0x102638be8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x1026399e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x102636aa8"/>
        <function-ref name="startOneShot" scoped="" ref="0x102639e80"/>
        <function-ref name="stop" scoped="" ref="0x102638348"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x1026304a0" loc="35:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x1026304a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x102475a18"/>
            <typename><typedef-ref name="TMilli" ref="0x102475d70"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1016a2790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x10262d6c8"/>
        <function-ref name="fired" scoped="" ref="0x10262fdb0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x10262ead8"/>
        <function-ref name="isOneShot" scoped="" ref="0x10262e688"/>
        <function-ref name="getdt" scoped="" ref="0x10262b020"/>
        <function-ref name="gett0" scoped="" ref="0x10262db18"/>
        <function-ref name="isRunning" scoped="" ref="0x10262e238"/>
        <function-ref name="startPeriodic" scoped="" ref="0x10262f020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x10262d0f8"/>
        <function-ref name="startOneShot" scoped="" ref="0x10262f4c0"/>
        <function-ref name="stop" scoped="" ref="0x10262f960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x10262b5e0" loc="36:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x10262b5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x102475a18"/>
            <typename><typedef-ref name="TMilli" ref="0x102475d70"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x10262a190"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x102633750" loc="34:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x102633750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x102633aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x10273f4b8" loc="33:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x10273f4b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x102475a18"/>
            <typename><typedef-ref name="TMilli" ref="0x102475d70"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x1016a3020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x10273db18"/>
        <function-ref name="fired" scoped="" ref="0x10273eb90"/>
        <function-ref name="startAt" scoped="" ref="0x10273d510"/>
        <function-ref name="isRunning" scoped="" ref="0x10273d088"/>
        <function-ref name="getAlarm" scoped="" ref="0x10273c020"/>
        <function-ref name="start" scoped="" ref="0x10273e230"/>
        <function-ref name="stop" scoped="" ref="0x10273e708"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x102667b40" loc="32:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x102667b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10273f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x102c9cb40" loc="33:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x102c9cb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1024731d8"/>
            <typename><typedef-ref name="T32khz" ref="0x102473530"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x1016a2b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x102c98238"/>
        <function-ref name="fired" scoped="" ref="0x102c992b0"/>
        <function-ref name="startAt" scoped="" ref="0x102c99bc0"/>
        <function-ref name="isRunning" scoped="" ref="0x102c99738"/>
        <function-ref name="getAlarm" scoped="" ref="0x102c986c0"/>
        <function-ref name="start" scoped="" ref="0x102c9a8f8"/>
        <function-ref name="stop" scoped="" ref="0x102c9add0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x102c9c358" loc="32:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x102c9c358"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x102c9c6a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x102cdc740" loc="30:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x102cdc740"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x102cdca90"/>
        <function-ref name="setEvent" scoped="" ref="0x102cdcc18"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x102cdcda0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x102cdb020"/>
        <function-ref name="fired" scoped="" ref="0x102cdb1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x102ce0e60" loc="28:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x102ce0e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x102cde1e8"/>
        <function-ref name="setClockSource" scoped="" ref="0x102cde370"/>
        <function-ref name="enableEvents" scoped="" ref="0x102cde4f8"/>
        <function-ref name="get" scoped="" ref="0x102cde680"/>
        <function-ref name="disableEvents" scoped="" ref="0x102cde808"/>
        <function-ref name="clearOverflow" scoped="" ref="0x102cde990"/>
        <function-ref name="getMode" scoped="" ref="0x102cdeb18"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x102cdeca0"/>
        <function-ref name="overflow" scoped="" ref="0x102cdee28"/>
        <function-ref name="setMode" scoped="" ref="0x102cdd020"/>
        <function-ref name="setInputDivider" scoped="" ref="0x102cdd1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x102cdd430" loc="29:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x102cdd430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x102cdd780"/>
        <function-ref name="getControl" scoped="" ref="0x102cdd908"/>
        <function-ref name="enableEvents" scoped="" ref="0x102cdda90"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x102cddc18"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x102cddda0"/>
        <function-ref name="disableEvents" scoped="" ref="0x102cdc020"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x102cdc1a8"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x102cdc330"/>
        <function-ref name="setControl" scoped="" ref="0x102cdc4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x102687498" loc="10:../../tos/chips/msp430/timer/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x102687498"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1016a2790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x1026877e8"/>
        <function-ref name="setEvent" scoped="" ref="0x102687970"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x102687af8"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x102687c80"/>
        <function-ref name="fired" scoped="" ref="0x102687e08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x10264b020" loc="8:../../tos/chips/msp430/timer/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x10264b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1016a2790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10264b370"/>
        <function-ref name="setClockSource" scoped="" ref="0x10264b4f8"/>
        <function-ref name="enableEvents" scoped="" ref="0x10264b680"/>
        <function-ref name="get" scoped="" ref="0x10264b808"/>
        <function-ref name="disableEvents" scoped="" ref="0x10264b990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10264bb18"/>
        <function-ref name="getMode" scoped="" ref="0x10264bca0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10264be28"/>
        <function-ref name="overflow" scoped="" ref="0x10264a020"/>
        <function-ref name="setMode" scoped="" ref="0x10264a1a8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x10264a330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x10264ab60" loc="9:../../tos/chips/msp430/timer/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x10264ab60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1016a2790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x102688020"/>
        <function-ref name="getControl" scoped="" ref="0x1026881a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x102688330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x1026884b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x102688640"/>
        <function-ref name="disableEvents" scoped="" ref="0x1026887c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x102688950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x102688ad8"/>
        <function-ref name="setControl" scoped="" ref="0x102688c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x102cd2020" loc="40:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x102cd2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x102cd2370"/>
        <function-ref name="setEvent" scoped="" ref="0x102cd24f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x102cd2680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x102cd2808"/>
        <function-ref name="fired" scoped="" ref="0x102cd2990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x102cd55a8" loc="38:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x102cd55a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x102cd58f8"/>
        <function-ref name="setClockSource" scoped="" ref="0x102cd5a80"/>
        <function-ref name="enableEvents" scoped="" ref="0x102cd5c08"/>
        <function-ref name="get" scoped="" ref="0x102cd5d90"/>
        <function-ref name="disableEvents" scoped="" ref="0x102cd4020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x102cd41a8"/>
        <function-ref name="getMode" scoped="" ref="0x102cd4330"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x102cd44b8"/>
        <function-ref name="overflow" scoped="" ref="0x102cd4640"/>
        <function-ref name="setMode" scoped="" ref="0x102cd47c8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x102cd4950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x102cd9648" loc="37:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x102cd9648"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1024731d8"/>
            <typename><typedef-ref name="T32khz" ref="0x102473530"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x1016a2b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x102cd6cc0"/>
        <function-ref name="fired" scoped="" ref="0x102cd8d50"/>
        <function-ref name="startAt" scoped="" ref="0x102cd66b8"/>
        <function-ref name="isRunning" scoped="" ref="0x102cd6230"/>
        <function-ref name="getAlarm" scoped="" ref="0x102cd5190"/>
        <function-ref name="start" scoped="" ref="0x102cd83f0"/>
        <function-ref name="stop" scoped="" ref="0x102cd88c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x102cdad90" loc="36:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x102cdad90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x102cd9170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x102cd4bd8" loc="39:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x102cd4bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x102cd3020"/>
        <function-ref name="getControl" scoped="" ref="0x102cd31a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x102cd3330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x102cd34b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x102cd3640"/>
        <function-ref name="disableEvents" scoped="" ref="0x102cd37c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x102cd3950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x102cd3ad8"/>
        <function-ref name="setControl" scoped="" ref="0x102cd3c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x102cd2c18" loc="41:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x102cd2c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x102cd1020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x102cd11a8"/>
        <function-ref name="led1On" scoped="" ref="0x102cd1330"/>
        <function-ref name="led1Toggle" scoped="" ref="0x102cd14b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x102cd1640"/>
        <function-ref name="get" scoped="" ref="0x102cd17c8"/>
        <function-ref name="led1Off" scoped="" ref="0x102cd1950"/>
        <function-ref name="led0On" scoped="" ref="0x102cd0020"/>
        <function-ref name="set" scoped="" ref="0x102cd1c60"/>
        <function-ref name="led2On" scoped="" ref="0x102cd1ad8"/>
        <function-ref name="led2Off" scoped="" ref="0x102cd1de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x1026c22e8" loc="32:../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x1026c22e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x102475a18"/>
            <typename><typedef-ref name="TMilli" ref="0x102475d70"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x1016a3020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x1026c1088"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1026c1998"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1026c1510"/>
        <function-ref name="overflow" scoped="" ref="0x1026c1e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Counter32khz" ref="0x1026b9118" loc="32:../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <component-ref qname="Msp430Counter32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Counter32khz" scoped="" ref="0x1026b9118"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1024731d8"/>
            <typename><typedef-ref name="T32khz" ref="0x102473530"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x1016a2b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x1026b9e68"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1026b87a8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1026b8320"/>
        <function-ref name="overflow" scoped="" ref="0x1026b8c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x1026e98c0" loc="34:../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x1026e98c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1026e9c10"/>
        <function-ref name="setClockSource" scoped="" ref="0x1026e9d98"/>
        <function-ref name="enableEvents" scoped="" ref="0x1026e8020"/>
        <function-ref name="get" scoped="" ref="0x1026e81a8"/>
        <function-ref name="disableEvents" scoped="" ref="0x1026e8330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1026e84b8"/>
        <function-ref name="getMode" scoped="" ref="0x1026e8640"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1026e87c8"/>
        <function-ref name="overflow" scoped="" ref="0x1026e8950"/>
        <function-ref name="setMode" scoped="" ref="0x1026e8ad8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x1026e8c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x1026b5888" loc="33:../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x1026b5888"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1024731d8"/>
            <typename><typedef-ref name="T32khz" ref="0x102473530"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x1016a2b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x1026ea660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1026e9020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1026eaae8"/>
        <function-ref name="overflow" scoped="" ref="0x1026e94a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioTimerUpdate" ref="0x1026f7ad0" loc="67:../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioTimerUpdate" scoped="" ref="0x1026f7ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioTimerUpdate"/>
      </instance>
      <interface-functions>
        <function-ref name="startRadioTime" scoped="" ref="0x1026f7e20"/>
        <function-ref name="counterUpdate" scoped="" ref="0x1026f6020"/>
        <function-ref name="triggerUpdate" scoped="" ref="0x1026f61a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x1026fab10" loc="66:../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x1026fab10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1024731d8"/>
            <typename><typedef-ref name="T32khz" ref="0x102473530"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x1016a2b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x1026f98f8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1026f7230"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1026f9d80"/>
        <function-ref name="overflow" scoped="" ref="0x1026f76b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x1026e48d8" loc="65:../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x1026e48d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x102475a18"/>
            <typename><typedef-ref name="TMilli" ref="0x102475d70"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x1016a3020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x1026fb660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1026fa020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1026fbae8"/>
        <function-ref name="overflow" scoped="" ref="0x1026fa4a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x102c96a20" loc="61:../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x102c96a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x102475a18"/>
            <typename><typedef-ref name="TMilli" ref="0x102475d70"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x1016a3020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x102cec088"/>
        <function-ref name="fired" scoped="" ref="0x102cee130"/>
        <function-ref name="startAt" scoped="" ref="0x102ceea40"/>
        <function-ref name="isRunning" scoped="" ref="0x102cee5b8"/>
        <function-ref name="getAlarm" scoped="" ref="0x102cec510"/>
        <function-ref name="start" scoped="" ref="0x102cef7a8"/>
        <function-ref name="stop" scoped="" ref="0x102cefc80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x102cead20" loc="73:../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x102cead20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1024731d8"/>
            <typename><typedef-ref name="T32khz" ref="0x102473530"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x1016a2b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x102ce6410"/>
        <function-ref name="fired" scoped="" ref="0x102ce74a8"/>
        <function-ref name="startAt" scoped="" ref="0x102ce7db8"/>
        <function-ref name="isRunning" scoped="" ref="0x102ce7930"/>
        <function-ref name="getAlarm" scoped="" ref="0x102ce6898"/>
        <function-ref name="start" scoped="" ref="0x102ce9ac0"/>
        <function-ref name="stop" scoped="" ref="0x102ce7020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x102cecb38" loc="68:../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x102cecb38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x102475a18"/>
            <typename><typedef-ref name="TMilli" ref="0x102475d70"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x1016a3020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x102ceb8f8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x102cea230"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x102cebd80"/>
        <function-ref name="overflow" scoped="" ref="0x102cea6b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x102ce6cb0" loc="74:../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x102ce6cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x102ce50a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x102ce5228"/>
        <function-ref name="led1On" scoped="" ref="0x102ce53b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x102ce5538"/>
        <function-ref name="led2Toggle" scoped="" ref="0x102ce56c0"/>
        <function-ref name="get" scoped="" ref="0x102ce5848"/>
        <function-ref name="led1Off" scoped="" ref="0x102ce59d0"/>
        <function-ref name="led0On" scoped="" ref="0x102ce4020"/>
        <function-ref name="set" scoped="" ref="0x102ce5ce0"/>
        <function-ref name="led2On" scoped="" ref="0x102ce5b58"/>
        <function-ref name="led2Off" scoped="" ref="0x102ce5e68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x102793900" loc="76:../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="fired" scoped="" ref="0x102793900"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x102793c50"/>
        <function-ref name="runTask" scoped="" ref="0x102793dd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x1027536b0" loc="49:../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x1027536b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x102475a18"/>
            <typename><typedef-ref name="TMilli" ref="0x102475d70"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x1016a3020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x102793020"/>
        <function-ref name="fired" scoped="" ref="0x102795020"/>
        <function-ref name="startAt" scoped="" ref="0x102795930"/>
        <function-ref name="isRunning" scoped="" ref="0x1027954a8"/>
        <function-ref name="getAlarm" scoped="" ref="0x1027934a8"/>
        <function-ref name="start" scoped="" ref="0x102752578"/>
        <function-ref name="stop" scoped="" ref="0x102752a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x102758528" loc="48:../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x102758528"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x102475a18"/>
            <typename><typedef-ref name="TMilli" ref="0x102475d70"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x102754768"/>
        <function-ref name="fired" scoped="" ref="0x102757e50"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x102756b78"/>
        <function-ref name="isOneShot" scoped="" ref="0x102756728"/>
        <function-ref name="getdt" scoped="" ref="0x102753088"/>
        <function-ref name="gett0" scoped="" ref="0x102754bb8"/>
        <function-ref name="isRunning" scoped="" ref="0x1027562d8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x1027570c0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x102754198"/>
        <function-ref name="startOneShot" scoped="" ref="0x102757560"/>
        <function-ref name="stop" scoped="" ref="0x102757a00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x1027c8020" loc="74:../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="updateFromTimer" scoped="" ref="0x1027c8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x1027c8370"/>
        <function-ref name="runTask" scoped="" ref="0x1027c84f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x1027cf678" loc="51:../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x1027cf678"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x102475a18"/>
            <typename><typedef-ref name="TMilli" ref="0x102475d70"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x1027cb8f0"/>
        <function-ref name="fired" scoped="" ref="0x1027cc020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x1027ccd10"/>
        <function-ref name="isOneShot" scoped="" ref="0x1027cc8c0"/>
        <function-ref name="getdt" scoped="" ref="0x1027c91c0"/>
        <function-ref name="gett0" scoped="" ref="0x1027cbd40"/>
        <function-ref name="isRunning" scoped="" ref="0x1027cc470"/>
        <function-ref name="startPeriodic" scoped="" ref="0x1027cd1e8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x1027cb320"/>
        <function-ref name="startOneShot" scoped="" ref="0x1027cd688"/>
        <function-ref name="stop" scoped="" ref="0x1027cdb28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioTimerUpdate" ref="0x1027c95d8" loc="52:../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioTimerUpdate" scoped="" ref="0x1027c95d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioTimerUpdate"/>
      </instance>
      <interface-functions>
        <function-ref name="startRadioTime" scoped="" ref="0x1027c9928"/>
        <function-ref name="counterUpdate" scoped="" ref="0x1027c9ab0"/>
        <function-ref name="triggerUpdate" scoped="" ref="0x1027c9c38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x1027d5328" loc="50:../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x1027d5328"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x102475a18"/>
            <typename><typedef-ref name="TMilli" ref="0x102475d70"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1016a2790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x1027d07f0"/>
        <function-ref name="fired" scoped="" ref="0x1027d3e10"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x1027d2bb8"/>
        <function-ref name="isOneShot" scoped="" ref="0x1027d2748"/>
        <function-ref name="getdt" scoped="" ref="0x1027cf0f8"/>
        <function-ref name="gett0" scoped="" ref="0x1027d0c60"/>
        <function-ref name="isRunning" scoped="" ref="0x1027d22d8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x1027d3020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x1027d0200"/>
        <function-ref name="startOneShot" scoped="" ref="0x1027d34e0"/>
        <function-ref name="stop" scoped="" ref="0x1027d39a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x1027c67f8" loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x1027c67f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x102475a18"/>
            <typename><typedef-ref name="TMilli" ref="0x102475d70"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x1027c53a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x1027c59d0" loc="49:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x1027c59d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x102475a18"/>
            <typename><typedef-ref name="TMilli" ref="0x102475d70"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x1016a3020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x1027bb768"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1027ba0c0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1027bbbf0"/>
        <function-ref name="overflow" scoped="" ref="0x1027ba548"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x1027f0530" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x1027f0530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x1027f0880"/>
        <function-ref name="rand32" scoped="" ref="0x1027f0a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x1027ef4c0" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x1027ef4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x1016a2b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1027f0088"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x1027f5758" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x1027f5758"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1027f5aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x1027ea320" loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x1027ea320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x1027ea670"/>
        <function-ref name="rand32" scoped="" ref="0x1027ea7f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x1027eb2b8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x1027eb2b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x1016a2b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1027ebe00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x1027eea40" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x1027eea40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1027eed90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LplxPacket" ref="0x102821a08" loc="4:../../tos/chips/cc2420/x-packet/CC2420xPacketP.nc">
      <component-ref qname="CC2420xPacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LplxPacket" scoped="" ref="0x102821a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="LplxPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setOppoRouting" scoped="" ref="0x102821d58"/>
        <function-ref name="clearSettings" scoped="" ref="0x10281e020"/>
        <function-ref name="setPacketBulk" scoped="" ref="0x10281e1a8"/>
        <function-ref name="getPacketBulk" scoped="" ref="0x10281e330"/>
        <function-ref name="setPacketCI" scoped="" ref="0x10281e4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x10281dda0" loc="6:../../tos/chips/cc2420/x-packet/CC2420xPacketP.nc">
      <component-ref qname="CC2420xPacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x10281dda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10281c170"/>
        <function-ref name="payloadLength" scoped="" ref="0x10281c2f8"/>
        <function-ref name="getPayload" scoped="" ref="0x10281c480"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x10281c608"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x10281c790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x10281e798" loc="5:../../tos/chips/cc2420/x-packet/CC2420xPacketP.nc">
      <component-ref qname="CC2420xPacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x10281e798"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x10281eae8"/>
        <function-ref name="source" scoped="" ref="0x10281ec70"/>
        <function-ref name="address" scoped="" ref="0x10281edf8"/>
        <function-ref name="destination" scoped="" ref="0x10281d020"/>
        <function-ref name="setSource" scoped="" ref="0x10281d1a8"/>
        <function-ref name="setDestination" scoped="" ref="0x10281d330"/>
        <function-ref name="type" scoped="" ref="0x10281d4b8"/>
        <function-ref name="setType" scoped="" ref="0x10281d640"/>
        <function-ref name="isForMe" scoped="" ref="0x10281d7c8"/>
        <function-ref name="setGroup" scoped="" ref="0x10281d950"/>
        <function-ref name="localGroup" scoped="" ref="0x10281dad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x10281cb68" loc="7:../../tos/chips/cc2420/x-packet/CC2420xPacketP.nc">
      <component-ref qname="CC2420xPacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x10281cb68"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x10281b020"/>
        <function-ref name="noAck" scoped="" ref="0x10281b1a8"/>
        <function-ref name="wasAcked" scoped="" ref="0x10281b330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x10288d408" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="RadioCountToLedsAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x10288d408"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10288d758"/>
        <function-ref name="payloadLength" scoped="" ref="0x10288d8e0"/>
        <function-ref name="getPayload" scoped="" ref="0x10288da68"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x10288dbf0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x10288dd78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x10284ae38" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="RadioCountToLedsAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x10284ae38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x10288d1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x10288b020" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="RadioCountToLedsAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x10288b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x10288b370"/>
        <function-ref name="source" scoped="" ref="0x10288b4f8"/>
        <function-ref name="address" scoped="" ref="0x10288b680"/>
        <function-ref name="destination" scoped="" ref="0x10288b808"/>
        <function-ref name="setSource" scoped="" ref="0x10288b990"/>
        <function-ref name="setDestination" scoped="" ref="0x10288bb18"/>
        <function-ref name="type" scoped="" ref="0x10288bca0"/>
        <function-ref name="setType" scoped="" ref="0x10288be28"/>
        <function-ref name="isForMe" scoped="" ref="0x10288a020"/>
        <function-ref name="setGroup" scoped="" ref="0x10288a1a8"/>
        <function-ref name="localGroup" scoped="" ref="0x10288a330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x102889ce0" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="RadioCountToLedsAppC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x102889ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x102475a18"/>
            <typename><typedef-ref name="TMilli" ref="0x102475d70"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x102885088"/>
        <function-ref name="fired" scoped="" ref="0x102887688"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x102886470"/>
        <function-ref name="isOneShot" scoped="" ref="0x102886020"/>
        <function-ref name="getdt" scoped="" ref="0x102885928"/>
        <function-ref name="gett0" scoped="" ref="0x1028854d8"/>
        <function-ref name="isRunning" scoped="" ref="0x102887ad8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x1028888b8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x102886a40"/>
        <function-ref name="startOneShot" scoped="" ref="0x102888d58"/>
        <function-ref name="stop" scoped="" ref="0x102887238"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Init.nc">
      <documentation loc="34:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x101d9a1d8" loc="62:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Init.nc">
        <documentation loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x101920780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Boot.nc">
      <documentation loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x101da1e08" loc="60:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Boot.nc">
        <documentation loc="51:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430ClockInit" loc="27:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
      <documentation loc="22:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="defaultInitTimerB" ref="0x101dc7020" loc="37:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerB" ref="0x101dca3e0" loc="32:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitTimerA" ref="0x101dc9920" loc="36:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerA" ref="0x101dcbd20" loc="31:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultSetupDcoCalibrate" ref="0x101dcaaf0" loc="34:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="setupDcoCalibrate" ref="0x101dcb020" loc="29:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initClocks" ref="0x101dcb6a0" loc="30:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitClocks" ref="0x101dc9258" loc="35:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x101a76b08" loc="62:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x1019d5ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerControl" loc="29:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
      <documentation loc="22:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="setControlAsCapture" ref="0x101e23410" loc="44:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <documentation loc="38:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
          <short> &#10; Sets the timer in capture mode.</short>
          <long> &#10; Sets the timer in capture mode.&#10; @param cm configures the capture to occur on none, rising, falling or rising_and_falling edges&#10; Msp430Timer.h has convenience definitions:&#10; MSP430TIMER_CM_NONE, MSP430TIMER_CM_RISING, MSP430TIMER_CM_FALLING, MSP430TIMER_CM_BOTH&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1016a2790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x101e231a0" loc="44:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1016a2790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControl" ref="0x101e10a40" loc="31:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x101dc0978"/>
            <typename><typedef-ref name="msp430_compare_control_t" ref="0x101ddd438"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x101e23c18" loc="46:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="areEventsEnabled" ref="0x101e22a50" loc="48:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10191c1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlAsCompare" ref="0x101e25a48" loc="36:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x101e22328" loc="47:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x101e261d8" loc="32:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10191c1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearPendingInterrupt" ref="0x101e26900" loc="33:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x101e25338" loc="35:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x101dc0978"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x101ddd438"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x101e250c8" loc="35:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x101dc0978"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x101ddd438"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Capture" loc="28:../../tos/chips/msp430/timer/Msp430Capture.nc">
      <documentation loc="22:../../tos/chips/msp430/timer/Msp430Capture.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x101e39e30" loc="33:../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="30:../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Reads the value of the last capture event in TxCCRx&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x1016a2b20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSynchronous" ref="0x101e33290" loc="68:../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="59:../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set whether the capture should occur synchronously or asynchronously.</short>
          <long>&#10; Set whether the capture should occur synchronously or asynchronously.&#10; TinyOS default is synchronous captures.&#10; WARNING: if the capture signal is asynchronous to the timer clock,&#10;          it could case a race condition (see Timer documentation&#10;          in MSP430F1xx user guide)&#10; @param synchronous TRUE to synchronize the timer capture with the&#10;        next timer clock instead of occurring asynchronously.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x10191c1d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="synchronous" ref="0x101e33020" loc="68:../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x10191c1d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x101e33da0" loc="75:../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="70:../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Signalled when an event is captured.</short>
          <long>&#10; Signalled when an event is captured.&#10;&#10; @param time The time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x1016a2b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x101e33b30" loc="75:../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x1016a2b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x101e34800" loc="57:../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="54:../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Clear the capture overflow flag for when multiple captures occur&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x101e34070" loc="52:../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="47:../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Determine if a capture overflow is pending.</short>
          <long>&#10; Determine if a capture overflow is pending.&#10;&#10; @return TRUE if the capture register has overflowed&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10191c1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEdge" ref="0x101e36788" loc="45:../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="35:../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set the edge that the capture should occur&#10;&#10; </short>
          <long>&#10; Set the edge that the capture should occur&#10;&#10; @param cm Capture Mode for edge capture.&#10; enums exist for:&#10;   MSP430TIMER_CM_NONE is no capture.&#10;   MSP430TIMER_CM_RISING is rising edge capture.&#10;   MSP430TIMER_CM_FALLING is a falling edge capture.&#10;   MSP430TIMER_CM_BOTH captures on both rising and falling edges.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1016a2790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x101e36518" loc="45:../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1016a2790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Compare" loc="27:../../tos/chips/msp430/timer/Msp430Compare.nc">
      <documentation loc="22:../../tos/chips/msp430/timer/Msp430Compare.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x101e1d470" loc="29:../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x1016a2b20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEvent" ref="0x101e1dd78" loc="30:../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x1016a2b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x101e1db08" loc="30:../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x1016a2b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromPrev" ref="0x101e1b728" loc="31:../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x1016a2b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x101e1b4b8" loc="31:../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x1016a2b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromNow" ref="0x101e3a0a8" loc="32:../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x1016a2b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x101e1be08" loc="32:../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x1016a2b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x101e3a730" loc="34:../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Timer" loc="32:../../tos/chips/msp430/timer/Msp430Timer.nc">
      <documentation loc="22:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x101e0c488" loc="41:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x101e2abd8" loc="44:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x1016a2b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="clockSource" ref="0x101e2a968" loc="44:../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x1016a2b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x101e0cb58" loc="42:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x101e12920" loc="34:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x1016a2b20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x101e2a258" loc="43:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x101e0e7b0" loc="36:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x101e0ddd0" loc="40:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x101e0e0d8" loc="35:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10191c1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x101e0ee58" loc="37:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMode" ref="0x101e0d738" loc="39:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x101e0d4c8" loc="39:../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInputDivider" ref="0x101e295d8" loc="45:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x1016a2b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="inputDivider" ref="0x101e29368" loc="45:../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x1016a2b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerEvent" loc="26:../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
      <documentation loc="22:../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x101e44da0" loc="28:../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <interfacedef-ref qname="Msp430TimerEvent"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Leds.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x101eec550" loc="61:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="58:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x101eecc88" loc="67:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="63:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x101eeb420" loc="72:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="69:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x101ee92a8" loc="83:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="79:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x101ee88b0" loc="100:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="96:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x101ee7070" loc="117:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="103:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x1016a2790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x101eebb38" loc="77:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="74:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x101ee7b70" loc="134:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="120:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1016a2790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x101ee7900" loc="134:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1016a2790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x101eeddf8" loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x101ee9a18" loc="89:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="86:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x101ee8178" loc="94:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="91:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Receive.nc">
      <documentation loc="34:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x102040760" loc="78:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Receive.nc">
        <documentation loc="58:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x101f45540"/>
              <typename><typedef-ref name="message_t" ref="0x101f44aa8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x101f45540"/>
                <typename><typedef-ref name="message_t" ref="0x101f44aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1016a2790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x10204ae10" loc="78:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x101f45540"/>
                <typename><typedef-ref name="message_t" ref="0x101f44aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x102040188" loc="78:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x102040498" loc="78:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1016a2790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="OppoRouting" loc="1:../../tos/chips/cc2420/interfaces/OppoRouting.nc">
      <function command="" provided="0" name="setLocalMetric" ref="0x102061598" loc="2:../../tos/chips/cc2420/interfaces/OppoRouting.nc">
        <interfacedef-ref qname="OppoRouting"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x1016a2b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="metric" ref="0x102061328" loc="2:../../tos/chips/cc2420/interfaces/OppoRouting.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x1016a2b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LplSend" loc="1:../../tos/chips/cc2420/interfaces/LplSend.nc">
      <function command="" provided="0" name="send" ref="0x102049740" loc="3:../../tos/chips/cc2420/interfaces/LplSend.nc">
        <interfacedef-ref qname="LplSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x101920780"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x101f45540"/>
                <typename><typedef-ref name="message_t" ref="0x101f44aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:15" alignment="I:1"><nx_struct-ref ref="0x101f3f4f8"/>
                <typename><typedef-ref name="rtx_setting_t" ref="0x101f3e020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x102049140" loc="3:../../tos/chips/cc2420/interfaces/LplSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x101f45540"/>
                <typename><typedef-ref name="message_t" ref="0x101f44aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ts" ref="0x1020494c0" loc="3:../../tos/chips/cc2420/interfaces/LplSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:15" alignment="I:1"><nx_struct-ref ref="0x101f3f4f8"/>
                <typename><typedef-ref name="rtx_setting_t" ref="0x101f3e020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x1020477d0" loc="5:../../tos/chips/cc2420/interfaces/LplSend.nc">
        <interfacedef-ref qname="LplSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x101f45540"/>
                <typename><typedef-ref name="message_t" ref="0x101f44aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:15" alignment="I:1"><nx_struct-ref ref="0x101f3f4f8"/>
                <typename><typedef-ref name="rtx_setting_t" ref="0x101f3e020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x101920780"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x102049e28" loc="5:../../tos/chips/cc2420/interfaces/LplSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x101f45540"/>
                <typename><typedef-ref name="message_t" ref="0x101f44aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ts" ref="0x102047218" loc="5:../../tos/chips/cc2420/interfaces/LplSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:15" alignment="I:1"><nx_struct-ref ref="0x101f3f4f8"/>
                <typename><typedef-ref name="rtx_setting_t" ref="0x101f3e020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x102047540" loc="5:../../tos/chips/cc2420/interfaces/LplSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x101920780"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LplTime" loc="1:../../tos/chips/cc2420/interfaces/LplTime.nc">
      <function event="" provided="0" name="timeRadio" ref="0x102064290" loc="2:../../tos/chips/cc2420/interfaces/LplTime.nc">
        <interfacedef-ref qname="LplTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:36" alignment="I:2"><struct-ref ref="0x101f39478"/>
                <typename><typedef-ref name="rtx_time_compensation_t" ref="0x101f5a278"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_rtx_time" ref="0x102064020" loc="2:../../tos/chips/cc2420/interfaces/LplTime.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:36" alignment="I:2"><struct-ref ref="0x101f39478"/>
                <typename><typedef-ref name="rtx_time_compensation_t" ref="0x101f5a278"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="timeCompensated" ref="0x102063040" loc="3:../../tos/chips/cc2420/interfaces/LplTime.nc">
        <interfacedef-ref qname="LplTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x1016a2b20"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:36" alignment="I:2"><struct-ref ref="0x101f39478"/>
                <typename><typedef-ref name="rtx_time_compensation_t" ref="0x101f5a278"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x102064968" loc="3:../../tos/chips/cc2420/interfaces/LplTime.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x1016a2b20"/></typename>
            </type-int>
          </variable>
          <variable name="p_rtx_time" ref="0x102064d98" loc="3:../../tos/chips/cc2420/interfaces/LplTime.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:36" alignment="I:2"><struct-ref ref="0x101f39478"/>
                <typename><typedef-ref name="rtx_time_compensation_t" ref="0x101f5a278"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LplReceive" loc="1:../../tos/chips/cc2420/interfaces/LplReceive.nc">
      <function command="" provided="0" name="txDetect" ref="0x102045258" loc="5:../../tos/chips/cc2420/interfaces/LplReceive.nc">
        <interfacedef-ref qname="LplReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxInit" ref="0x102043070" loc="9:../../tos/chips/cc2420/interfaces/LplReceive.nc">
        <interfacedef-ref qname="LplReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x101920780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receive" ref="0x1020423f0" loc="13:../../tos/chips/cc2420/interfaces/LplReceive.nc">
        <interfacedef-ref qname="LplReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x101f45540"/>
                <typename><typedef-ref name="message_t" ref="0x101f44aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1016a2790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x102043e18" loc="13:../../tos/chips/cc2420/interfaces/LplReceive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x101f45540"/>
                <typename><typedef-ref name="message_t" ref="0x101f44aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="size" ref="0x102042170" loc="13:../../tos/chips/cc2420/interfaces/LplReceive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1016a2790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rxOn" ref="0x102045940" loc="7:../../tos/chips/cc2420/interfaces/LplReceive.nc">
        <interfacedef-ref qname="LplReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x101920780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxBuffSet" ref="0x102043740" loc="11:../../tos/chips/cc2420/interfaces/LplReceive.nc">
        <interfacedef-ref qname="LplReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxEnable" ref="0x10204bb30" loc="3:../../tos/chips/cc2420/interfaces/LplReceive.nc">
        <interfacedef-ref qname="LplReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x102219ab0" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x1022181d8" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10191c1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x10221ad20" loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x102217020" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10191c1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x102219400" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10191c1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x102218890" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x10221a020" loc="40:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x10221a690" loc="41:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430GeneralIO" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
      <documentation loc="34:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x10221f020" loc="78:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="75:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to input.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x10221f708" loc="80:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10191c1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setResistor" ref="0x10224bcd0" loc="110:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="103:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin pullup / pull down resistor mode.</short>
          <long>&#10; Set pin pullup / pull down resistor mode.&#10; @param mode One of the MSP430_PORT_RESISTOR_* values&#10; @return EINVAL if invalid mode or pin does not support resistor configuration;&#10; FAIL if pin is not an input;&#10; SUCCESS if pin supports resistor configuration, is an input, and mode is valid&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x101920780"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1016a2790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x10224ba60" loc="110:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1016a2790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x102222938" loc="58:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Toggle pin status.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x10221e510" loc="87:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10191c1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getResistor" ref="0x10224a580" loc="117:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="112:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the pin pullup / pulldown resistor mode.</short>
          <long>&#10; Get the pin pullup / pulldown resistor mode.&#10;&#10; @return one of the MSP430_PORT_RESISTOR_* values&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x1016a2790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x10221fde0" loc="85:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="82:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to output.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x102220808" loc="73:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="68:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Read pin value.</short>
          <long>&#10; Read pin value.&#10;&#10; @return TRUE if pin is high, FALSE otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10191c1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectIOFunc" ref="0x10224ca90" loc="99:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="96:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for I/O functionality.</short>
          <long>&#10; Set pin for I/O functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRaw" ref="0x102220070" loc="66:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="60:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the port status that contains the pin.</short>
          <long>&#10; Get the port status that contains the pin.&#10;&#10; @return Status of the port that contains the given pin. The x'th&#10; pin on the port will be represented in the x'th bit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x1016a2790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x102225b20" loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to high.</short>
          <long>&#10; Set pin to high.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectModuleFunc" ref="0x10221ec28" loc="92:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="89:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for module specific functionality.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isIOFunc" ref="0x10224b258" loc="101:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10191c1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isModuleFunc" ref="0x10224c3a0" loc="94:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10191c1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x102222258" loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="50:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to low.</short>
          <long>&#10; Set pin to low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x101d5c1d8" loc="76:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x101c1e458" loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x101919020" loc="57:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x101924020" loc="72:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x101919718" loc="65:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10191c1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x10192cba0" loc="67:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x101920780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x10192b3e0" loc="75:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/StdControl.nc">
      <documentation loc="72:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x10248dc98" loc="95:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/StdControl.nc">
        <documentation loc="88:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x101920780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x10248a490" loc="105:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/StdControl.nc">
        <documentation loc="97:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x101920780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMSend.nc">
      <documentation loc="34:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x10246db50" loc="80:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="60:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x101920780"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x101f00b18"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x101f45540"/>
                <typename><typedef-ref name="message_t" ref="0x101f44aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1016a2790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x10246d250" loc="80:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x101f00b18"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x10246d5b0" loc="80:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x101f45540"/>
                <typename><typedef-ref name="message_t" ref="0x101f44aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x10246d8c0" loc="80:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1016a2790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x10249f2d8" loc="135:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="126:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x101f45540"/>
                <typename><typedef-ref name="message_t" ref="0x101f44aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1016a2790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x1024a1be8" loc="135:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x101f45540"/>
                <typename><typedef-ref name="message_t" ref="0x101f44aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x10249f020" loc="135:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1016a2790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x1024a13e0" loc="123:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="113:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x1016a2790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x10246a108" loc="96:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="82:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x101920780"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x101f45540"/>
                <typename><typedef-ref name="message_t" ref="0x101f44aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x10246be50" loc="96:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x101f45540"/>
                <typename><typedef-ref name="message_t" ref="0x101f44aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x1024695c8" loc="110:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="98:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x101f45540"/>
                <typename><typedef-ref name="message_t" ref="0x101f44aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x101920780"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x102469020" loc="110:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x101f45540"/>
                <typename><typedef-ref name="message_t" ref="0x101f44aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x102469348" loc="110:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x101920780"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x10248e340" loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x10248e340"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x10248ebd0" loc="61:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x1016a3020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Packet.nc">
      <documentation loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x10248ccb8" loc="65:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="58:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x101f45540"/>
                <typename><typedef-ref name="message_t" ref="0x101f44aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x10248ca48" loc="65:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x101f45540"/>
                <typename><typedef-ref name="message_t" ref="0x101f44aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x102487c90" loc="78:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="67:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x1016a2790"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x101f45540"/>
                <typename><typedef-ref name="message_t" ref="0x101f44aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x102487a20" loc="78:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x101f45540"/>
                <typename><typedef-ref name="message_t" ref="0x101f44aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x1024bee78" loc="126:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="109:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x101f45540"/>
                <typename><typedef-ref name="message_t" ref="0x101f44aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1016a2790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x1024be8b0" loc="126:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x101f45540"/>
                <typename><typedef-ref name="message_t" ref="0x101f44aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x1024bebc0" loc="126:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1016a2790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x1024be020" loc="106:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="96:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x1016a2790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x1024860b8" loc="94:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="80:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x101f45540"/>
                <typename><typedef-ref name="message_t" ref="0x101f44aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1016a2790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x102485ab0" loc="94:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x101f45540"/>
                <typename><typedef-ref name="message_t" ref="0x101f44aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x102485dc0" loc="94:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1016a2790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LplxPacket" loc="1:../../tos/chips/cc2420/interfaces/LplxPacket.nc">
      <function command="" provided="0" name="setOppoRouting" ref="0x1024b9a28" loc="3:../../tos/chips/cc2420/interfaces/LplxPacket.nc">
        <interfacedef-ref qname="LplxPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x101f45540"/>
                <typename><typedef-ref name="message_t" ref="0x101f44aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x1016a2b20"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x1016a2b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m" ref="0x1024b9100" loc="3:../../tos/chips/cc2420/interfaces/LplxPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x101f45540"/>
                <typename><typedef-ref name="message_t" ref="0x101f44aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="metric" ref="0x1024b9440" loc="3:../../tos/chips/cc2420/interfaces/LplxPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x1016a2b20"/></typename>
            </type-int>
          </variable>
          <variable name="progress" ref="0x1024b9798" loc="3:../../tos/chips/cc2420/interfaces/LplxPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x1016a2b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearSettings" ref="0x1024b6950" loc="6:../../tos/chips/cc2420/interfaces/LplxPacket.nc">
        <interfacedef-ref qname="LplxPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x101f45540"/>
                <typename><typedef-ref name="message_t" ref="0x101f44aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m" ref="0x1024b66e0" loc="6:../../tos/chips/cc2420/interfaces/LplxPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x101f45540"/>
                <typename><typedef-ref name="message_t" ref="0x101f44aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setPacketBulk" ref="0x1024b76a0" loc="4:../../tos/chips/cc2420/interfaces/LplxPacket.nc">
        <interfacedef-ref qname="LplxPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x101f45540"/>
                <typename><typedef-ref name="message_t" ref="0x101f44aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1016a2790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m" ref="0x1024b7100" loc="4:../../tos/chips/cc2420/interfaces/LplxPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x101f45540"/>
                <typename><typedef-ref name="message_t" ref="0x101f44aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="size" ref="0x1024b7420" loc="4:../../tos/chips/cc2420/interfaces/LplxPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1016a2790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPacketBulk" ref="0x1024b6030" loc="5:../../tos/chips/cc2420/interfaces/LplxPacket.nc">
        <interfacedef-ref qname="LplxPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x1016a2790"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x101f45540"/>
                <typename><typedef-ref name="message_t" ref="0x101f44aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m" ref="0x1024b7d98" loc="5:../../tos/chips/cc2420/interfaces/LplxPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x101f45540"/>
                <typename><typedef-ref name="message_t" ref="0x101f44aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setPacketCI" ref="0x1024ba9f0" loc="2:../../tos/chips/cc2420/interfaces/LplxPacket.nc">
        <interfacedef-ref qname="LplxPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x101f45540"/>
                <typename><typedef-ref name="message_t" ref="0x101f44aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1016a2790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m" ref="0x1024ba460" loc="2:../../tos/chips/cc2420/interfaces/LplxPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x101f45540"/>
                <typename><typedef-ref name="message_t" ref="0x101f44aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="hop" ref="0x1024ba770" loc="2:../../tos/chips/cc2420/interfaces/LplxPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1016a2790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
      <documentation loc="36:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x10249e4c8" loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x10249e4c8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x102495020" loc="136:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="132:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x1016a3020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x10249a8f8" loc="83:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="80:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x1024985b8" loc="114:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="100:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x1016a3020"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x1016a3020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x102498020" loc="114:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x1016a3020"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x102498338" loc="114:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x1016a3020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x102499870" loc="98:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="94:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10191c1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x102494020" loc="151:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="146:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x1016a3020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x102495740" loc="144:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="138:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x1016a3020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x1024990d8" loc="92:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="86:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10191c1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x10249b020" loc="64:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x1016a3020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x10249ed28" loc="64:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x1016a3020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x1024965b8" loc="129:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="116:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x1016a3020"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x1016a3020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x102496020" loc="129:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x1016a3020"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x102496338" loc="129:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x1016a3020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x10249ba60" loc="73:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="66:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x1016a3020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x10249b7f0" loc="73:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x1016a3020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x10249a258" loc="78:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="75:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x1024b46d8" loc="59:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x101920780"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x101f45540"/>
                <typename><typedef-ref name="message_t" ref="0x101f44aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x1024b4468" loc="59:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x101f45540"/>
                <typename><typedef-ref name="message_t" ref="0x101f44aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x1024b2818" loc="71:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x101920780"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x101f45540"/>
                <typename><typedef-ref name="message_t" ref="0x101f44aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x1024b25a8" loc="71:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x101f45540"/>
                <typename><typedef-ref name="message_t" ref="0x101f44aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x1024b08c8" loc="85:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10191c1d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x101f45540"/>
                <typename><typedef-ref name="message_t" ref="0x101f44aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x1024b0658" loc="85:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x101f45540"/>
                <typename><typedef-ref name="message_t" ref="0x101f44aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x1024c53b0" loc="177:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x101f00760"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x101f45540"/>
                <typename><typedef-ref name="message_t" ref="0x101f44aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x1024c5140" loc="177:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x101f45540"/>
                <typename><typedef-ref name="message_t" ref="0x101f44aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x1024ce2d0" loc="88:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x101f00b18"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x101f45540"/>
                <typename><typedef-ref name="message_t" ref="0x101f44aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x1024ce060" loc="88:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x101f45540"/>
                <typename><typedef-ref name="message_t" ref="0x101f44aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x1024d1840" loc="68:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x101f00b18"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x1024cf2d0" loc="78:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x101f00b18"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x101f45540"/>
                <typename><typedef-ref name="message_t" ref="0x101f44aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x1024cf060" loc="78:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x101f45540"/>
                <typename><typedef-ref name="message_t" ref="0x101f44aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x1024cba60" loc="121:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x101f45540"/>
                <typename><typedef-ref name="message_t" ref="0x101f44aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x101f00b18"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x1024cb4a8" loc="121:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x101f45540"/>
                <typename><typedef-ref name="message_t" ref="0x101f44aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x1024cb7e0" loc="121:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x101f00b18"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x1024cd618" loc="103:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x101f45540"/>
                <typename><typedef-ref name="message_t" ref="0x101f44aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x101f00b18"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x1024cd060" loc="103:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x101f45540"/>
                <typename><typedef-ref name="message_t" ref="0x101f44aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x1024cd398" loc="103:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x101f00b18"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x1024c8020" loc="147:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x101f003b0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x101f45540"/>
                <typename><typedef-ref name="message_t" ref="0x101f44aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x1024cacf8" loc="147:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x101f45540"/>
                <typename><typedef-ref name="message_t" ref="0x101f44aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x1024c62a0" loc="162:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x101f45540"/>
                <typename><typedef-ref name="message_t" ref="0x101f44aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x101f003b0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x1024c8ce8" loc="162:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x101f45540"/>
                <typename><typedef-ref name="message_t" ref="0x101f44aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x1024c6020" loc="162:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x101f003b0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x1024c9c38" loc="136:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10191c1d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x101f45540"/>
                <typename><typedef-ref name="message_t" ref="0x101f44aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x1024c99c8" loc="136:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x101f45540"/>
                <typename><typedef-ref name="message_t" ref="0x101f44aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x1024c37b8" loc="187:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x101f45540"/>
                <typename><typedef-ref name="message_t" ref="0x101f44aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x101f00760"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x1024c3208" loc="187:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x101f45540"/>
                <typename><typedef-ref name="message_t" ref="0x101f44aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x1024c3538" loc="187:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x101f00760"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x1024c2560" loc="195:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x101f00760"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Send.nc">
      <documentation loc="34:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x1024ec5b0" loc="75:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="57:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x101920780"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x101f45540"/>
                <typename><typedef-ref name="message_t" ref="0x101f44aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1016a2790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x1024ec020" loc="75:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x101f45540"/>
                <typename><typedef-ref name="message_t" ref="0x101f44aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x1024ec330" loc="75:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1016a2790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x1024eb878" loc="125:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="115:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x101f45540"/>
                <typename><typedef-ref name="message_t" ref="0x101f44aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1016a2790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x1024eb2b0" loc="125:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x101f45540"/>
                <typename><typedef-ref name="message_t" ref="0x101f44aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x1024eb5c0" loc="125:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1016a2790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x1024e7a58" loc="112:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="102:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x1016a2790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x1024ea828" loc="89:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="77:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x101920780"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x101f45540"/>
                <typename><typedef-ref name="message_t" ref="0x101f44aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x1024ea5b8" loc="89:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x101f45540"/>
                <typename><typedef-ref name="message_t" ref="0x101f44aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x1024e8c10" loc="100:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="91:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x101f45540"/>
                <typename><typedef-ref name="message_t" ref="0x101f44aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x101920780"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x1024e8668" loc="100:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x101f45540"/>
                <typename><typedef-ref name="message_t" ref="0x101f44aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x1024e8990" loc="100:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x101920780"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioBackoff" loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
      <documentation loc="32:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <short>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.</short>
        <long>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.  &#10; &#10; This is because of fan-out issues with multiple components wanting to&#10; affect backoffs for whatever they're interested in:&#10; If you signal out an *event* to request an initial backoff and&#10; several components happen to be listening, then those components&#10; would be required to return a backoff value.  We don't want that&#10; behavior.&#10; With this strategy, components can listen for the requests and then&#10; decide if they want to affect the behavior.  If the component wants to&#10; affect the behavior, it calls back using the setXYZBackoff(..) command.&#10; If several components call back, then the last component to get its &#10; word in has the final say. &#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="requestCca" ref="0x102556d88" loc="95:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="90:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on whether or not to use CCA on the outbound packet.</short>
          <long>&#10; Request for input on whether or not to use CCA on the outbound packet.&#10; Replies should come in the form of setCca(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x101f45540"/>
                <typename><typedef-ref name="message_t" ref="0x101f44aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x102556b18" loc="95:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x101f45540"/>
                <typename><typedef-ref name="message_t" ref="0x101f44aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestInitialBackoff" ref="0x1025570a8" loc="81:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="76:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; </short>
          <long>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x101f45540"/>
                <typename><typedef-ref name="message_t" ref="0x101f44aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x102559dd0" loc="81:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x101f45540"/>
                <typename><typedef-ref name="message_t" ref="0x101f44aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCongestionBackoff" ref="0x10255a750" loc="66:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="62:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestCongestionBackoff event&#10; </short>
          <long>&#10; Must be called within a requestCongestionBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x1016a2b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x10255a4e0" loc="66:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x1016a2b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInitialBackoff" ref="0x10255bc08" loc="60:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestInitialBackoff event&#10; </short>
          <long>&#10; Must be called within a requestInitialBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x1016a2b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x10255b998" loc="60:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x1016a2b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCca" ref="0x102559290" loc="73:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="68:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Enable CCA for the outbound packet.</short>
          <long>&#10; Enable CCA for the outbound packet.  Must be called within a requestCca&#10; event&#10; @param ccaOn TRUE to enable CCA, which is the default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x10191c1d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ccaOn" ref="0x102559020" loc="73:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x10191c1d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestCongestionBackoff" ref="0x102556020" loc="88:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="83:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; </short>
          <long>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x101f45540"/>
                <typename><typedef-ref name="message_t" ref="0x101f44aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x102557c28" loc="88:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x101f45540"/>
                <typename><typedef-ref name="message_t" ref="0x101f44aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/SendNotifier.nc">
      <documentation loc="32:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x1025526e8" loc="59:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/SendNotifier.nc">
        <documentation loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x101f00b18"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x101f45540"/>
                <typename><typedef-ref name="message_t" ref="0x101f44aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x102552108" loc="59:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x101f00b18"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x102552468" loc="59:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x101f45540"/>
                <typename><typedef-ref name="message_t" ref="0x101f44aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BulkSend" loc="1:../../tos/chips/cc2420/interfaces/BulkSend.nc">
      <function command="" provided="0" name="send" ref="0x1025839f8" loc="2:../../tos/chips/cc2420/interfaces/BulkSend.nc">
        <interfacedef-ref qname="BulkSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x101920780"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x101f45540"/>
                <typename><typedef-ref name="message_t" ref="0x101f44aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1016a2790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x102583468" loc="2:../../tos/chips/cc2420/interfaces/BulkSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x101f45540"/>
                <typename><typedef-ref name="message_t" ref="0x101f44aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x102583778" loc="2:../../tos/chips/cc2420/interfaces/BulkSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1016a2790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x102581370" loc="3:../../tos/chips/cc2420/interfaces/BulkSend.nc">
        <interfacedef-ref qname="BulkSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x101920780"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x101f45540"/>
                <typename><typedef-ref name="message_t" ref="0x101f44aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x102581100" loc="3:../../tos/chips/cc2420/interfaces/BulkSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x101f45540"/>
                <typename><typedef-ref name="message_t" ref="0x101f44aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x102580020" loc="4:../../tos/chips/cc2420/interfaces/BulkSend.nc">
        <interfacedef-ref qname="BulkSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x101f45540"/>
                <typename><typedef-ref name="message_t" ref="0x101f44aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x101920780"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x102581a00" loc="4:../../tos/chips/cc2420/interfaces/BulkSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x101f45540"/>
                <typename><typedef-ref name="message_t" ref="0x101f44aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="err" ref="0x102581d10" loc="4:../../tos/chips/cc2420/interfaces/BulkSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x101920780"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x1025be178" loc="50:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x101f00b18"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x1025bc020" loc="60:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x1025be8d8" loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x101f00760"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x1025bf920" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x101f00760"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x101f00b18"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x1025bf368" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x101f00760"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x1025bf6a0" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x101f00b18"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioTimerUpdate" loc="1:../../tos/chips/cc2420/x-timer/RadioTimerUpdate.nc">
      <function event="" provided="0" name="startRadioTime" ref="0x1025e6ce8" loc="2:../../tos/chips/cc2420/x-timer/RadioTimerUpdate.nc">
        <interfacedef-ref qname="RadioTimerUpdate"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="counterUpdate" ref="0x1025e10b8" loc="4:../../tos/chips/cc2420/x-timer/RadioTimerUpdate.nc">
        <interfacedef-ref qname="RadioTimerUpdate"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x1016a3020"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x1016a2b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="count" ref="0x1025e3a78" loc="4:../../tos/chips/cc2420/x-timer/RadioTimerUpdate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x1016a3020"/></typename>
            </type-int>
          </variable>
          <variable name="factor" ref="0x1025e3db8" loc="4:../../tos/chips/cc2420/x-timer/RadioTimerUpdate.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x1016a2b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="triggerUpdate" ref="0x1025e33e0" loc="3:../../tos/chips/cc2420/x-timer/RadioTimerUpdate.nc">
        <interfacedef-ref qname="RadioTimerUpdate"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Random.nc">
      <documentation loc="34:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x1025d11d8" loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Random.nc">
        <documentation loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x1016a2b20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x1025d49e0" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Random.nc">
        <documentation loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x1016a3020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x102663020" loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x102663020"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x102663250" loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x102663250"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x102660bd8" loc="109:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x102663250"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x102662c88" loc="78:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x1026602a0" loc="103:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x102663250"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x102663250"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x102661bf0" loc="103:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x102663250"/></type-var>
          </variable>
          <variable name="dt" ref="0x102660020" loc="103:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x102663250"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x102661440" loc="88:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10191c1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x10265e3a0" loc="116:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x102663250"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x102663d10" loc="66:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x102663250"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x102663aa0" loc="66:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x102663250"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x102662538" loc="73:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Counter.nc">
      <documentation loc="36:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x1026c3a50" loc="57:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x1026c3a50"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x1026c3c80" loc="57:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x1026c3c80"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x1026c0548" loc="64:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="59:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x1026c3c80"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x1026be590" loc="76:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="73:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x1026c0d60" loc="71:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="66:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10191c1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x1026bec80" loc="82:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="78:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ParameterInit.nc">
      <documentation loc="34:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x1027f2348" loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x1027f2348"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x1027f2df0" loc="64:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ParameterInit.nc">
        <documentation loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x101920780"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x1027f2348"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x1027f2b80" loc="64:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x1027f2348"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
