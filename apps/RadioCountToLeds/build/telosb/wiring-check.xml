<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="53:RadioCountToLedsAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x10d67cbc8"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x10cf6f220"/></to>
    </wire>
    <wire loc="72:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x10cf6f220"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x10cf719b0"/></to>
    </wire>
    <wire loc="54:RadioCountToLedsAppC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x10d67b2b0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x10da6de38"/></to>
    </wire>
    <wire loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x10da6de38"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x10d77f7a0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x10d0d43b0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:RadioCountToLedsAppC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x10d6a9178"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x10da74c20"/></to>
    </wire>
    <wire loc="64:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x10da74c20"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x10de8e020"/></to>
    </wire>
    <wire loc="56:RadioCountToLedsAppC.nc">
      <from><interface-ref name="AMControl" scoped="" ref="0x10d696968"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x10d746918"/></to>
    </wire>
    <wire loc="20:../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x10d746918"/></from>
      <to><interface-ref name="RadioControl" scoped="" ref="0x10d779ca8"/></to>
    </wire>
    <wire loc="57:RadioCountToLedsAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x10d67d678"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x10d420ce0"/></to>
    </wire>
    <wire loc="51:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x10d420ce0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x10d4195e8"/></to>
    </wire>
    <wire loc="58:RadioCountToLedsAppC.nc">
      <from><interface-ref name="MilliTimer" scoped="" ref="0x10d6a05a0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x10da64ce0"/></to>
    </wire>
    <wire loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x10da64ce0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x10d84ca18"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="59:RadioCountToLedsAppC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x10d698020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x10da73888"/></to>
    </wire>
    <wire loc="65:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x10da73888"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x10de8ebd8"/></to>
    </wire>
    <wire loc="60:RadioCountToLedsAppC.nc">
      <from><interface-ref name="LplxPacket" scoped="" ref="0x10d6c2be8"/></from>
      <to><interface-ref name="LplxPacket" scoped="" ref="0x10d77bc00"/></to>
    </wire>
    <wire loc="27:../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="LplxPacket" scoped="" ref="0x10d77bc00"/></from>
      <to><interface-ref name="LplxPacket" scoped="" ref="0x10d776458"/></to>
    </wire>
    <wire loc="61:RadioCountToLedsAppC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x10d6bb320"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x10d77a968"/></to>
    </wire>
    <wire loc="28:../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x10d77a968"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x10d7734d0"/></to>
    </wire>
    <wire loc="64:RadioCountToLedsAppC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x10d69c108"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x10d83d5e0"/></to>
    </wire>
    <wire loc="48:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x10d83d5e0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x10d9e47f8"/></to>
    </wire>
    <wire loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x10cf6e680"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x10da0da40"/></to>
    </wire>
    <wire loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x10cf6e680"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x10d845430"/></to>
    </wire>
    <wire loc="23:../../tos/chips/cc2420/x-lpl/CC2420xLplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x10cf6e680"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x10d7f4848"/></to>
    </wire>
    <wire loc="24:../../tos/chips/cc2420/x-lpl/CC2420xLplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x10cf6e680"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x10d219a20"/></to>
    </wire>
    <wire loc="67:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x10d68b020"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x10caf8390"/></to>
    </wire>
    <wire loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x10caf8390"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x10cf350c0"/></to>
    </wire>
    <wire loc="68:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x10d68b9f8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x10cf725b8"/></to>
    </wire>
    <wire loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x10cf725b8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x10cf6c740"/></to>
    </wire>
    <wire loc="71:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x10d689140"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x10cf6e680"/></to>
    </wire>
    <wire loc="49:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x10cf6ce10"/></from>
      <to><interface-ref name="MoteClockInit" scoped="" ref="0x10cf880e8"/></to>
    </wire>
    <wire loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosb/MoteClockC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x10cf880e8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x10cfa2020"/></to>
    </wire>
    <wire loc="50:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x10cf694f8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x10cf6b610"/></to>
    </wire>
    <wire loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x10cf69b98"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x10d422460"/></to>
    </wire>
    <wire loc="35:../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x10cfa2020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x10cfaa530"/></to>
    </wire>
    <wire loc="36:../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Msp430ClockInit" scoped="" ref="0x10cf9b2b8"/></from>
      <to><interface-ref name="Msp430ClockInit" scoped="" ref="0x10cfaaba0"/></to>
    </wire>
    <wire loc="37:../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x10cd26020"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x10cfa9e08"/></to>
    </wire>
    <wire loc="82:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA2" scoped="" ref="0x10cff5710"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x10d094c80"/></to>
    </wire>
    <wire loc="77:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA1" scoped="" ref="0x10d00c0c0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x10d099c58"/></to>
    </wire>
    <wire loc="99:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB0" scoped="" ref="0x10d004710"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x10d0afc80"/></to>
    </wire>
    <wire loc="76:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0x10cff3868"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x10d099020"/></to>
    </wire>
    <wire loc="68:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0x10cff6da8"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x10d03fc80"/></to>
    </wire>
    <wire loc="84:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA2" scoped="" ref="0x10d00b020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x10d092c58"/></to>
    </wire>
    <wire loc="62:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0x10cffd930"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x10d04d798"/></to>
    </wire>
    <wire loc="83:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA2" scoped="" ref="0x10cff26e0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x10d092020"/></to>
    </wire>
    <wire loc="75:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0x10cffb218"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x10d09cc80"/></to>
    </wire>
    <wire loc="70:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA0" scoped="" ref="0x10d0061b0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x10d0a1c58"/></to>
    </wire>
    <wire loc="69:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0x10d00ea88"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x10d0a1020"/></to>
    </wire>
    <wire loc="89:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerB" scoped="" ref="0x10d005020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x10d0451e8"/></to>
    </wire>
    <wire loc="101:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB0" scoped="" ref="0x10d0029f0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x10d0adc58"/></to>
    </wire>
    <wire loc="100:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB0" scoped="" ref="0x10d003b78"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x10d0ad020"/></to>
    </wire>
    <wire loc="63:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x10d04b658"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x10d04b020"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x10d04bc70"/></from>
      <to><interface-ref name="VectorTimerA0" scoped="" ref="0x10d0a54f8"/></to>
    </wire>
    <wire loc="65:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x10d0492e8"/></from>
      <to><interface-ref name="VectorTimerA1" scoped="" ref="0x10d0a5c40"/></to>
    </wire>
    <wire loc="71:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x10d0a0a90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x10d04d798"/></to>
    </wire>
    <wire loc="72:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x10d09e100"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x10d04b020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x10d098a90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x10d04d798"/></to>
    </wire>
    <wire loc="79:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x10d096100"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x10d04b020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x10d0b3a90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x10d04d798"/></to>
    </wire>
    <wire loc="86:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x10d0b1100"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x10d04b020"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x10d043020"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x10d0448a0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x10d043638"/></from>
      <to><interface-ref name="VectorTimerB0" scoped="" ref="0x10d0a4418"/></to>
    </wire>
    <wire loc="95:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x10d043c50"/></from>
      <to><interface-ref name="VectorTimerB1" scoped="" ref="0x10d2337c8"/></to>
    </wire>
    <wire loc="102:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x10d0aba90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x10d0451e8"/></to>
    </wire>
    <wire loc="103:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x10d0a9100"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x10d0448a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="108:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x10d0a3080"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x10d420ce0"/></to>
    </wire>
    <wire loc="38:../../tos/chips/cc2420/x-lpl/CC2420xLplC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x10d233dd0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x10d420ce0"/></to>
    </wire>
    <wire loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x10d422460"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x10d419020"/></to>
    </wire>
    <wire loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x10d4117c8"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x10d425020"/></to>
    </wire>
    <wire loc="58:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x10d425020"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x10d654c30"/></to>
    </wire>
    <wire loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x10d417958"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x10d4241b0"/></to>
    </wire>
    <wire loc="61:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x10d4241b0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x10d63f448"/></to>
    </wire>
    <wire loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x10d416ae0"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x10d423378"/></to>
    </wire>
    <wire loc="64:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x10d423378"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x10d63bcd0"/></to>
    </wire>
    <wire loc="59:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x10d653da0"/></from>
      <to><interface-ref name="Port54" scoped="" ref="0x10d48f568"/></to>
    </wire>
    <wire loc="486:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port54" scoped="" ref="0x10d48f568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10d5adca0"/></to>
    </wire>
    <wire loc="62:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x10d63e5f8"/></from>
      <to><interface-ref name="Port55" scoped="" ref="0x10d48d568"/></to>
    </wire>
    <wire loc="487:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port55" scoped="" ref="0x10d48d568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10d5a83d8"/></to>
    </wire>
    <wire loc="65:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x10d63ae20"/></from>
      <to><interface-ref name="Port56" scoped="" ref="0x10d48b568"/></to>
    </wire>
    <wire loc="488:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port56" scoped="" ref="0x10d48b568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10d5a4ca0"/></to>
    </wire>
    <wire loc="442:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x10d43e978"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10d504ca0"/></to>
    </wire>
    <wire loc="455:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x10d459568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10d53eca0"/></to>
    </wire>
    <wire loc="531:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SDA" scoped="" ref="0x10d4a57d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10d5633d8"/></to>
    </wire>
    <wire loc="551:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC6" scoped="" ref="0x10d4e4558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10d5ebca0"/></to>
    </wire>
    <wire loc="532:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI0" scoped="" ref="0x10d4a3660"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10d55fca0"/></to>
    </wire>
    <wire loc="460:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port30" scoped="" ref="0x10d455568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10d535ca0"/></to>
    </wire>
    <wire loc="473:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port42" scoped="" ref="0x10d472568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10d56fca0"/></to>
    </wire>
    <wire loc="497:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port64" scoped="" ref="0x10d4b1568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10d5beca0"/></to>
    </wire>
    <wire loc="535:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD0" scoped="" ref="0x10d49d560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10d556ca0"/></to>
    </wire>
    <wire loc="545:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC0" scoped="" ref="0x10d4be558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10d5d0ca0"/></to>
    </wire>
    <wire loc="557:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSIN" scoped="" ref="0x10d4dc560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10d5e53d8"/></to>
    </wire>
    <wire loc="445:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x10d468568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10d52a3d8"/></to>
    </wire>
    <wire loc="536:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD0" scoped="" ref="0x10d49b560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10d5513d8"/></to>
    </wire>
    <wire loc="450:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x10d464568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10d5203d8"/></to>
    </wire>
    <wire loc="463:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port33" scoped="" ref="0x10d480568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10d55a3d8"/></to>
    </wire>
    <wire loc="476:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port45" scoped="" ref="0x10d46c568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10d5973d8"/></to>
    </wire>
    <wire loc="489:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port57" scoped="" ref="0x10d489568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10d59f3d8"/></to>
    </wire>
    <wire loc="500:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port67" scoped="" ref="0x10d4ab568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10d5e53d8"/></to>
    </wire>
    <wire loc="440:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x10d442c88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10d50dca0"/></to>
    </wire>
    <wire loc="453:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x10d45d568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10d547d08"/></to>
    </wire>
    <wire loc="466:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port36" scoped="" ref="0x10d47a568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10d582ca0"/></to>
    </wire>
    <wire loc="530:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO0" scoped="" ref="0x10d4a7970"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10d5633d8"/></to>
    </wire>
    <wire loc="548:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC3" scoped="" ref="0x10d4b8558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10d5c23d8"/></to>
    </wire>
    <wire loc="555:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC1" scoped="" ref="0x10d4de558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10d5e53d8"/></to>
    </wire>
    <wire loc="541:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK1" scoped="" ref="0x10d4c4560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10d5b13d8"/></to>
    </wire>
    <wire loc="471:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port40" scoped="" ref="0x10d476568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10d578dd8"/></to>
    </wire>
    <wire loc="484:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port52" scoped="" ref="0x10d493568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10d5b6ca0"/></to>
    </wire>
    <wire loc="495:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port62" scoped="" ref="0x10d483568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10d5c7ca0"/></to>
    </wire>
    <wire loc="549:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC4" scoped="" ref="0x10d4b6558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10d5beca0"/></to>
    </wire>
    <wire loc="538:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE1" scoped="" ref="0x10d4cb558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10d589ca0"/></to>
    </wire>
    <wire loc="443:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x10d43c7f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10d5333d8"/></to>
    </wire>
    <wire loc="456:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x10d457568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10d5393d8"/></to>
    </wire>
    <wire loc="493:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port60" scoped="" ref="0x10d487568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10d5d0ca0"/></to>
    </wire>
    <wire loc="461:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port31" scoped="" ref="0x10d453568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10d5633d8"/></to>
    </wire>
    <wire loc="474:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port43" scoped="" ref="0x10d470568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10d56a3d8"/></to>
    </wire>
    <wire loc="498:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port65" scoped="" ref="0x10d4af568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10d5b93d8"/></to>
    </wire>
    <wire loc="540:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI1" scoped="" ref="0x10d4c6560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10d5b6ca0"/></to>
    </wire>
    <wire loc="438:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x10d44e020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10d4d5e18"/></to>
    </wire>
    <wire loc="451:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x10d462568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10d51cca0"/></to>
    </wire>
    <wire loc="464:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port34" scoped="" ref="0x10d47e568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10d556ca0"/></to>
    </wire>
    <wire loc="477:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port46" scoped="" ref="0x10d46a568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10d593ca0"/></to>
    </wire>
    <wire loc="542:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD1" scoped="" ref="0x10d4c2560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10d582ca0"/></to>
    </wire>
    <wire loc="546:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC1" scoped="" ref="0x10d4bc558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10d5cb3d8"/></to>
    </wire>
    <wire loc="552:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC7" scoped="" ref="0x10d4e2558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10d5e53d8"/></to>
    </wire>
    <wire loc="482:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port50" scoped="" ref="0x10d498568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10d589ca0"/></to>
    </wire>
    <wire loc="543:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD1" scoped="" ref="0x10d4c0560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10d57d3d8"/></to>
    </wire>
    <wire loc="441:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x10d440b00"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10d5083d8"/></to>
    </wire>
    <wire loc="454:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x10d45b568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10d5423d8"/></to>
    </wire>
    <wire loc="467:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port37" scoped="" ref="0x10d478568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10d57d3d8"/></to>
    </wire>
    <wire loc="539:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO1" scoped="" ref="0x10d4c8560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10d5843d8"/></to>
    </wire>
    <wire loc="550:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC5" scoped="" ref="0x10d4b4558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10d5b93d8"/></to>
    </wire>
    <wire loc="472:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port41" scoped="" ref="0x10d474668"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10d573478"/></to>
    </wire>
    <wire loc="485:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port53" scoped="" ref="0x10d491568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10d5b13d8"/></to>
    </wire>
    <wire loc="496:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port63" scoped="" ref="0x10d4b3568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10d5c23d8"/></to>
    </wire>
    <wire loc="444:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x10d43a668"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10d52fca0"/></to>
    </wire>
    <wire loc="494:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port61" scoped="" ref="0x10d485568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10d5cb3d8"/></to>
    </wire>
    <wire loc="449:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x10d466568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10d526ca0"/></to>
    </wire>
    <wire loc="462:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port32" scoped="" ref="0x10d451568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10d55fca0"/></to>
    </wire>
    <wire loc="475:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port44" scoped="" ref="0x10d46e568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10d59cca0"/></to>
    </wire>
    <wire loc="499:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port66" scoped="" ref="0x10d4ad568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10d5ebca0"/></to>
    </wire>
    <wire loc="439:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x10d44de10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10d511478"/></to>
    </wire>
    <wire loc="452:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x10d45f568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10d54b3d8"/></to>
    </wire>
    <wire loc="465:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port35" scoped="" ref="0x10d47c568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10d5513d8"/></to>
    </wire>
    <wire loc="478:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port47" scoped="" ref="0x10d49a568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10d58e3d8"/></to>
    </wire>
    <wire loc="534:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SCL" scoped="" ref="0x10d49f548"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10d55a3d8"/></to>
    </wire>
    <wire loc="547:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC2" scoped="" ref="0x10d4ba558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10d5c7ca0"/></to>
    </wire>
    <wire loc="533:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK0" scoped="" ref="0x10d4a1560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10d55a3d8"/></to>
    </wire>
    <wire loc="483:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port51" scoped="" ref="0x10d496568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10d5843d8"/></to>
    </wire>
    <wire loc="554:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC0" scoped="" ref="0x10d4e0558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10d5ebca0"/></to>
    </wire>
    <wire loc="558:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSOUT" scoped="" ref="0x10d4da568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10d59f3d8"/></to>
    </wire>
    <wire loc="529:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE0" scoped="" ref="0x10d4a95b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10d535ca0"/></to>
    </wire>
    <wire loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x10caffca0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x10cf33020"/></to>
    </wire>
    <wire loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x10cf304e0"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x10cb733c8"/></to>
    </wire>
    <wire loc="63:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x10de8e020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x10de82710"/></to>
    </wire>
    <wire loc="64:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x10de8ebd8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x10d77d920"/></to>
    </wire>
    <wire loc="66:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x10da72578"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x10de8d888"/></to>
    </wire>
    <wire loc="65:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x10de8d888"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x10d77c5d0"/></to>
    </wire>
    <wire loc="67:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x10da71bd8"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x10de8b020"/></to>
    </wire>
    <wire loc="66:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x10de8b020"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x10d77a968"/></to>
    </wire>
    <wire loc="25:../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x10d77d920"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x10d774740"/></to>
    </wire>
    <wire loc="26:../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x10d77c5d0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x10d7750c0"/></to>
    </wire>
    <wire loc="60:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x10de81450"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x10d71c020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x10de7f060"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x10d77c5d0"/></to>
    </wire>
    <wire loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x10d71c020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x10d74c2c8"/></to>
    </wire>
    <wire loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x10d74b060"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x10d7435b0"/></to>
    </wire>
    <wire loc="22:../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x10d7435b0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x10d7728e8"/></to>
    </wire>
    <wire loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x10d74bc38"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x10d77c5d0"/></to>
    </wire>
    <wire loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x10d749268"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x10d77d920"/></to>
    </wire>
    <wire loc="169:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x10d748020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x10caffca0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x10d7487c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x10caffca0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="41:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LplxPacket" scoped="" ref="0x10d776458"/></from>
      <to><interface-ref name="LplxPacket" scoped="" ref="0x10d9faa08"/></to>
    </wire>
    <wire loc="36:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x10d7728e8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x10d764d10"/></to>
    </wire>
    <wire loc="24:../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x10d77d348"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x10d76f628"/></to>
    </wire>
    <wire loc="39:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x10d76f628"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x10d79c9b8"/></to>
    </wire>
    <wire loc="43:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x10d774740"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x10d9f6da0"/></to>
    </wire>
    <wire loc="23:../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x10d77f7a0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x10d771ab0"/></to>
    </wire>
    <wire loc="38:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x10d771ab0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x10d79ee40"/></to>
    </wire>
    <wire loc="44:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x10d7734d0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x10d9f5b68"/></to>
    </wire>
    <wire loc="32:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x10d779ca8"/></from>
      <to><interface-ref name="RadioControl" scoped="" ref="0x10d7bf2b8"/></to>
    </wire>
    <wire loc="42:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x10d7750c0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x10d9f7798"/></to>
    </wire>
    <wire loc="35:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x10d766700"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x10d79a020"/></to>
    </wire>
    <wire loc="15:../../tos/chips/cc2420/x-lpl/CC2420xLplC.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x10d7bf2b8"/></from>
      <to><interface-ref name="RadioControl" scoped="" ref="0x10d7f3020"/></to>
    </wire>
    <wire loc="33:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="OppoRouting" scoped="" ref="0x10d773de8"/></from>
      <to><interface-ref name="OppoRouting" scoped="" ref="0x10d7fcde8"/></to>
    </wire>
    <wire loc="21:../../tos/chips/cc2420/x-lpl/CC2420xLplC.nc">
      <from><interface-ref name="OppoRouting" scoped="" ref="0x10d7fcde8"/></from>
      <to><interface-ref name="OppoRouting" scoped="" ref="0x10d233080"/></to>
    </wire>
    <wire loc="37:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x10d765508"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x10d79b4e8"/></to>
    </wire>
    <wire loc="46:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x10d799020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x10d7bfa48"/></to>
    </wire>
    <wire loc="16:../../tos/chips/cc2420/x-lpl/CC2420xLplC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x10d7bfa48"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x10d7f37b0"/></to>
    </wire>
    <wire loc="47:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x10d793c50"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x10d7fc108"/></to>
    </wire>
    <wire loc="18:../../tos/chips/cc2420/x-lpl/CC2420xLplC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x10d7fc108"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x10d7f2db8"/></to>
    </wire>
    <wire loc="48:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSnoop" scoped="" ref="0x10d798348"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x10d7fc7a0"/></to>
    </wire>
    <wire loc="19:../../tos/chips/cc2420/x-lpl/CC2420xLplC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x10d7fc7a0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x10d231868"/></to>
    </wire>
    <wire loc="49:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="BulkSend" scoped="" ref="0x10d7932b8"/></from>
      <to><interface-ref name="BulkSend" scoped="" ref="0x10d7be798"/></to>
    </wire>
    <wire loc="17:../../tos/chips/cc2420/x-lpl/CC2420xLplC.nc">
      <from><interface-ref name="BulkSend" scoped="" ref="0x10d7be798"/></from>
      <to><interface-ref name="BulkSend" scoped="" ref="0x10d7f2488"/></to>
    </wire>
    <wire loc="50:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LplxPacket" scoped="" ref="0x10d798948"/></from>
      <to><interface-ref name="LplxPacket" scoped="" ref="0x10d9faa08"/></to>
    </wire>
    <wire loc="51:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x10d792bd8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x10d9f6da0"/></to>
    </wire>
    <wire loc="52:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x10d7975d0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x10d9f7798"/></to>
    </wire>
    <wire loc="55:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x10d7918b8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x10d420ce0"/></to>
    </wire>
    <wire loc="20:../../tos/chips/cc2420/x-lpl/CC2420xLplC.nc">
      <from><interface-ref name="RadioTimerUpdate" scoped="" ref="0x10d7f7350"/></from>
      <to><interface-ref name="RadioTimerUpdate" scoped="" ref="0x10d7f14a0"/></to>
    </wire>
    <wire loc="26:../../tos/chips/cc2420/x-lpl/CC2420xLplC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x10d7f1e58"/></from>
      <to><interface-ref name="LplSend" scoped="" ref="0x10d23b360"/></to>
    </wire>
    <wire loc="27:../../tos/chips/cc2420/x-lpl/CC2420xLplC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x10d7f0708"/></from>
      <to><interface-ref name="LplReceive" scoped="" ref="0x10d217020"/></to>
    </wire>
    <wire loc="28:../../tos/chips/cc2420/x-lpl/CC2420xLplC.nc">
      <from><interface-ref name="LplTime" scoped="" ref="0x10d7ef600"/></from>
      <to><interface-ref name="LplTime" scoped="" ref="0x10d230a50"/></to>
    </wire>
    <wire loc="31:../../tos/chips/cc2420/x-lpl/CC2420xLplC.nc">
      <from><interface-ref name="SleepTimer" scoped="" ref="0x10d7ee020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x10d8541c8"/></to>
    </wire>
    <wire loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x10d8541c8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x10d84ca18"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="34:../../tos/chips/cc2420/x-lpl/CC2420xLplC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x10d7e6508"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x10da0f530"/></to>
    </wire>
    <wire loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x10da0f530"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x10da09320"/></to>
    </wire>
    <wire loc="37:../../tos/chips/cc2420/x-lpl/CC2420xLplC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x10d7e6c98"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x10d420ce0"/></to>
    </wire>
    <wire loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x10d84ca18"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x10d8421c8"/></to>
    </wire>
    <wire loc="47:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x10d8421c8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x10d9f3328"/></to>
    </wire>
    <wire loc="46:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x10d845430"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x10d87ab40"/></to>
    </wire>
    <wire loc="41:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x10d87ab40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x10dee0358"/></to>
    </wire>
    <wire loc="50:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x10d9ed678"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x10d973528"/></to>
    </wire>
    <wire loc="51:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x10d96e6b0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x10d9584b8"/></to>
    </wire>
    <wire loc="42:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x10d9584b8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x10dedaa20"/></to>
    </wire>
    <wire loc="52:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x10d9e39d0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x10d8d82e8"/></to>
    </wire>
    <wire loc="39:../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x10d8d82e8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x10d8fa8d8"/></to>
    </wire>
    <wire loc="41:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x10dee0358"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x10dec4d90"/></to>
    </wire>
    <wire loc="44:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x10ded4d20"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x10dee0b40"/></to>
    </wire>
    <wire loc="42:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x10dee0b40"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x10dec3648"/></to>
    </wire>
    <wire loc="45:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x10ded6b38"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x10d8d82e8"/></to>
    </wire>
    <wire loc="44:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x10df1a5a8"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x10decae60"/></to>
    </wire>
    <wire loc="38:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x10decae60"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x10d85e020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="45:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x10df19bd8"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x10dec7430"/></to>
    </wire>
    <wire loc="39:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x10dec7430"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x10d85db60"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="46:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x10df17020"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x10dec6740"/></to>
    </wire>
    <wire loc="40:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x10dec6740"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x10d89c498"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="47:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x10df17c18"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x10d420ce0"/></to>
    </wire>
    <wire loc="14:../../tos/chips/msp430/timer/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x10d85e020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerA" scoped="" ref="0x10cffd930"/></to>
    </wire>
    <wire loc="15:../../tos/chips/msp430/timer/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x10d85db60"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlA0" scoped="" ref="0x10cff6da8"/></to>
    </wire>
    <wire loc="16:../../tos/chips/msp430/timer/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x10d89c498"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA0" scoped="" ref="0x10d00ea88"/></to>
    </wire>
    <wire loc="18:../../tos/chips/msp430/timer/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x10d85e020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerA" scoped="" ref="0x10cffd930"/></to>
    </wire>
    <wire loc="19:../../tos/chips/msp430/timer/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x10d85db60"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlA1" scoped="" ref="0x10cffb218"/></to>
    </wire>
    <wire loc="20:../../tos/chips/msp430/timer/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x10d89c498"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA1" scoped="" ref="0x10cff3868"/></to>
    </wire>
    <wire loc="22:../../tos/chips/msp430/timer/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x10d85e020"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerA" scoped="" ref="0x10cffd930"/></to>
    </wire>
    <wire loc="23:../../tos/chips/msp430/timer/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x10d85db60"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlA2" scoped="" ref="0x10cff5710"/></to>
    </wire>
    <wire loc="24:../../tos/chips/msp430/timer/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x10d89c498"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA2" scoped="" ref="0x10cff26e0"/></to>
    </wire>
    <wire loc="41:../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x10d912b10"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x10d8cf118"/></to>
    </wire>
    <wire loc="39:../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Counter32khz" scoped="" ref="0x10d8cf118"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x10d8cb888"/></to>
    </wire>
    <wire loc="44:../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="RadioTimerUpdate" scoped="" ref="0x10d90fad0"/></from>
      <to><interface-ref name="RadioTimerUpdate" scoped="" ref="0x10d7f7350"/></to>
    </wire>
    <wire loc="40:../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x10d9008c0"/></from>
      <to><interface-ref name="TimerA" scoped="" ref="0x10cffd930"/></to>
    </wire>
    <wire loc="76:../../tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x10d96a900"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x10caffca0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:../../tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x10d9e6020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x10caffca0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x10da0e4c0"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x10da0a2b8"/></to>
    </wire>
    <wire loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x10da14758"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x10da0da40"/></to>
    </wire>
    <wire loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x10da68408"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x10d77d920"/></to>
    </wire>
    <wire loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x10da66020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x10d77c5d0"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/MainC.nc">
      <documentation loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="40:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformC.nc">
      <documentation loc="34:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre and Cory Sharp&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="3:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformP.nc" safe="">
      <module/>
    </component>
    <component qname="MotePlatformC" loc="1:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosb/MotePlatformC.nc" safe="">
      <module/>
    </component>
    <component qname="MoteClockC" loc="37:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosb/MoteClockC.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosb/MoteClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockC" loc="26:../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <documentation loc="22:../../tos/chips/msp430/timer/Msp430ClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockP" loc="38:../../tos/chips/msp430/timer/Msp430ClockP.nc" safe="">
      <module/>
    </component>
    <component qname="Msp430TimerC" loc="26:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <documentation loc="22:../../tos/chips/msp430/timer/Msp430TimerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA" loc="28(Msp430TimerC.Msp430TimerA):../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:302">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:368">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:352">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB" loc="28(Msp430TimerC.Msp430TimerB):../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:286">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:400">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:384">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA0" loc="28(Msp430TimerC.Msp430TimerA0):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="22:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:354">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:370">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA1" loc="28(Msp430TimerC.Msp430TimerA1):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="22:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:356">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:372">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA2" loc="28(Msp430TimerC.Msp430TimerA2):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="22:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:358">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:374">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB0" loc="28(Msp430TimerC.Msp430TimerB0):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="22:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:386">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:402">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerCommonP" loc="2:../../tos/chips/msp430/timer/Msp430TimerCommonP.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420xRTxP" loc="6:../../tos/chips/cc2420/x-rtx/CC2420xRTxP.nc">
      <module/>
    </component>
    <component qname="LedsC" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/LedsC.nc">
      <documentation loc="34:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="40:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <documentation loc="34:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <documentation loc="35:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for general-purpose I/O.&#10;&#10; @author Joe Polastre&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC.P10" loc="39(HplMsp430GeneralIOC.P10):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P11" loc="39(HplMsp430GeneralIOC.P11):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P12" loc="39(HplMsp430GeneralIOC.P12):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P13" loc="39(HplMsp430GeneralIOC.P13):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P14" loc="39(HplMsp430GeneralIOC.P14):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P15" loc="39(HplMsp430GeneralIOC.P15):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P16" loc="39(HplMsp430GeneralIOC.P16):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P17" loc="39(HplMsp430GeneralIOC.P17):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P20" loc="39(HplMsp430GeneralIOC.P20):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P21" loc="39(HplMsp430GeneralIOC.P21):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P22" loc="39(HplMsp430GeneralIOC.P22):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P23" loc="39(HplMsp430GeneralIOC.P23):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P24" loc="39(HplMsp430GeneralIOC.P24):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P25" loc="39(HplMsp430GeneralIOC.P25):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P26" loc="39(HplMsp430GeneralIOC.P26):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P27" loc="39(HplMsp430GeneralIOC.P27):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P30" loc="39(HplMsp430GeneralIOC.P30):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P31" loc="39(HplMsp430GeneralIOC.P31):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P32" loc="39(HplMsp430GeneralIOC.P32):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P33" loc="39(HplMsp430GeneralIOC.P33):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P34" loc="39(HplMsp430GeneralIOC.P34):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P35" loc="39(HplMsp430GeneralIOC.P35):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P36" loc="39(HplMsp430GeneralIOC.P36):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P37" loc="39(HplMsp430GeneralIOC.P37):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P40" loc="39(HplMsp430GeneralIOC.P40):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P41" loc="39(HplMsp430GeneralIOC.P41):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P42" loc="39(HplMsp430GeneralIOC.P42):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P43" loc="39(HplMsp430GeneralIOC.P43):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P44" loc="39(HplMsp430GeneralIOC.P44):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P45" loc="39(HplMsp430GeneralIOC.P45):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P46" loc="39(HplMsp430GeneralIOC.P46):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P47" loc="39(HplMsp430GeneralIOC.P47):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P50" loc="39(HplMsp430GeneralIOC.P50):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P51" loc="39(HplMsp430GeneralIOC.P51):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P52" loc="39(HplMsp430GeneralIOC.P52):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P53" loc="39(HplMsp430GeneralIOC.P53):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P54" loc="39(HplMsp430GeneralIOC.P54):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P55" loc="39(HplMsp430GeneralIOC.P55):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P56" loc="39(HplMsp430GeneralIOC.P56):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P57" loc="39(HplMsp430GeneralIOC.P57):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P60" loc="39(HplMsp430GeneralIOC.P60):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P61" loc="39(HplMsp430GeneralIOC.P61):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P62" loc="39(HplMsp430GeneralIOC.P62):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P63" loc="39(HplMsp430GeneralIOC.P63):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P64" loc="39(HplMsp430GeneralIOC.P64):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P65" loc="39(HplMsp430GeneralIOC.P65):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P66" loc="39(HplMsp430GeneralIOC.P66):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P67" loc="39(HplMsp430GeneralIOC.P67):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led0Impl" loc="42(PlatformLedsC.Led0Impl):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led1Impl" loc="42(PlatformLedsC.Led1Impl):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led2Impl" loc="42(PlatformLedsC.Led2Impl):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="McuSleepC" loc="49:../../tos/chips/msp430/McuSleepC.nc" safe="">
      <documentation loc="33:../../tos/chips/msp430/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430. Code for low power calculation copied from older&#10; msp430hardware.h by Vlado Handziski, Joe Polastre, and Cory Sharp.&#10;&#10;&#10; @author Philip Levis&#10; @author Vlado Handziski&#10; @author Joe Polastre&#10; @author Cory Sharp&#10; @date   October 26, 2005&#10; @see  Please refer to TEP 112 for more information about this component and its&#10;          intended use.&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MoteClockP" loc="38:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosb/MoteClockP.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosb/MoteClockP.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="RadioCountToLedsC" loc="47:RadioCountToLedsC.nc" safe="">
      <documentation loc="36:RadioCountToLedsC.nc">
        <short>&#10; Implementation of the RadioCountToLeds application.</short>
        <long>&#10; Implementation of the RadioCountToLeds application. RadioCountToLeds&#10; maintains a 4Hz counter, broadcasting its value in an AM packet&#10; every time it gets updated. A RadioCountToLeds node that hears a counter&#10; displays the bottom three bits on its LEDs. This application is a useful&#10; test to show that basic AM communication and timers work.&#10;&#10; @author Philip Levis&#10; @date   June 6 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RadioCountToLedsAppC.AMSenderC" loc="47(RadioCountToLedsAppC.AMSenderC):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMSenderC.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RadioCountToLedsAppC.AMSenderC.SenderC" loc="47(RadioCountToLedsAppC.AMSenderC.SenderC):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x10d0d43b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RadioCountToLedsAppC.AMSenderC.SenderC.AMQueueEntryP" loc="43(RadioCountToLedsAppC.AMSenderC.SenderC.AMQueueEntryP):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x10d0d43b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueP.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="45(AMQueueP.AMQueueImplP):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="3:../../tos/platforms/telosa/ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageC" loc="9:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageP" loc="5:../../tos/chips/cc2420/CC2420ActiveMessageP.nc" safe="">
      <module/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420xLplC" loc="1:../../tos/chips/cc2420/x-lpl/CC2420xLplC.nc">
      <configuration/>
    </component>
    <component qname="CC2420xLplP" loc="8:../../tos/chips/cc2420/x-lpl/CC2420xLplP.nc">
      <module/>
    </component>
    <component qname="CC2420xLplC.SleepTimer" loc="44(CC2420xLplC.SleepTimer):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TimerMilliP.nc">
      <documentation loc="34:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="32:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <documentation loc="22:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
        <short>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.</short>
        <long>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.  TimerMilliC in tos/system/ uses this component to&#10; allocate new timers.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C" loc="30(HilTimerMilliC.AlarmMilli32C):../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <documentation loc="22:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom" loc="30(HilTimerMilliC.AlarmMilli32C.AlarmFrom):../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="22:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer" loc="26(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer):../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="22:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzMapC" loc="7:../../tos/chips/msp430/timer/Msp430Timer32khzMapC.nc">
      <documentation loc="1:../../tos/chips/msp430/timer/Msp430Timer32khzMapC.nc">
        <short>&#10; Msp430TimerMicroMapC presents as paramaterized interfaces all of the Micro&#10; hardware timers on the MSP430 that are available for compile time allocation&#10; by &#34;new AlarmMicro16C()&#34;, &#34;new AlarmMicro32C()&#34;, and so on.</short>
        <long>&#10; Msp430TimerMicroMapC presents as paramaterized interfaces all of the Micro&#10; hardware timers on the MSP430 that are available for compile time allocation&#10; by &#34;new AlarmMicro16C()&#34;, &#34;new AlarmMicro32C()&#34;, and so on.&#10;*</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm" loc="34(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm):../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="23:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10d67e1d8"/>
            <typename><typedef-ref name="T32khz" ref="0x10d67e530"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C" loc="30:../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <documentation loc="22:../../tos/chips/msp430/timer/CounterMilli32C.nc">
        <short>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.</short>
        <long>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC" loc="30:../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <documentation loc="22:../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
        <short>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.</short>
        <long>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC.Counter" loc="31(Msp430Counter32khzC.Counter):../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="22:../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10d67e1d8"/>
            <typename><typedef-ref name="T32khz" ref="0x10d67e530"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C.Transform" loc="56(CounterMilli32C.Transform):../../tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10d680a18"/>
            <typename><typedef-ref name="TMilli" ref="0x10d680d70"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10c877020"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10d67e1d8"/>
            <typename><typedef-ref name="T32khz" ref="0x10d67e530"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10c876b20"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10c877020"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.Transform" loc="51(HilTimerMilliC.AlarmMilli32C.Transform):../../tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10d680a18"/>
            <typename><typedef-ref name="TMilli" ref="0x10d680d70"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10c877020"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10d67e1d8"/>
            <typename><typedef-ref name="T32khz" ref="0x10d67e530"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10c876b20"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):../../tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:../../tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10d680a18"/>
            <typename><typedef-ref name="TMilli" ref="0x10d680d70"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="48(HilTimerMilliC.VirtualizeTimerC):../../tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:../../tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10d680a18"/>
            <typename><typedef-ref name="TMilli" ref="0x10d680d70"/></typename>
          </type-tag>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10d680a18"/>
            <typename><typedef-ref name="TMilli" ref="0x10d680d70"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RandomC" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/RandomC.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420xPacketP" loc="3:../../tos/chips/cc2420/x-packet/CC2420xPacketP.nc">
      <module/>
    </component>
    <component qname="RadioCountToLedsAppC.AMReceiverC" loc="43(RadioCountToLedsAppC.AMReceiverC):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMReceiverC.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RadioCountToLedsAppC.TimerMilliC" loc="44(RadioCountToLedsAppC.TimerMilliC):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430TimerP" loc="28:../../tos/chips/msp430/timer/Msp430TimerP.nc" abstract="" safe="">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxIV_addr" ref="0x10d01c878" loc="29:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10c876b20"/></typename>
          </type-int>
        </constant>
        <constant name="TxR_addr" ref="0x10d01cbf0" loc="30:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10c876b20"/></typename>
          </type-int>
        </constant>
        <constant name="TxCTL_addr" ref="0x10d01b020" loc="31:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10c876b20"/></typename>
          </type-int>
        </constant>
        <constant name="TxIFG" ref="0x10d01b378" loc="32:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10c876b20"/></typename>
          </type-int>
        </constant>
        <constant name="TxCLR" ref="0x10d01b6d0" loc="33:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10c876b20"/></typename>
          </type-int>
        </constant>
        <constant name="TxIE" ref="0x10d01ba20" loc="34:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10c876b20"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL0" ref="0x10d01bd88" loc="35:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10c876b20"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL1" ref="0x10d01a150" loc="36:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10c876b20"/></typename>
          </type-int>
        </constant>
        <constant name="isClockSourceAsync" ref="0x10d01a500" loc="37:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10caf01d0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430TimerCapComP" loc="28:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc" abstract="" safe="">
      <documentation loc="22:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxCCTLx_addr" ref="0x10d041928" loc="29:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10c876b20"/></typename>
          </type-int>
        </constant>
        <constant name="TxCCRx_addr" ref="0x10d041cd8" loc="30:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10c876b20"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOP" loc="39:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc" abstract="" safe="">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_in_addr" ref="0x10d4d4998" loc="40:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_out_addr" ref="0x10d4d4d20" loc="41:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_dir_addr" ref="0x10d4d3108" loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_sel_addr" ref="0x10d4d3490" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="pin" ref="0x10d4d37e0" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10c876790"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430GpioC" loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc" abstract="" safe="">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AMSenderC" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMSenderC.nc" abstract="">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x10d6e1020" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x10d0d43b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DirectAMSenderC" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x10d6cc5b8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x10d0d43b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x10d6fe170" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x10d0d43b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x10d7172a8" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmMilli32C" loc="30:../../tos/chips/msp430/timer/AlarmMilli32C.nc" abstract="">
      <documentation loc="22:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz16C" loc="30:../../tos/chips/msp430/timer/Alarm32khz16C.nc" abstract="">
      <documentation loc="22:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzC" loc="26:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc" abstract="">
      <documentation loc="22:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430AlarmC" loc="34:../../tos/chips/msp430/timer/Msp430AlarmC.nc" abstract="" safe="">
      <documentation loc="23:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x10d88aa10" loc="34:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
          <component-ref qname="Msp430AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x10d88aa10"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430CounterC" loc="31:../../tos/chips/msp430/timer/Msp430CounterC.nc" abstract="" safe="">
      <documentation loc="22:../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x10d8ca020" loc="31:../../tos/chips/msp430/timer/Msp430CounterC.nc">
          <component-ref qname="Msp430CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x10d8ca020"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="56:../../tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x10d8d1db8" loc="57:../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x10d8d1db8"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x10d8f95a8" loc="58:../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x10d8f95a8"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x10d8f9970" loc="59:../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x10d8f9970"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x10d8f7110" loc="60:../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x10d8f7110"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x10d8f74b8" loc="61:../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10c876790"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x10d8f7c48" loc="62:../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x10d8f7c48"/></type-var>
        </typedef>
        <constant name="isdco" ref="0x10d8f6020" loc="63:../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10caf01d0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:../../tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x10d90a4d8" loc="52:../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x10d90a4d8"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x10d90ac40" loc="53:../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x10d90ac40"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x10d909068" loc="54:../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x10d909068"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x10d9097e0" loc="55:../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x10d9097e0"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x10d909b88" loc="56:../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10c876790"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:../../tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:../../tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x10d954688" loc="46:../../tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x10d954688"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="48:../../tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:../../tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x10d9aeda0" loc="48:../../tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x10d9aeda0"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x10d9ab108" loc="48:../../tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x10d9e2310" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x10d9e2310"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AMReceiverC" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x10da6fd38" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x10d0d43b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x10cf6e680" loc="58:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x10cf6e680"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10cf6e9d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x10cf6f220" loc="57:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x10cf6f220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x10cf6f570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x10cf725b8" loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x10cf725b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10cf72908"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x10cf694f8" loc="6:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteInit" scoped="" ref="0x10cf694f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10cf69848"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x10cf6c740" loc="4:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x10cf6c740"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10cf6ca90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteClockInit" ref="0x10cf6ce10" loc="5:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x10cf6ce10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10cf691a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x10cf69b98" loc="7:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LedsInit" scoped="" ref="0x10cf69b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10cf68020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x10cf6b610" loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosb/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x10cf6b610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10cf6b960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MoteClockInit" ref="0x10cf880e8" loc="39:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosb/MoteClockC.nc">
      <component-ref qname="MoteClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x10cf880e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10cf88438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x10cf9b2b8" loc="29:../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x10cf9b2b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x10cfa11a8"/>
        <function-ref name="initTimerB" scoped="" ref="0x10cf9b790"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x10cf9b918"/>
        <function-ref name="initTimerA" scoped="" ref="0x10cf9baa0"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x10cf9b608"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x10cf9bc28"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x10cf9bdb0"/>
        <function-ref name="initClocks" scoped="" ref="0x10cfa1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x10cfa2020" loc="28:../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x10cfa2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10cfa2370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x10cfaaba0" loc="41:../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x10cfaaba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x10cfa9ad8"/>
        <function-ref name="initTimerB" scoped="" ref="0x10cfa91a8"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x10cfa9330"/>
        <function-ref name="initTimerA" scoped="" ref="0x10cfa94b8"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x10cfa9020"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x10cfa9640"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x10cfa97c8"/>
        <function-ref name="initClocks" scoped="" ref="0x10cfa9950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x10cfa9e08" loc="42:../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x10cfa9e08"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x10cfa81a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x10cfaa530" loc="40:../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x10cfaa530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10cfaa880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA2" ref="0x10cff5710" loc="31:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA2" scoped="" ref="0x10cff5710"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x10cff5a60"/>
        <function-ref name="getControl" scoped="" ref="0x10cff5be8"/>
        <function-ref name="enableEvents" scoped="" ref="0x10cff5d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x10cff4020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x10cff41a8"/>
        <function-ref name="disableEvents" scoped="" ref="0x10cff4330"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x10cff44b8"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x10cff4640"/>
        <function-ref name="setControl" scoped="" ref="0x10cff47c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA1" ref="0x10d00c0c0" loc="36:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA1" scoped="" ref="0x10d00c0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10d00c410"/>
        <function-ref name="setSynchronous" scoped="" ref="0x10d00c598"/>
        <function-ref name="captured" scoped="" ref="0x10d00c720"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10d00c8a8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10d00ca30"/>
        <function-ref name="setEdge" scoped="" ref="0x10d00cbb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB0" ref="0x10d004710" loc="40:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB0" scoped="" ref="0x10d004710"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x10d004a60"/>
        <function-ref name="getControl" scoped="" ref="0x10d004be8"/>
        <function-ref name="enableEvents" scoped="" ref="0x10d004d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x10d003020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x10d0031a8"/>
        <function-ref name="disableEvents" scoped="" ref="0x10d003330"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x10d0034b8"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x10d003640"/>
        <function-ref name="setControl" scoped="" ref="0x10d0037c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA1" ref="0x10cff3868" loc="33:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0x10cff3868"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10cff3bb8"/>
        <function-ref name="setEvent" scoped="" ref="0x10cff3d40"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x10cff2020"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x10cff21a8"/>
        <function-ref name="fired" scoped="" ref="0x10cff2330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA0" ref="0x10cff6da8" loc="29:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0x10cff6da8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x10cffc170"/>
        <function-ref name="getControl" scoped="" ref="0x10cffc2f8"/>
        <function-ref name="enableEvents" scoped="" ref="0x10cffc480"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x10cffc608"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x10cffc790"/>
        <function-ref name="disableEvents" scoped="" ref="0x10cffc918"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x10cffcaa0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x10cffcc28"/>
        <function-ref name="setControl" scoped="" ref="0x10cffcdb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA2" ref="0x10d00b020" loc="37:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA2" scoped="" ref="0x10d00b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10d00b370"/>
        <function-ref name="setSynchronous" scoped="" ref="0x10d00b4f8"/>
        <function-ref name="captured" scoped="" ref="0x10d00b680"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10d00b808"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10d00b990"/>
        <function-ref name="setEdge" scoped="" ref="0x10d00bb18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerA" ref="0x10cffd930" loc="28:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0x10cffd930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10cffdc80"/>
        <function-ref name="setClockSource" scoped="" ref="0x10cffde08"/>
        <function-ref name="enableEvents" scoped="" ref="0x10cfe5020"/>
        <function-ref name="get" scoped="" ref="0x10cfe51a8"/>
        <function-ref name="disableEvents" scoped="" ref="0x10cfe5330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10cfe54b8"/>
        <function-ref name="getMode" scoped="" ref="0x10cfe5640"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10cfe57c8"/>
        <function-ref name="overflow" scoped="" ref="0x10cfe5950"/>
        <function-ref name="setMode" scoped="" ref="0x10cfe5ad8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x10cfe5c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA2" ref="0x10cff26e0" loc="34:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA2" scoped="" ref="0x10cff26e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10cff2a30"/>
        <function-ref name="setEvent" scoped="" ref="0x10cff2bb8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x10cff2d40"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x10d00d020"/>
        <function-ref name="fired" scoped="" ref="0x10d00d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA1" ref="0x10cffb218" loc="30:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0x10cffb218"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x10cffb568"/>
        <function-ref name="getControl" scoped="" ref="0x10cffb6f0"/>
        <function-ref name="enableEvents" scoped="" ref="0x10cffb878"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x10cffba00"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x10cffbb88"/>
        <function-ref name="disableEvents" scoped="" ref="0x10cffbd10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x10cff5020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x10cff51a8"/>
        <function-ref name="setControl" scoped="" ref="0x10cff5330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA0" ref="0x10d0061b0" loc="35:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA0" scoped="" ref="0x10d0061b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10d006500"/>
        <function-ref name="setSynchronous" scoped="" ref="0x10d006688"/>
        <function-ref name="captured" scoped="" ref="0x10d006810"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10d006998"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10d006b20"/>
        <function-ref name="setEdge" scoped="" ref="0x10d006ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA0" ref="0x10d00ea88" loc="32:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0x10d00ea88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10d00edd8"/>
        <function-ref name="setEvent" scoped="" ref="0x10cff3020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x10cff31a8"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x10cff3330"/>
        <function-ref name="fired" scoped="" ref="0x10cff34b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerB" ref="0x10d005020" loc="39:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerB" scoped="" ref="0x10d005020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10d005370"/>
        <function-ref name="setClockSource" scoped="" ref="0x10d0054f8"/>
        <function-ref name="enableEvents" scoped="" ref="0x10d005680"/>
        <function-ref name="get" scoped="" ref="0x10d005808"/>
        <function-ref name="disableEvents" scoped="" ref="0x10d005990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10d005b18"/>
        <function-ref name="getMode" scoped="" ref="0x10d005ca0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10d005e28"/>
        <function-ref name="overflow" scoped="" ref="0x10d004020"/>
        <function-ref name="setMode" scoped="" ref="0x10d0041a8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x10d004330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB0" ref="0x10d0029f0" loc="42:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB0" scoped="" ref="0x10d0029f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10d002d40"/>
        <function-ref name="setSynchronous" scoped="" ref="0x10d000020"/>
        <function-ref name="captured" scoped="" ref="0x10d0001a8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10d000330"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10d0004b8"/>
        <function-ref name="setEdge" scoped="" ref="0x10d000640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB0" ref="0x10d003b78" loc="41:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB0" scoped="" ref="0x10d003b78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10d002020"/>
        <function-ref name="setEvent" scoped="" ref="0x10d0021a8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x10d002330"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x10d0024b8"/>
        <function-ref name="fired" scoped="" ref="0x10d002640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x10d04bc70" loc="42:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x10d04bc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x10d049020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x10d04b658" loc="41:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x10d04b658"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x10d04b9a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x10d0492e8" loc="43:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x10d0492e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x10d049638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x10d04b020" loc="40:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x10d04b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10c876790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x10d04b390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x10d04d798" loc="39:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x10d04d798"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10d04dae8"/>
        <function-ref name="setClockSource" scoped="" ref="0x10d04dc70"/>
        <function-ref name="enableEvents" scoped="" ref="0x10d04ddf8"/>
        <function-ref name="get" scoped="" ref="0x10d04c020"/>
        <function-ref name="disableEvents" scoped="" ref="0x10d04c1a8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10d04c330"/>
        <function-ref name="getMode" scoped="" ref="0x10d04c4b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10d04c640"/>
        <function-ref name="overflow" scoped="" ref="0x10d04c7c8"/>
        <function-ref name="setMode" scoped="" ref="0x10d04c950"/>
        <function-ref name="setInputDivider" scoped="" ref="0x10d04cad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x10d043638" loc="42:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x10d043638"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x10d043988"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x10d043020" loc="41:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x10d043020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x10d043370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x10d043c50" loc="43:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x10d043c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x10d042020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x10d0448a0" loc="40:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x10d0448a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10c876790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x10d044c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x10d0451e8" loc="39:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x10d0451e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10d045538"/>
        <function-ref name="setClockSource" scoped="" ref="0x10d0456c0"/>
        <function-ref name="enableEvents" scoped="" ref="0x10d045848"/>
        <function-ref name="get" scoped="" ref="0x10d0459d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x10d045b58"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10d045ce0"/>
        <function-ref name="getMode" scoped="" ref="0x10d045e68"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10d044020"/>
        <function-ref name="overflow" scoped="" ref="0x10d0441a8"/>
        <function-ref name="setMode" scoped="" ref="0x10d044330"/>
        <function-ref name="setInputDivider" scoped="" ref="0x10d0444b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x10d0a1c58" loc="35:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x10d0a1c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10d0a0020"/>
        <function-ref name="setSynchronous" scoped="" ref="0x10d0a01a8"/>
        <function-ref name="captured" scoped="" ref="0x10d0a0330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10d0a04b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10d0a0640"/>
        <function-ref name="setEdge" scoped="" ref="0x10d0a07c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x10d03fc80" loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x10d03fc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x10d0a2020"/>
        <function-ref name="getControl" scoped="" ref="0x10d0a21a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x10d0a2330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x10d0a24b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x10d0a2640"/>
        <function-ref name="disableEvents" scoped="" ref="0x10d0a27c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x10d0a2950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x10d0a2ad8"/>
        <function-ref name="setControl" scoped="" ref="0x10d0a2c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x10d09e100" loc="37:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x10d09e100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x10d09e450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x10d0a1020" loc="34:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x10d0a1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10d0a1370"/>
        <function-ref name="setEvent" scoped="" ref="0x10d0a14f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x10d0a1680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x10d0a1808"/>
        <function-ref name="fired" scoped="" ref="0x10d0a1990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x10d0a0a90" loc="36:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x10d0a0a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10d0a0de0"/>
        <function-ref name="setClockSource" scoped="" ref="0x10d09f020"/>
        <function-ref name="enableEvents" scoped="" ref="0x10d09f1a8"/>
        <function-ref name="get" scoped="" ref="0x10d09f330"/>
        <function-ref name="disableEvents" scoped="" ref="0x10d09f4b8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10d09f640"/>
        <function-ref name="getMode" scoped="" ref="0x10d09f7c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10d09f950"/>
        <function-ref name="overflow" scoped="" ref="0x10d09fad8"/>
        <function-ref name="setMode" scoped="" ref="0x10d09fc60"/>
        <function-ref name="setInputDivider" scoped="" ref="0x10d09fde8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x10d099c58" loc="35:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x10d099c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10d098020"/>
        <function-ref name="setSynchronous" scoped="" ref="0x10d0981a8"/>
        <function-ref name="captured" scoped="" ref="0x10d098330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10d0984b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10d098640"/>
        <function-ref name="setEdge" scoped="" ref="0x10d0987c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x10d09cc80" loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x10d09cc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x10d09a020"/>
        <function-ref name="getControl" scoped="" ref="0x10d09a1a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x10d09a330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x10d09a4b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x10d09a640"/>
        <function-ref name="disableEvents" scoped="" ref="0x10d09a7c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x10d09a950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x10d09aad8"/>
        <function-ref name="setControl" scoped="" ref="0x10d09ac60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x10d096100" loc="37:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x10d096100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x10d096450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x10d099020" loc="34:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x10d099020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10d099370"/>
        <function-ref name="setEvent" scoped="" ref="0x10d0994f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x10d099680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x10d099808"/>
        <function-ref name="fired" scoped="" ref="0x10d099990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x10d098a90" loc="36:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x10d098a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10d098de0"/>
        <function-ref name="setClockSource" scoped="" ref="0x10d097020"/>
        <function-ref name="enableEvents" scoped="" ref="0x10d0971a8"/>
        <function-ref name="get" scoped="" ref="0x10d097330"/>
        <function-ref name="disableEvents" scoped="" ref="0x10d0974b8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10d097640"/>
        <function-ref name="getMode" scoped="" ref="0x10d0977c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10d097950"/>
        <function-ref name="overflow" scoped="" ref="0x10d097ad8"/>
        <function-ref name="setMode" scoped="" ref="0x10d097c60"/>
        <function-ref name="setInputDivider" scoped="" ref="0x10d097de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x10d092c58" loc="35:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x10d092c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10d0b3020"/>
        <function-ref name="setSynchronous" scoped="" ref="0x10d0b31a8"/>
        <function-ref name="captured" scoped="" ref="0x10d0b3330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10d0b34b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10d0b3640"/>
        <function-ref name="setEdge" scoped="" ref="0x10d0b37c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x10d094c80" loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x10d094c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x10d093020"/>
        <function-ref name="getControl" scoped="" ref="0x10d0931a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x10d093330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x10d0934b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x10d093640"/>
        <function-ref name="disableEvents" scoped="" ref="0x10d0937c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x10d093950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x10d093ad8"/>
        <function-ref name="setControl" scoped="" ref="0x10d093c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x10d0b1100" loc="37:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x10d0b1100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x10d0b1450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x10d092020" loc="34:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x10d092020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10d092370"/>
        <function-ref name="setEvent" scoped="" ref="0x10d0924f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x10d092680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x10d092808"/>
        <function-ref name="fired" scoped="" ref="0x10d092990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x10d0b3a90" loc="36:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x10d0b3a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10d0b3de0"/>
        <function-ref name="setClockSource" scoped="" ref="0x10d0b2020"/>
        <function-ref name="enableEvents" scoped="" ref="0x10d0b21a8"/>
        <function-ref name="get" scoped="" ref="0x10d0b2330"/>
        <function-ref name="disableEvents" scoped="" ref="0x10d0b24b8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10d0b2640"/>
        <function-ref name="getMode" scoped="" ref="0x10d0b27c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10d0b2950"/>
        <function-ref name="overflow" scoped="" ref="0x10d0b2ad8"/>
        <function-ref name="setMode" scoped="" ref="0x10d0b2c60"/>
        <function-ref name="setInputDivider" scoped="" ref="0x10d0b2de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x10d0adc58" loc="35:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x10d0adc58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10d0ab020"/>
        <function-ref name="setSynchronous" scoped="" ref="0x10d0ab1a8"/>
        <function-ref name="captured" scoped="" ref="0x10d0ab330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10d0ab4b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10d0ab640"/>
        <function-ref name="setEdge" scoped="" ref="0x10d0ab7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x10d0afc80" loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x10d0afc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x10d0ae020"/>
        <function-ref name="getControl" scoped="" ref="0x10d0ae1a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x10d0ae330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x10d0ae4b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x10d0ae640"/>
        <function-ref name="disableEvents" scoped="" ref="0x10d0ae7c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x10d0ae950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x10d0aead8"/>
        <function-ref name="setControl" scoped="" ref="0x10d0aec60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x10d0a9100" loc="37:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x10d0a9100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x10d0a9450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x10d0ad020" loc="34:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x10d0ad020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10d0ad370"/>
        <function-ref name="setEvent" scoped="" ref="0x10d0ad4f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x10d0ad680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x10d0ad808"/>
        <function-ref name="fired" scoped="" ref="0x10d0ad990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x10d0aba90" loc="36:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x10d0aba90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10d0abde0"/>
        <function-ref name="setClockSource" scoped="" ref="0x10d0aa020"/>
        <function-ref name="enableEvents" scoped="" ref="0x10d0aa1a8"/>
        <function-ref name="get" scoped="" ref="0x10d0aa330"/>
        <function-ref name="disableEvents" scoped="" ref="0x10d0aa4b8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10d0aa640"/>
        <function-ref name="getMode" scoped="" ref="0x10d0aa7c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10d0aa950"/>
        <function-ref name="overflow" scoped="" ref="0x10d0aaad8"/>
        <function-ref name="setMode" scoped="" ref="0x10d0aac60"/>
        <function-ref name="setInputDivider" scoped="" ref="0x10d0aade8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA0" ref="0x10d0a54f8" loc="4:../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA0" scoped="" ref="0x10d0a54f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x10d0a5848"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA1" ref="0x10d0a5c40" loc="5:../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA1" scoped="" ref="0x10d0a5c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x10d0a4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB0" ref="0x10d0a4418" loc="6:../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB0" scoped="" ref="0x10d0a4418"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x10d0a4768"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x10d0a3080" loc="10:../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x10d0a3080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x10d0a33d0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x10d0a3558"/>
        <function-ref name="led1On" scoped="" ref="0x10d0a36e0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x10d0a3868"/>
        <function-ref name="led2Toggle" scoped="" ref="0x10d0a39f0"/>
        <function-ref name="get" scoped="" ref="0x10d0a3b78"/>
        <function-ref name="led1Off" scoped="" ref="0x10d0a3d00"/>
        <function-ref name="led2Off" scoped="" ref="0x10d0c44b8"/>
        <function-ref name="set" scoped="" ref="0x10d0c4020"/>
        <function-ref name="led0On" scoped="" ref="0x10d0c41a8"/>
        <function-ref name="led2On" scoped="" ref="0x10d0c4330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB1" ref="0x10d2337c8" loc="13:../../tos/chips/cc2420/x-rtx/CC2420xRTxP.nc">
      <component-ref qname="CC2420xRTxP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB1" scoped="" ref="0x10d2337c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x10d233b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x10d231868" loc="10:../../tos/chips/cc2420/x-rtx/CC2420xRTxP.nc">
      <component-ref qname="CC2420xRTxP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x10d231868"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x10d231bb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OppoRouting" ref="0x10d233080" loc="12:../../tos/chips/cc2420/x-rtx/CC2420xRTxP.nc">
      <component-ref qname="CC2420xRTxP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OppoRouting" scoped="" ref="0x10d233080"/></type-interface>
      <instance>
        <interfacedef-ref qname="OppoRouting"/>
      </instance>
      <interface-functions>
        <function-ref name="setLocalMetric" scoped="" ref="0x10d2333d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x10d219a20" loc="7:../../tos/chips/cc2420/x-rtx/CC2420xRTxP.nc">
      <component-ref qname="CC2420xRTxP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x10d219a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10d219d70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x10d233dd0" loc="15:../../tos/chips/cc2420/x-rtx/CC2420xRTxP.nc">
      <component-ref qname="CC2420xRTxP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x10d233dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x10d22f170"/>
        <function-ref name="led0Toggle" scoped="" ref="0x10d22f2f8"/>
        <function-ref name="led1On" scoped="" ref="0x10d22f480"/>
        <function-ref name="led1Toggle" scoped="" ref="0x10d22f608"/>
        <function-ref name="led2Toggle" scoped="" ref="0x10d22f790"/>
        <function-ref name="get" scoped="" ref="0x10d22f918"/>
        <function-ref name="led1Off" scoped="" ref="0x10d22faa0"/>
        <function-ref name="led2Off" scoped="" ref="0x10d22d1a8"/>
        <function-ref name="set" scoped="" ref="0x10d22fc28"/>
        <function-ref name="led0On" scoped="" ref="0x10d22fdb0"/>
        <function-ref name="led2On" scoped="" ref="0x10d22d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LplSend" ref="0x10d23b360" loc="8:../../tos/chips/cc2420/x-rtx/CC2420xRTxP.nc">
      <component-ref qname="CC2420xRTxP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LplSend" scoped="" ref="0x10d23b360"/></type-interface>
      <instance>
        <interfacedef-ref qname="LplSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x10d23b6b0"/>
        <function-ref name="sendDone" scoped="" ref="0x10d23b838"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LplTime" ref="0x10d230a50" loc="11:../../tos/chips/cc2420/x-rtx/CC2420xRTxP.nc">
      <component-ref qname="CC2420xRTxP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LplTime" scoped="" ref="0x10d230a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="LplTime"/>
      </instance>
      <interface-functions>
        <function-ref name="timeRadio" scoped="" ref="0x10d230da0"/>
        <function-ref name="timeCompensated" scoped="" ref="0x10d235020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LplReceive" ref="0x10d217020" loc="9:../../tos/chips/cc2420/x-rtx/CC2420xRTxP.nc">
      <component-ref qname="CC2420xRTxP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LplReceive" scoped="" ref="0x10d217020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LplReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="txDetect" scoped="" ref="0x10d217370"/>
        <function-ref name="rxInit" scoped="" ref="0x10d2174f8"/>
        <function-ref name="receive" scoped="" ref="0x10d217680"/>
        <function-ref name="rxOn" scoped="" ref="0x10d217808"/>
        <function-ref name="rxBuffSet" scoped="" ref="0x10d217990"/>
        <function-ref name="rxEnable" scoped="" ref="0x10d217b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x10d420ce0" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x10d420ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x10d41d0a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x10d41d228"/>
        <function-ref name="led1On" scoped="" ref="0x10d41d3b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x10d41d538"/>
        <function-ref name="led2Toggle" scoped="" ref="0x10d41d6c0"/>
        <function-ref name="get" scoped="" ref="0x10d41d848"/>
        <function-ref name="led1Off" scoped="" ref="0x10d41d9d0"/>
        <function-ref name="led2Off" scoped="" ref="0x10d41c020"/>
        <function-ref name="set" scoped="" ref="0x10d41db58"/>
        <function-ref name="led0On" scoped="" ref="0x10d41dce0"/>
        <function-ref name="led2On" scoped="" ref="0x10d41de68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x10d4117c8" loc="50:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x10d4117c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d411b18"/>
        <function-ref name="isInput" scoped="" ref="0x10d411ca0"/>
        <function-ref name="toggle" scoped="" ref="0x10d411e28"/>
        <function-ref name="isOutput" scoped="" ref="0x10d417020"/>
        <function-ref name="get" scoped="" ref="0x10d4171a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d417330"/>
        <function-ref name="set" scoped="" ref="0x10d4174b8"/>
        <function-ref name="clr" scoped="" ref="0x10d417640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x10d419020" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x10d419020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10d419370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x10d417958" loc="51:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x10d417958"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d417ca8"/>
        <function-ref name="isInput" scoped="" ref="0x10d417e30"/>
        <function-ref name="toggle" scoped="" ref="0x10d416020"/>
        <function-ref name="isOutput" scoped="" ref="0x10d4161a8"/>
        <function-ref name="get" scoped="" ref="0x10d416330"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d4164b8"/>
        <function-ref name="set" scoped="" ref="0x10d416640"/>
        <function-ref name="clr" scoped="" ref="0x10d4167c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x10d4195e8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x10d4195e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x10d419938"/>
        <function-ref name="led0Toggle" scoped="" ref="0x10d419ac0"/>
        <function-ref name="led1On" scoped="" ref="0x10d419c48"/>
        <function-ref name="led1Toggle" scoped="" ref="0x10d419dd0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x10d418020"/>
        <function-ref name="get" scoped="" ref="0x10d4181a8"/>
        <function-ref name="led1Off" scoped="" ref="0x10d418330"/>
        <function-ref name="led2Off" scoped="" ref="0x10d418950"/>
        <function-ref name="set" scoped="" ref="0x10d4184b8"/>
        <function-ref name="led0On" scoped="" ref="0x10d418640"/>
        <function-ref name="led2On" scoped="" ref="0x10d4187c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x10d416ae0" loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x10d416ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d416e30"/>
        <function-ref name="isInput" scoped="" ref="0x10d410020"/>
        <function-ref name="toggle" scoped="" ref="0x10d4101a8"/>
        <function-ref name="isOutput" scoped="" ref="0x10d410330"/>
        <function-ref name="get" scoped="" ref="0x10d4104b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d410640"/>
        <function-ref name="set" scoped="" ref="0x10d4107c8"/>
        <function-ref name="clr" scoped="" ref="0x10d410950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x10d425020" loc="41:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x10d425020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d425370"/>
        <function-ref name="isInput" scoped="" ref="0x10d4254f8"/>
        <function-ref name="toggle" scoped="" ref="0x10d425680"/>
        <function-ref name="isOutput" scoped="" ref="0x10d425808"/>
        <function-ref name="get" scoped="" ref="0x10d425990"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d425b18"/>
        <function-ref name="set" scoped="" ref="0x10d425ca0"/>
        <function-ref name="clr" scoped="" ref="0x10d425e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x10d4241b0" loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x10d4241b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d424500"/>
        <function-ref name="isInput" scoped="" ref="0x10d424688"/>
        <function-ref name="toggle" scoped="" ref="0x10d424810"/>
        <function-ref name="isOutput" scoped="" ref="0x10d424998"/>
        <function-ref name="get" scoped="" ref="0x10d424b20"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d424ca8"/>
        <function-ref name="set" scoped="" ref="0x10d424e30"/>
        <function-ref name="clr" scoped="" ref="0x10d423020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x10d422460" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x10d422460"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10d4227b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x10d423378" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x10d423378"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d4236c8"/>
        <function-ref name="isInput" scoped="" ref="0x10d423850"/>
        <function-ref name="toggle" scoped="" ref="0x10d4239d8"/>
        <function-ref name="isOutput" scoped="" ref="0x10d423b60"/>
        <function-ref name="get" scoped="" ref="0x10d423ce8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d423e70"/>
        <function-ref name="set" scoped="" ref="0x10d422020"/>
        <function-ref name="clr" scoped="" ref="0x10d4221a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x10d43e978" loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x10d43e978"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d43ecc8"/>
        <function-ref name="isInput" scoped="" ref="0x10d43ee50"/>
        <function-ref name="setResistor" scoped="" ref="0x10d43d020"/>
        <function-ref name="toggle" scoped="" ref="0x10d43d1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x10d43d330"/>
        <function-ref name="getResistor" scoped="" ref="0x10d43d4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d43d640"/>
        <function-ref name="get" scoped="" ref="0x10d43d7c8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10d43d950"/>
        <function-ref name="getRaw" scoped="" ref="0x10d43dad8"/>
        <function-ref name="set" scoped="" ref="0x10d43dc60"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10d43dde8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10d43c020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10d43c2a8"/>
        <function-ref name="clr" scoped="" ref="0x10d43c430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x10d459568" loc="66:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x10d459568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d4598b8"/>
        <function-ref name="isInput" scoped="" ref="0x10d459a40"/>
        <function-ref name="setResistor" scoped="" ref="0x10d459bc8"/>
        <function-ref name="toggle" scoped="" ref="0x10d459d50"/>
        <function-ref name="isOutput" scoped="" ref="0x10d458020"/>
        <function-ref name="getResistor" scoped="" ref="0x10d4581a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d458330"/>
        <function-ref name="get" scoped="" ref="0x10d4584b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10d458640"/>
        <function-ref name="getRaw" scoped="" ref="0x10d4587c8"/>
        <function-ref name="set" scoped="" ref="0x10d458950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10d458ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10d458c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10d457020"/>
        <function-ref name="clr" scoped="" ref="0x10d4571a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SDA" ref="0x10d4a57d0" loc="145:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SDA" scoped="" ref="0x10d4a57d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d4a5b20"/>
        <function-ref name="isInput" scoped="" ref="0x10d4a5ca8"/>
        <function-ref name="setResistor" scoped="" ref="0x10d4a5e30"/>
        <function-ref name="toggle" scoped="" ref="0x10d4a4020"/>
        <function-ref name="isOutput" scoped="" ref="0x10d4a41a8"/>
        <function-ref name="getResistor" scoped="" ref="0x10d4a4330"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d4a44b8"/>
        <function-ref name="get" scoped="" ref="0x10d4a4640"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10d4a47c8"/>
        <function-ref name="getRaw" scoped="" ref="0x10d4a4950"/>
        <function-ref name="set" scoped="" ref="0x10d4a4ad8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10d4a4c60"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10d4a4de8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10d4a3120"/>
        <function-ref name="clr" scoped="" ref="0x10d4a32a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC6" ref="0x10d4e4558" loc="165:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC6" scoped="" ref="0x10d4e4558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d4e48a8"/>
        <function-ref name="isInput" scoped="" ref="0x10d4e4a30"/>
        <function-ref name="setResistor" scoped="" ref="0x10d4e4bb8"/>
        <function-ref name="toggle" scoped="" ref="0x10d4e4d40"/>
        <function-ref name="isOutput" scoped="" ref="0x10d4e3020"/>
        <function-ref name="getResistor" scoped="" ref="0x10d4e31a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d4e3330"/>
        <function-ref name="get" scoped="" ref="0x10d4e34b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10d4e3640"/>
        <function-ref name="getRaw" scoped="" ref="0x10d4e37c8"/>
        <function-ref name="set" scoped="" ref="0x10d4e3950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10d4e3ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10d4e3c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10d4e2020"/>
        <function-ref name="clr" scoped="" ref="0x10d4e21a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI0" ref="0x10d4a3660" loc="146:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI0" scoped="" ref="0x10d4a3660"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d4a39b0"/>
        <function-ref name="isInput" scoped="" ref="0x10d4a3b38"/>
        <function-ref name="setResistor" scoped="" ref="0x10d4a3cc0"/>
        <function-ref name="toggle" scoped="" ref="0x10d4a3e48"/>
        <function-ref name="isOutput" scoped="" ref="0x10d4a2020"/>
        <function-ref name="getResistor" scoped="" ref="0x10d4a21a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d4a2330"/>
        <function-ref name="get" scoped="" ref="0x10d4a24b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10d4a2640"/>
        <function-ref name="getRaw" scoped="" ref="0x10d4a27c8"/>
        <function-ref name="set" scoped="" ref="0x10d4a2950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10d4a2ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10d4a2c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10d4a1020"/>
        <function-ref name="clr" scoped="" ref="0x10d4a11a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port30" ref="0x10d455568" loc="71:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port30" scoped="" ref="0x10d455568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d4558b8"/>
        <function-ref name="isInput" scoped="" ref="0x10d455a40"/>
        <function-ref name="setResistor" scoped="" ref="0x10d455bc8"/>
        <function-ref name="toggle" scoped="" ref="0x10d455d50"/>
        <function-ref name="isOutput" scoped="" ref="0x10d454020"/>
        <function-ref name="getResistor" scoped="" ref="0x10d4541a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d454330"/>
        <function-ref name="get" scoped="" ref="0x10d4544b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10d454640"/>
        <function-ref name="getRaw" scoped="" ref="0x10d4547c8"/>
        <function-ref name="set" scoped="" ref="0x10d454950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10d454ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10d454c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10d453020"/>
        <function-ref name="clr" scoped="" ref="0x10d4531a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port42" ref="0x10d472568" loc="84:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port42" scoped="" ref="0x10d472568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d4728b8"/>
        <function-ref name="isInput" scoped="" ref="0x10d472a40"/>
        <function-ref name="setResistor" scoped="" ref="0x10d472bc8"/>
        <function-ref name="toggle" scoped="" ref="0x10d472d50"/>
        <function-ref name="isOutput" scoped="" ref="0x10d471020"/>
        <function-ref name="getResistor" scoped="" ref="0x10d4711a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d471330"/>
        <function-ref name="get" scoped="" ref="0x10d4714b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10d471640"/>
        <function-ref name="getRaw" scoped="" ref="0x10d4717c8"/>
        <function-ref name="set" scoped="" ref="0x10d471950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10d471ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10d471c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10d470020"/>
        <function-ref name="clr" scoped="" ref="0x10d4701a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port54" ref="0x10d48f568" loc="97:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port54" scoped="" ref="0x10d48f568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d48f8b8"/>
        <function-ref name="isInput" scoped="" ref="0x10d48fa40"/>
        <function-ref name="setResistor" scoped="" ref="0x10d48fbc8"/>
        <function-ref name="toggle" scoped="" ref="0x10d48fd50"/>
        <function-ref name="isOutput" scoped="" ref="0x10d48e020"/>
        <function-ref name="getResistor" scoped="" ref="0x10d48e1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d48e330"/>
        <function-ref name="get" scoped="" ref="0x10d48e4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10d48e640"/>
        <function-ref name="getRaw" scoped="" ref="0x10d48e7c8"/>
        <function-ref name="set" scoped="" ref="0x10d48e950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10d48ead8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10d48ec60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10d48d020"/>
        <function-ref name="clr" scoped="" ref="0x10d48d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port64" ref="0x10d4b1568" loc="108:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0x10d4b1568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d4b18b8"/>
        <function-ref name="isInput" scoped="" ref="0x10d4b1a40"/>
        <function-ref name="setResistor" scoped="" ref="0x10d4b1bc8"/>
        <function-ref name="toggle" scoped="" ref="0x10d4b1d50"/>
        <function-ref name="isOutput" scoped="" ref="0x10d4b0020"/>
        <function-ref name="getResistor" scoped="" ref="0x10d4b01a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d4b0330"/>
        <function-ref name="get" scoped="" ref="0x10d4b04b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10d4b0640"/>
        <function-ref name="getRaw" scoped="" ref="0x10d4b07c8"/>
        <function-ref name="set" scoped="" ref="0x10d4b0950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10d4b0ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10d4b0c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10d4af020"/>
        <function-ref name="clr" scoped="" ref="0x10d4af1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD0" ref="0x10d49d560" loc="149:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD0" scoped="" ref="0x10d49d560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d49d8b0"/>
        <function-ref name="isInput" scoped="" ref="0x10d49da38"/>
        <function-ref name="setResistor" scoped="" ref="0x10d49dbc0"/>
        <function-ref name="toggle" scoped="" ref="0x10d49dd48"/>
        <function-ref name="isOutput" scoped="" ref="0x10d49c020"/>
        <function-ref name="getResistor" scoped="" ref="0x10d49c1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d49c330"/>
        <function-ref name="get" scoped="" ref="0x10d49c4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10d49c640"/>
        <function-ref name="getRaw" scoped="" ref="0x10d49c7c8"/>
        <function-ref name="set" scoped="" ref="0x10d49c950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10d49cad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10d49cc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10d49b020"/>
        <function-ref name="clr" scoped="" ref="0x10d49b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC0" ref="0x10d4be558" loc="159:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC0" scoped="" ref="0x10d4be558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d4be8a8"/>
        <function-ref name="isInput" scoped="" ref="0x10d4bea30"/>
        <function-ref name="setResistor" scoped="" ref="0x10d4bebb8"/>
        <function-ref name="toggle" scoped="" ref="0x10d4bed40"/>
        <function-ref name="isOutput" scoped="" ref="0x10d4bd020"/>
        <function-ref name="getResistor" scoped="" ref="0x10d4bd1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d4bd330"/>
        <function-ref name="get" scoped="" ref="0x10d4bd4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10d4bd640"/>
        <function-ref name="getRaw" scoped="" ref="0x10d4bd7c8"/>
        <function-ref name="set" scoped="" ref="0x10d4bd950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10d4bdad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10d4bdc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10d4bc020"/>
        <function-ref name="clr" scoped="" ref="0x10d4bc1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSIN" ref="0x10d4dc560" loc="171:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSIN" scoped="" ref="0x10d4dc560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d4dc8b0"/>
        <function-ref name="isInput" scoped="" ref="0x10d4dca38"/>
        <function-ref name="setResistor" scoped="" ref="0x10d4dcbc0"/>
        <function-ref name="toggle" scoped="" ref="0x10d4dcd48"/>
        <function-ref name="isOutput" scoped="" ref="0x10d4db020"/>
        <function-ref name="getResistor" scoped="" ref="0x10d4db1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d4db330"/>
        <function-ref name="get" scoped="" ref="0x10d4db4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10d4db640"/>
        <function-ref name="getRaw" scoped="" ref="0x10d4db7c8"/>
        <function-ref name="set" scoped="" ref="0x10d4db950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10d4dbad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10d4dbc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10d4da020"/>
        <function-ref name="clr" scoped="" ref="0x10d4da1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x10d468568" loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x10d468568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d4688b8"/>
        <function-ref name="isInput" scoped="" ref="0x10d468a40"/>
        <function-ref name="setResistor" scoped="" ref="0x10d468bc8"/>
        <function-ref name="toggle" scoped="" ref="0x10d468d50"/>
        <function-ref name="isOutput" scoped="" ref="0x10d467020"/>
        <function-ref name="getResistor" scoped="" ref="0x10d4671a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d467330"/>
        <function-ref name="get" scoped="" ref="0x10d4674b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10d467640"/>
        <function-ref name="getRaw" scoped="" ref="0x10d4677c8"/>
        <function-ref name="set" scoped="" ref="0x10d467950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10d467ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10d467c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10d466020"/>
        <function-ref name="clr" scoped="" ref="0x10d4661a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD0" ref="0x10d49b560" loc="150:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD0" scoped="" ref="0x10d49b560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d49b8b0"/>
        <function-ref name="isInput" scoped="" ref="0x10d49ba38"/>
        <function-ref name="setResistor" scoped="" ref="0x10d49bbc0"/>
        <function-ref name="toggle" scoped="" ref="0x10d49bd48"/>
        <function-ref name="isOutput" scoped="" ref="0x10d4cc020"/>
        <function-ref name="getResistor" scoped="" ref="0x10d4cc1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d4cc330"/>
        <function-ref name="get" scoped="" ref="0x10d4cc4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10d4cc640"/>
        <function-ref name="getRaw" scoped="" ref="0x10d4cc7c8"/>
        <function-ref name="set" scoped="" ref="0x10d4cc950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10d4ccad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10d4ccc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10d4cb020"/>
        <function-ref name="clr" scoped="" ref="0x10d4cb1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x10d464568" loc="61:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x10d464568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d4648b8"/>
        <function-ref name="isInput" scoped="" ref="0x10d464a40"/>
        <function-ref name="setResistor" scoped="" ref="0x10d464bc8"/>
        <function-ref name="toggle" scoped="" ref="0x10d464d50"/>
        <function-ref name="isOutput" scoped="" ref="0x10d463020"/>
        <function-ref name="getResistor" scoped="" ref="0x10d4631a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d463330"/>
        <function-ref name="get" scoped="" ref="0x10d4634b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10d463640"/>
        <function-ref name="getRaw" scoped="" ref="0x10d4637c8"/>
        <function-ref name="set" scoped="" ref="0x10d463950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10d463ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10d463c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10d462020"/>
        <function-ref name="clr" scoped="" ref="0x10d4621a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port33" ref="0x10d480568" loc="74:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port33" scoped="" ref="0x10d480568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d4808b8"/>
        <function-ref name="isInput" scoped="" ref="0x10d480a40"/>
        <function-ref name="setResistor" scoped="" ref="0x10d480bc8"/>
        <function-ref name="toggle" scoped="" ref="0x10d480d50"/>
        <function-ref name="isOutput" scoped="" ref="0x10d47f020"/>
        <function-ref name="getResistor" scoped="" ref="0x10d47f1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d47f330"/>
        <function-ref name="get" scoped="" ref="0x10d47f4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10d47f640"/>
        <function-ref name="getRaw" scoped="" ref="0x10d47f7c8"/>
        <function-ref name="set" scoped="" ref="0x10d47f950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10d47fad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10d47fc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10d47e020"/>
        <function-ref name="clr" scoped="" ref="0x10d47e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port45" ref="0x10d46c568" loc="87:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port45" scoped="" ref="0x10d46c568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d46c8b8"/>
        <function-ref name="isInput" scoped="" ref="0x10d46ca40"/>
        <function-ref name="setResistor" scoped="" ref="0x10d46cbc8"/>
        <function-ref name="toggle" scoped="" ref="0x10d46cd50"/>
        <function-ref name="isOutput" scoped="" ref="0x10d46b020"/>
        <function-ref name="getResistor" scoped="" ref="0x10d46b1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d46b330"/>
        <function-ref name="get" scoped="" ref="0x10d46b4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10d46b640"/>
        <function-ref name="getRaw" scoped="" ref="0x10d46b7c8"/>
        <function-ref name="set" scoped="" ref="0x10d46b950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10d46bad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10d46bc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10d46a020"/>
        <function-ref name="clr" scoped="" ref="0x10d46a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port57" ref="0x10d489568" loc="100:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port57" scoped="" ref="0x10d489568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d4898b8"/>
        <function-ref name="isInput" scoped="" ref="0x10d489a40"/>
        <function-ref name="setResistor" scoped="" ref="0x10d489bc8"/>
        <function-ref name="toggle" scoped="" ref="0x10d489d50"/>
        <function-ref name="isOutput" scoped="" ref="0x10d488020"/>
        <function-ref name="getResistor" scoped="" ref="0x10d4881a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d488330"/>
        <function-ref name="get" scoped="" ref="0x10d4884b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10d488640"/>
        <function-ref name="getRaw" scoped="" ref="0x10d4887c8"/>
        <function-ref name="set" scoped="" ref="0x10d488950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10d488ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10d488c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10d487020"/>
        <function-ref name="clr" scoped="" ref="0x10d4871a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port67" ref="0x10d4ab568" loc="111:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0x10d4ab568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d4ab8b8"/>
        <function-ref name="isInput" scoped="" ref="0x10d4aba40"/>
        <function-ref name="setResistor" scoped="" ref="0x10d4abbc8"/>
        <function-ref name="toggle" scoped="" ref="0x10d4abd50"/>
        <function-ref name="isOutput" scoped="" ref="0x10d4aa020"/>
        <function-ref name="getResistor" scoped="" ref="0x10d4aa1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d4aa330"/>
        <function-ref name="get" scoped="" ref="0x10d4aa4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10d4aa640"/>
        <function-ref name="getRaw" scoped="" ref="0x10d4aa7c8"/>
        <function-ref name="set" scoped="" ref="0x10d4aa950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10d4aaad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10d4aac60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10d4a9020"/>
        <function-ref name="clr" scoped="" ref="0x10d4a91a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x10d442c88" loc="51:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x10d442c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d441020"/>
        <function-ref name="isInput" scoped="" ref="0x10d4411a8"/>
        <function-ref name="setResistor" scoped="" ref="0x10d441330"/>
        <function-ref name="toggle" scoped="" ref="0x10d4414b8"/>
        <function-ref name="isOutput" scoped="" ref="0x10d441640"/>
        <function-ref name="getResistor" scoped="" ref="0x10d4417c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d441950"/>
        <function-ref name="get" scoped="" ref="0x10d441ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10d441c60"/>
        <function-ref name="getRaw" scoped="" ref="0x10d441de8"/>
        <function-ref name="set" scoped="" ref="0x10d440020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10d4401a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10d440330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10d4405b8"/>
        <function-ref name="clr" scoped="" ref="0x10d440740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x10d45d568" loc="64:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x10d45d568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d45d9b8"/>
        <function-ref name="isInput" scoped="" ref="0x10d45db40"/>
        <function-ref name="setResistor" scoped="" ref="0x10d45dcc8"/>
        <function-ref name="toggle" scoped="" ref="0x10d45de50"/>
        <function-ref name="isOutput" scoped="" ref="0x10d45c020"/>
        <function-ref name="getResistor" scoped="" ref="0x10d45c1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d45c330"/>
        <function-ref name="get" scoped="" ref="0x10d45c4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10d45c640"/>
        <function-ref name="getRaw" scoped="" ref="0x10d45c7c8"/>
        <function-ref name="set" scoped="" ref="0x10d45c950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10d45cad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10d45cc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10d45b020"/>
        <function-ref name="clr" scoped="" ref="0x10d45b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port36" ref="0x10d47a568" loc="77:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port36" scoped="" ref="0x10d47a568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d47a8b8"/>
        <function-ref name="isInput" scoped="" ref="0x10d47aa40"/>
        <function-ref name="setResistor" scoped="" ref="0x10d47abc8"/>
        <function-ref name="toggle" scoped="" ref="0x10d47ad50"/>
        <function-ref name="isOutput" scoped="" ref="0x10d479020"/>
        <function-ref name="getResistor" scoped="" ref="0x10d4791a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d479330"/>
        <function-ref name="get" scoped="" ref="0x10d4794b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10d479640"/>
        <function-ref name="getRaw" scoped="" ref="0x10d4797c8"/>
        <function-ref name="set" scoped="" ref="0x10d479950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10d479ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10d479c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10d478020"/>
        <function-ref name="clr" scoped="" ref="0x10d4781a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO0" ref="0x10d4a7970" loc="144:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO0" scoped="" ref="0x10d4a7970"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d4a7cc0"/>
        <function-ref name="isInput" scoped="" ref="0x10d4a7e48"/>
        <function-ref name="setResistor" scoped="" ref="0x10d4a6020"/>
        <function-ref name="toggle" scoped="" ref="0x10d4a61a8"/>
        <function-ref name="isOutput" scoped="" ref="0x10d4a6330"/>
        <function-ref name="getResistor" scoped="" ref="0x10d4a64b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d4a6640"/>
        <function-ref name="get" scoped="" ref="0x10d4a67c8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10d4a6950"/>
        <function-ref name="getRaw" scoped="" ref="0x10d4a6ad8"/>
        <function-ref name="set" scoped="" ref="0x10d4a6c60"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10d4a6de8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10d4a5020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10d4a52a8"/>
        <function-ref name="clr" scoped="" ref="0x10d4a5430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC3" ref="0x10d4b8558" loc="162:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC3" scoped="" ref="0x10d4b8558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d4b88a8"/>
        <function-ref name="isInput" scoped="" ref="0x10d4b8a30"/>
        <function-ref name="setResistor" scoped="" ref="0x10d4b8bb8"/>
        <function-ref name="toggle" scoped="" ref="0x10d4b8d40"/>
        <function-ref name="isOutput" scoped="" ref="0x10d4b7020"/>
        <function-ref name="getResistor" scoped="" ref="0x10d4b71a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d4b7330"/>
        <function-ref name="get" scoped="" ref="0x10d4b74b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10d4b7640"/>
        <function-ref name="getRaw" scoped="" ref="0x10d4b77c8"/>
        <function-ref name="set" scoped="" ref="0x10d4b7950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10d4b7ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10d4b7c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10d4b6020"/>
        <function-ref name="clr" scoped="" ref="0x10d4b61a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC1" ref="0x10d4de558" loc="169:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC1" scoped="" ref="0x10d4de558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d4de8a8"/>
        <function-ref name="isInput" scoped="" ref="0x10d4dea30"/>
        <function-ref name="setResistor" scoped="" ref="0x10d4debb8"/>
        <function-ref name="toggle" scoped="" ref="0x10d4ded40"/>
        <function-ref name="isOutput" scoped="" ref="0x10d4dd020"/>
        <function-ref name="getResistor" scoped="" ref="0x10d4dd1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d4dd330"/>
        <function-ref name="get" scoped="" ref="0x10d4dd4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10d4dd640"/>
        <function-ref name="getRaw" scoped="" ref="0x10d4dd7c8"/>
        <function-ref name="set" scoped="" ref="0x10d4dd950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10d4ddad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10d4ddc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10d4dc020"/>
        <function-ref name="clr" scoped="" ref="0x10d4dc1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK1" ref="0x10d4c4560" loc="155:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK1" scoped="" ref="0x10d4c4560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d4c48b0"/>
        <function-ref name="isInput" scoped="" ref="0x10d4c4a38"/>
        <function-ref name="setResistor" scoped="" ref="0x10d4c4bc0"/>
        <function-ref name="toggle" scoped="" ref="0x10d4c4d48"/>
        <function-ref name="isOutput" scoped="" ref="0x10d4c3020"/>
        <function-ref name="getResistor" scoped="" ref="0x10d4c31a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d4c3330"/>
        <function-ref name="get" scoped="" ref="0x10d4c34b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10d4c3640"/>
        <function-ref name="getRaw" scoped="" ref="0x10d4c37c8"/>
        <function-ref name="set" scoped="" ref="0x10d4c3950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10d4c3ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10d4c3c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10d4c2020"/>
        <function-ref name="clr" scoped="" ref="0x10d4c21a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port40" ref="0x10d476568" loc="82:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port40" scoped="" ref="0x10d476568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d476ab8"/>
        <function-ref name="isInput" scoped="" ref="0x10d476c40"/>
        <function-ref name="setResistor" scoped="" ref="0x10d476dc8"/>
        <function-ref name="toggle" scoped="" ref="0x10d475020"/>
        <function-ref name="isOutput" scoped="" ref="0x10d4751a8"/>
        <function-ref name="getResistor" scoped="" ref="0x10d475330"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d4754b8"/>
        <function-ref name="get" scoped="" ref="0x10d475640"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10d4757c8"/>
        <function-ref name="getRaw" scoped="" ref="0x10d475950"/>
        <function-ref name="set" scoped="" ref="0x10d475ad8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10d475c60"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10d475de8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10d474120"/>
        <function-ref name="clr" scoped="" ref="0x10d4742a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port52" ref="0x10d493568" loc="95:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port52" scoped="" ref="0x10d493568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d4938b8"/>
        <function-ref name="isInput" scoped="" ref="0x10d493a40"/>
        <function-ref name="setResistor" scoped="" ref="0x10d493bc8"/>
        <function-ref name="toggle" scoped="" ref="0x10d493d50"/>
        <function-ref name="isOutput" scoped="" ref="0x10d492020"/>
        <function-ref name="getResistor" scoped="" ref="0x10d4921a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d492330"/>
        <function-ref name="get" scoped="" ref="0x10d4924b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10d492640"/>
        <function-ref name="getRaw" scoped="" ref="0x10d4927c8"/>
        <function-ref name="set" scoped="" ref="0x10d492950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10d492ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10d492c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10d491020"/>
        <function-ref name="clr" scoped="" ref="0x10d4911a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port62" ref="0x10d483568" loc="106:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0x10d483568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d4838b8"/>
        <function-ref name="isInput" scoped="" ref="0x10d483a40"/>
        <function-ref name="setResistor" scoped="" ref="0x10d483bc8"/>
        <function-ref name="toggle" scoped="" ref="0x10d483d50"/>
        <function-ref name="isOutput" scoped="" ref="0x10d482020"/>
        <function-ref name="getResistor" scoped="" ref="0x10d4821a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d482330"/>
        <function-ref name="get" scoped="" ref="0x10d4824b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10d482640"/>
        <function-ref name="getRaw" scoped="" ref="0x10d4827c8"/>
        <function-ref name="set" scoped="" ref="0x10d482950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10d482ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10d482c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10d4b3020"/>
        <function-ref name="clr" scoped="" ref="0x10d4b31a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC4" ref="0x10d4b6558" loc="163:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC4" scoped="" ref="0x10d4b6558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d4b68a8"/>
        <function-ref name="isInput" scoped="" ref="0x10d4b6a30"/>
        <function-ref name="setResistor" scoped="" ref="0x10d4b6bb8"/>
        <function-ref name="toggle" scoped="" ref="0x10d4b6d40"/>
        <function-ref name="isOutput" scoped="" ref="0x10d4b5020"/>
        <function-ref name="getResistor" scoped="" ref="0x10d4b51a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d4b5330"/>
        <function-ref name="get" scoped="" ref="0x10d4b54b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10d4b5640"/>
        <function-ref name="getRaw" scoped="" ref="0x10d4b57c8"/>
        <function-ref name="set" scoped="" ref="0x10d4b5950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10d4b5ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10d4b5c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10d4b4020"/>
        <function-ref name="clr" scoped="" ref="0x10d4b41a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE1" ref="0x10d4cb558" loc="152:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE1" scoped="" ref="0x10d4cb558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d4cb8a8"/>
        <function-ref name="isInput" scoped="" ref="0x10d4cba30"/>
        <function-ref name="setResistor" scoped="" ref="0x10d4cbbb8"/>
        <function-ref name="toggle" scoped="" ref="0x10d4cbd40"/>
        <function-ref name="isOutput" scoped="" ref="0x10d4c9020"/>
        <function-ref name="getResistor" scoped="" ref="0x10d4c91a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d4c9330"/>
        <function-ref name="get" scoped="" ref="0x10d4c94b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10d4c9640"/>
        <function-ref name="getRaw" scoped="" ref="0x10d4c97c8"/>
        <function-ref name="set" scoped="" ref="0x10d4c9950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10d4c9ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10d4c9c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10d4c8020"/>
        <function-ref name="clr" scoped="" ref="0x10d4c81a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x10d43c7f0" loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x10d43c7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d43cb40"/>
        <function-ref name="isInput" scoped="" ref="0x10d43ccc8"/>
        <function-ref name="setResistor" scoped="" ref="0x10d43ce50"/>
        <function-ref name="toggle" scoped="" ref="0x10d43b020"/>
        <function-ref name="isOutput" scoped="" ref="0x10d43b1a8"/>
        <function-ref name="getResistor" scoped="" ref="0x10d43b330"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d43b4b8"/>
        <function-ref name="get" scoped="" ref="0x10d43b640"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10d43b7c8"/>
        <function-ref name="getRaw" scoped="" ref="0x10d43b950"/>
        <function-ref name="set" scoped="" ref="0x10d43bad8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10d43bc60"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10d43bde8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10d43a120"/>
        <function-ref name="clr" scoped="" ref="0x10d43a2a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x10d457568" loc="67:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x10d457568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d4578b8"/>
        <function-ref name="isInput" scoped="" ref="0x10d457a40"/>
        <function-ref name="setResistor" scoped="" ref="0x10d457bc8"/>
        <function-ref name="toggle" scoped="" ref="0x10d457d50"/>
        <function-ref name="isOutput" scoped="" ref="0x10d456020"/>
        <function-ref name="getResistor" scoped="" ref="0x10d4561a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d456330"/>
        <function-ref name="get" scoped="" ref="0x10d4564b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10d456640"/>
        <function-ref name="getRaw" scoped="" ref="0x10d4567c8"/>
        <function-ref name="set" scoped="" ref="0x10d456950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10d456ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10d456c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10d455020"/>
        <function-ref name="clr" scoped="" ref="0x10d4551a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port60" ref="0x10d487568" loc="104:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0x10d487568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d4878b8"/>
        <function-ref name="isInput" scoped="" ref="0x10d487a40"/>
        <function-ref name="setResistor" scoped="" ref="0x10d487bc8"/>
        <function-ref name="toggle" scoped="" ref="0x10d487d50"/>
        <function-ref name="isOutput" scoped="" ref="0x10d486020"/>
        <function-ref name="getResistor" scoped="" ref="0x10d4861a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d486330"/>
        <function-ref name="get" scoped="" ref="0x10d4864b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10d486640"/>
        <function-ref name="getRaw" scoped="" ref="0x10d4867c8"/>
        <function-ref name="set" scoped="" ref="0x10d486950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10d486ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10d486c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10d485020"/>
        <function-ref name="clr" scoped="" ref="0x10d4851a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port31" ref="0x10d453568" loc="72:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port31" scoped="" ref="0x10d453568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d4538b8"/>
        <function-ref name="isInput" scoped="" ref="0x10d453a40"/>
        <function-ref name="setResistor" scoped="" ref="0x10d453bc8"/>
        <function-ref name="toggle" scoped="" ref="0x10d453d50"/>
        <function-ref name="isOutput" scoped="" ref="0x10d452020"/>
        <function-ref name="getResistor" scoped="" ref="0x10d4521a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d452330"/>
        <function-ref name="get" scoped="" ref="0x10d4524b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10d452640"/>
        <function-ref name="getRaw" scoped="" ref="0x10d4527c8"/>
        <function-ref name="set" scoped="" ref="0x10d452950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10d452ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10d452c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10d451020"/>
        <function-ref name="clr" scoped="" ref="0x10d4511a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port43" ref="0x10d470568" loc="85:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port43" scoped="" ref="0x10d470568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d4708b8"/>
        <function-ref name="isInput" scoped="" ref="0x10d470a40"/>
        <function-ref name="setResistor" scoped="" ref="0x10d470bc8"/>
        <function-ref name="toggle" scoped="" ref="0x10d470d50"/>
        <function-ref name="isOutput" scoped="" ref="0x10d46f020"/>
        <function-ref name="getResistor" scoped="" ref="0x10d46f1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d46f330"/>
        <function-ref name="get" scoped="" ref="0x10d46f4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10d46f640"/>
        <function-ref name="getRaw" scoped="" ref="0x10d46f7c8"/>
        <function-ref name="set" scoped="" ref="0x10d46f950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10d46fad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10d46fc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10d46e020"/>
        <function-ref name="clr" scoped="" ref="0x10d46e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port55" ref="0x10d48d568" loc="98:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port55" scoped="" ref="0x10d48d568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d48d8b8"/>
        <function-ref name="isInput" scoped="" ref="0x10d48da40"/>
        <function-ref name="setResistor" scoped="" ref="0x10d48dbc8"/>
        <function-ref name="toggle" scoped="" ref="0x10d48dd50"/>
        <function-ref name="isOutput" scoped="" ref="0x10d48c020"/>
        <function-ref name="getResistor" scoped="" ref="0x10d48c1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d48c330"/>
        <function-ref name="get" scoped="" ref="0x10d48c4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10d48c640"/>
        <function-ref name="getRaw" scoped="" ref="0x10d48c7c8"/>
        <function-ref name="set" scoped="" ref="0x10d48c950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10d48cad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10d48cc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10d48b020"/>
        <function-ref name="clr" scoped="" ref="0x10d48b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port65" ref="0x10d4af568" loc="109:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0x10d4af568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d4af8b8"/>
        <function-ref name="isInput" scoped="" ref="0x10d4afa40"/>
        <function-ref name="setResistor" scoped="" ref="0x10d4afbc8"/>
        <function-ref name="toggle" scoped="" ref="0x10d4afd50"/>
        <function-ref name="isOutput" scoped="" ref="0x10d4ae020"/>
        <function-ref name="getResistor" scoped="" ref="0x10d4ae1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d4ae330"/>
        <function-ref name="get" scoped="" ref="0x10d4ae4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10d4ae640"/>
        <function-ref name="getRaw" scoped="" ref="0x10d4ae7c8"/>
        <function-ref name="set" scoped="" ref="0x10d4ae950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10d4aead8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10d4aec60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10d4ad020"/>
        <function-ref name="clr" scoped="" ref="0x10d4ad1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI1" ref="0x10d4c6560" loc="154:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI1" scoped="" ref="0x10d4c6560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d4c68b0"/>
        <function-ref name="isInput" scoped="" ref="0x10d4c6a38"/>
        <function-ref name="setResistor" scoped="" ref="0x10d4c6bc0"/>
        <function-ref name="toggle" scoped="" ref="0x10d4c6d48"/>
        <function-ref name="isOutput" scoped="" ref="0x10d4c5020"/>
        <function-ref name="getResistor" scoped="" ref="0x10d4c51a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d4c5330"/>
        <function-ref name="get" scoped="" ref="0x10d4c54b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10d4c5640"/>
        <function-ref name="getRaw" scoped="" ref="0x10d4c57c8"/>
        <function-ref name="set" scoped="" ref="0x10d4c5950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10d4c5ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10d4c5c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10d4c4020"/>
        <function-ref name="clr" scoped="" ref="0x10d4c41a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x10d44e020" loc="49:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x10d44e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d44e370"/>
        <function-ref name="isInput" scoped="" ref="0x10d44e4f8"/>
        <function-ref name="setResistor" scoped="" ref="0x10d44e680"/>
        <function-ref name="toggle" scoped="" ref="0x10d44e808"/>
        <function-ref name="isOutput" scoped="" ref="0x10d44e990"/>
        <function-ref name="getResistor" scoped="" ref="0x10d44eb18"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d44eca0"/>
        <function-ref name="get" scoped="" ref="0x10d44ee28"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10d44d020"/>
        <function-ref name="getRaw" scoped="" ref="0x10d44d1a8"/>
        <function-ref name="set" scoped="" ref="0x10d44d330"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10d44d4b8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10d44d640"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10d44d8c8"/>
        <function-ref name="clr" scoped="" ref="0x10d44da50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x10d462568" loc="62:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x10d462568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d4628b8"/>
        <function-ref name="isInput" scoped="" ref="0x10d462a40"/>
        <function-ref name="setResistor" scoped="" ref="0x10d462bc8"/>
        <function-ref name="toggle" scoped="" ref="0x10d462d50"/>
        <function-ref name="isOutput" scoped="" ref="0x10d460020"/>
        <function-ref name="getResistor" scoped="" ref="0x10d4601a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d460330"/>
        <function-ref name="get" scoped="" ref="0x10d4604b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10d460640"/>
        <function-ref name="getRaw" scoped="" ref="0x10d4607c8"/>
        <function-ref name="set" scoped="" ref="0x10d460950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10d460ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10d460c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10d45f020"/>
        <function-ref name="clr" scoped="" ref="0x10d45f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port34" ref="0x10d47e568" loc="75:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port34" scoped="" ref="0x10d47e568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d47e8b8"/>
        <function-ref name="isInput" scoped="" ref="0x10d47ea40"/>
        <function-ref name="setResistor" scoped="" ref="0x10d47ebc8"/>
        <function-ref name="toggle" scoped="" ref="0x10d47ed50"/>
        <function-ref name="isOutput" scoped="" ref="0x10d47d020"/>
        <function-ref name="getResistor" scoped="" ref="0x10d47d1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d47d330"/>
        <function-ref name="get" scoped="" ref="0x10d47d4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10d47d640"/>
        <function-ref name="getRaw" scoped="" ref="0x10d47d7c8"/>
        <function-ref name="set" scoped="" ref="0x10d47d950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10d47dad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10d47dc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10d47c020"/>
        <function-ref name="clr" scoped="" ref="0x10d47c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port46" ref="0x10d46a568" loc="88:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port46" scoped="" ref="0x10d46a568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d46a8b8"/>
        <function-ref name="isInput" scoped="" ref="0x10d46aa40"/>
        <function-ref name="setResistor" scoped="" ref="0x10d46abc8"/>
        <function-ref name="toggle" scoped="" ref="0x10d46ad50"/>
        <function-ref name="isOutput" scoped="" ref="0x10d469020"/>
        <function-ref name="getResistor" scoped="" ref="0x10d4691a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d469330"/>
        <function-ref name="get" scoped="" ref="0x10d4694b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10d469640"/>
        <function-ref name="getRaw" scoped="" ref="0x10d4697c8"/>
        <function-ref name="set" scoped="" ref="0x10d469950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10d469ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10d469c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10d49a020"/>
        <function-ref name="clr" scoped="" ref="0x10d49a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD1" ref="0x10d4c2560" loc="156:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD1" scoped="" ref="0x10d4c2560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d4c28b0"/>
        <function-ref name="isInput" scoped="" ref="0x10d4c2a38"/>
        <function-ref name="setResistor" scoped="" ref="0x10d4c2bc0"/>
        <function-ref name="toggle" scoped="" ref="0x10d4c2d48"/>
        <function-ref name="isOutput" scoped="" ref="0x10d4c1020"/>
        <function-ref name="getResistor" scoped="" ref="0x10d4c11a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d4c1330"/>
        <function-ref name="get" scoped="" ref="0x10d4c14b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10d4c1640"/>
        <function-ref name="getRaw" scoped="" ref="0x10d4c17c8"/>
        <function-ref name="set" scoped="" ref="0x10d4c1950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10d4c1ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10d4c1c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10d4c0020"/>
        <function-ref name="clr" scoped="" ref="0x10d4c01a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC1" ref="0x10d4bc558" loc="160:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC1" scoped="" ref="0x10d4bc558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d4bc8a8"/>
        <function-ref name="isInput" scoped="" ref="0x10d4bca30"/>
        <function-ref name="setResistor" scoped="" ref="0x10d4bcbb8"/>
        <function-ref name="toggle" scoped="" ref="0x10d4bcd40"/>
        <function-ref name="isOutput" scoped="" ref="0x10d4bb020"/>
        <function-ref name="getResistor" scoped="" ref="0x10d4bb1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d4bb330"/>
        <function-ref name="get" scoped="" ref="0x10d4bb4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10d4bb640"/>
        <function-ref name="getRaw" scoped="" ref="0x10d4bb7c8"/>
        <function-ref name="set" scoped="" ref="0x10d4bb950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10d4bbad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10d4bbc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10d4ba020"/>
        <function-ref name="clr" scoped="" ref="0x10d4ba1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC7" ref="0x10d4e2558" loc="166:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC7" scoped="" ref="0x10d4e2558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d4e28a8"/>
        <function-ref name="isInput" scoped="" ref="0x10d4e2a30"/>
        <function-ref name="setResistor" scoped="" ref="0x10d4e2bb8"/>
        <function-ref name="toggle" scoped="" ref="0x10d4e2d40"/>
        <function-ref name="isOutput" scoped="" ref="0x10d4e1020"/>
        <function-ref name="getResistor" scoped="" ref="0x10d4e11a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d4e1330"/>
        <function-ref name="get" scoped="" ref="0x10d4e14b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10d4e1640"/>
        <function-ref name="getRaw" scoped="" ref="0x10d4e17c8"/>
        <function-ref name="set" scoped="" ref="0x10d4e1950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10d4e1ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10d4e1c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10d4e0020"/>
        <function-ref name="clr" scoped="" ref="0x10d4e01a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port50" ref="0x10d498568" loc="93:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port50" scoped="" ref="0x10d498568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d4988b8"/>
        <function-ref name="isInput" scoped="" ref="0x10d498a40"/>
        <function-ref name="setResistor" scoped="" ref="0x10d498bc8"/>
        <function-ref name="toggle" scoped="" ref="0x10d498d50"/>
        <function-ref name="isOutput" scoped="" ref="0x10d497020"/>
        <function-ref name="getResistor" scoped="" ref="0x10d4971a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d497330"/>
        <function-ref name="get" scoped="" ref="0x10d4974b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10d497640"/>
        <function-ref name="getRaw" scoped="" ref="0x10d4977c8"/>
        <function-ref name="set" scoped="" ref="0x10d497950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10d497ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10d497c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10d496020"/>
        <function-ref name="clr" scoped="" ref="0x10d4961a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD1" ref="0x10d4c0560" loc="157:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD1" scoped="" ref="0x10d4c0560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d4c08b0"/>
        <function-ref name="isInput" scoped="" ref="0x10d4c0a38"/>
        <function-ref name="setResistor" scoped="" ref="0x10d4c0bc0"/>
        <function-ref name="toggle" scoped="" ref="0x10d4c0d48"/>
        <function-ref name="isOutput" scoped="" ref="0x10d4bf020"/>
        <function-ref name="getResistor" scoped="" ref="0x10d4bf1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d4bf330"/>
        <function-ref name="get" scoped="" ref="0x10d4bf4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10d4bf640"/>
        <function-ref name="getRaw" scoped="" ref="0x10d4bf7c8"/>
        <function-ref name="set" scoped="" ref="0x10d4bf950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10d4bfad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10d4bfc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10d4be020"/>
        <function-ref name="clr" scoped="" ref="0x10d4be1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x10d440b00" loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x10d440b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d440e50"/>
        <function-ref name="isInput" scoped="" ref="0x10d43f020"/>
        <function-ref name="setResistor" scoped="" ref="0x10d43f1a8"/>
        <function-ref name="toggle" scoped="" ref="0x10d43f330"/>
        <function-ref name="isOutput" scoped="" ref="0x10d43f4b8"/>
        <function-ref name="getResistor" scoped="" ref="0x10d43f640"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d43f7c8"/>
        <function-ref name="get" scoped="" ref="0x10d43f950"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10d43fad8"/>
        <function-ref name="getRaw" scoped="" ref="0x10d43fc60"/>
        <function-ref name="set" scoped="" ref="0x10d43fde8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10d43e020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10d43e1a8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10d43e430"/>
        <function-ref name="clr" scoped="" ref="0x10d43e5b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x10d45b568" loc="65:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x10d45b568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d45b8b8"/>
        <function-ref name="isInput" scoped="" ref="0x10d45ba40"/>
        <function-ref name="setResistor" scoped="" ref="0x10d45bbc8"/>
        <function-ref name="toggle" scoped="" ref="0x10d45bd50"/>
        <function-ref name="isOutput" scoped="" ref="0x10d45a020"/>
        <function-ref name="getResistor" scoped="" ref="0x10d45a1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d45a330"/>
        <function-ref name="get" scoped="" ref="0x10d45a4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10d45a640"/>
        <function-ref name="getRaw" scoped="" ref="0x10d45a7c8"/>
        <function-ref name="set" scoped="" ref="0x10d45a950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10d45aad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10d45ac60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10d459020"/>
        <function-ref name="clr" scoped="" ref="0x10d4591a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port37" ref="0x10d478568" loc="78:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port37" scoped="" ref="0x10d478568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d4788b8"/>
        <function-ref name="isInput" scoped="" ref="0x10d478a40"/>
        <function-ref name="setResistor" scoped="" ref="0x10d478bc8"/>
        <function-ref name="toggle" scoped="" ref="0x10d478d50"/>
        <function-ref name="isOutput" scoped="" ref="0x10d477020"/>
        <function-ref name="getResistor" scoped="" ref="0x10d4771a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d477330"/>
        <function-ref name="get" scoped="" ref="0x10d4774b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10d477640"/>
        <function-ref name="getRaw" scoped="" ref="0x10d4777c8"/>
        <function-ref name="set" scoped="" ref="0x10d477950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10d477ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10d477c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10d476020"/>
        <function-ref name="clr" scoped="" ref="0x10d4761a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO1" ref="0x10d4c8560" loc="153:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO1" scoped="" ref="0x10d4c8560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d4c88b0"/>
        <function-ref name="isInput" scoped="" ref="0x10d4c8a38"/>
        <function-ref name="setResistor" scoped="" ref="0x10d4c8bc0"/>
        <function-ref name="toggle" scoped="" ref="0x10d4c8d48"/>
        <function-ref name="isOutput" scoped="" ref="0x10d4c7020"/>
        <function-ref name="getResistor" scoped="" ref="0x10d4c71a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d4c7330"/>
        <function-ref name="get" scoped="" ref="0x10d4c74b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10d4c7640"/>
        <function-ref name="getRaw" scoped="" ref="0x10d4c77c8"/>
        <function-ref name="set" scoped="" ref="0x10d4c7950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10d4c7ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10d4c7c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10d4c6020"/>
        <function-ref name="clr" scoped="" ref="0x10d4c61a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC5" ref="0x10d4b4558" loc="164:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC5" scoped="" ref="0x10d4b4558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d4b48a8"/>
        <function-ref name="isInput" scoped="" ref="0x10d4b4a30"/>
        <function-ref name="setResistor" scoped="" ref="0x10d4b4bb8"/>
        <function-ref name="toggle" scoped="" ref="0x10d4b4d40"/>
        <function-ref name="isOutput" scoped="" ref="0x10d4e5020"/>
        <function-ref name="getResistor" scoped="" ref="0x10d4e51a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d4e5330"/>
        <function-ref name="get" scoped="" ref="0x10d4e54b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10d4e5640"/>
        <function-ref name="getRaw" scoped="" ref="0x10d4e57c8"/>
        <function-ref name="set" scoped="" ref="0x10d4e5950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10d4e5ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10d4e5c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10d4e4020"/>
        <function-ref name="clr" scoped="" ref="0x10d4e41a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port41" ref="0x10d474668" loc="83:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port41" scoped="" ref="0x10d474668"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d4749b8"/>
        <function-ref name="isInput" scoped="" ref="0x10d474b40"/>
        <function-ref name="setResistor" scoped="" ref="0x10d474cc8"/>
        <function-ref name="toggle" scoped="" ref="0x10d474e50"/>
        <function-ref name="isOutput" scoped="" ref="0x10d473020"/>
        <function-ref name="getResistor" scoped="" ref="0x10d4731a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d473330"/>
        <function-ref name="get" scoped="" ref="0x10d4734b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10d473640"/>
        <function-ref name="getRaw" scoped="" ref="0x10d4737c8"/>
        <function-ref name="set" scoped="" ref="0x10d473950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10d473ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10d473c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10d472020"/>
        <function-ref name="clr" scoped="" ref="0x10d4721a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port53" ref="0x10d491568" loc="96:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port53" scoped="" ref="0x10d491568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d4918b8"/>
        <function-ref name="isInput" scoped="" ref="0x10d491a40"/>
        <function-ref name="setResistor" scoped="" ref="0x10d491bc8"/>
        <function-ref name="toggle" scoped="" ref="0x10d491d50"/>
        <function-ref name="isOutput" scoped="" ref="0x10d490020"/>
        <function-ref name="getResistor" scoped="" ref="0x10d4901a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d490330"/>
        <function-ref name="get" scoped="" ref="0x10d4904b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10d490640"/>
        <function-ref name="getRaw" scoped="" ref="0x10d4907c8"/>
        <function-ref name="set" scoped="" ref="0x10d490950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10d490ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10d490c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10d48f020"/>
        <function-ref name="clr" scoped="" ref="0x10d48f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port63" ref="0x10d4b3568" loc="107:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0x10d4b3568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d4b38b8"/>
        <function-ref name="isInput" scoped="" ref="0x10d4b3a40"/>
        <function-ref name="setResistor" scoped="" ref="0x10d4b3bc8"/>
        <function-ref name="toggle" scoped="" ref="0x10d4b3d50"/>
        <function-ref name="isOutput" scoped="" ref="0x10d4b2020"/>
        <function-ref name="getResistor" scoped="" ref="0x10d4b21a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d4b2330"/>
        <function-ref name="get" scoped="" ref="0x10d4b24b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10d4b2640"/>
        <function-ref name="getRaw" scoped="" ref="0x10d4b27c8"/>
        <function-ref name="set" scoped="" ref="0x10d4b2950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10d4b2ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10d4b2c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10d4b1020"/>
        <function-ref name="clr" scoped="" ref="0x10d4b11a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x10d43a668" loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x10d43a668"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d43a9b8"/>
        <function-ref name="isInput" scoped="" ref="0x10d43ab40"/>
        <function-ref name="setResistor" scoped="" ref="0x10d43acc8"/>
        <function-ref name="toggle" scoped="" ref="0x10d43ae50"/>
        <function-ref name="isOutput" scoped="" ref="0x10d439020"/>
        <function-ref name="getResistor" scoped="" ref="0x10d4391a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d439330"/>
        <function-ref name="get" scoped="" ref="0x10d4394b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10d439640"/>
        <function-ref name="getRaw" scoped="" ref="0x10d4397c8"/>
        <function-ref name="set" scoped="" ref="0x10d439950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10d439ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10d439c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10d468020"/>
        <function-ref name="clr" scoped="" ref="0x10d4681a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port61" ref="0x10d485568" loc="105:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0x10d485568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d4858b8"/>
        <function-ref name="isInput" scoped="" ref="0x10d485a40"/>
        <function-ref name="setResistor" scoped="" ref="0x10d485bc8"/>
        <function-ref name="toggle" scoped="" ref="0x10d485d50"/>
        <function-ref name="isOutput" scoped="" ref="0x10d484020"/>
        <function-ref name="getResistor" scoped="" ref="0x10d4841a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d484330"/>
        <function-ref name="get" scoped="" ref="0x10d4844b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10d484640"/>
        <function-ref name="getRaw" scoped="" ref="0x10d4847c8"/>
        <function-ref name="set" scoped="" ref="0x10d484950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10d484ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10d484c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10d483020"/>
        <function-ref name="clr" scoped="" ref="0x10d4831a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x10d466568" loc="60:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x10d466568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d4668b8"/>
        <function-ref name="isInput" scoped="" ref="0x10d466a40"/>
        <function-ref name="setResistor" scoped="" ref="0x10d466bc8"/>
        <function-ref name="toggle" scoped="" ref="0x10d466d50"/>
        <function-ref name="isOutput" scoped="" ref="0x10d465020"/>
        <function-ref name="getResistor" scoped="" ref="0x10d4651a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d465330"/>
        <function-ref name="get" scoped="" ref="0x10d4654b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10d465640"/>
        <function-ref name="getRaw" scoped="" ref="0x10d4657c8"/>
        <function-ref name="set" scoped="" ref="0x10d465950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10d465ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10d465c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10d464020"/>
        <function-ref name="clr" scoped="" ref="0x10d4641a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port32" ref="0x10d451568" loc="73:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port32" scoped="" ref="0x10d451568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d4518b8"/>
        <function-ref name="isInput" scoped="" ref="0x10d451a40"/>
        <function-ref name="setResistor" scoped="" ref="0x10d451bc8"/>
        <function-ref name="toggle" scoped="" ref="0x10d451d50"/>
        <function-ref name="isOutput" scoped="" ref="0x10d481020"/>
        <function-ref name="getResistor" scoped="" ref="0x10d4811a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d481330"/>
        <function-ref name="get" scoped="" ref="0x10d4814b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10d481640"/>
        <function-ref name="getRaw" scoped="" ref="0x10d4817c8"/>
        <function-ref name="set" scoped="" ref="0x10d481950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10d481ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10d481c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10d480020"/>
        <function-ref name="clr" scoped="" ref="0x10d4801a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port44" ref="0x10d46e568" loc="86:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port44" scoped="" ref="0x10d46e568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d46e8b8"/>
        <function-ref name="isInput" scoped="" ref="0x10d46ea40"/>
        <function-ref name="setResistor" scoped="" ref="0x10d46ebc8"/>
        <function-ref name="toggle" scoped="" ref="0x10d46ed50"/>
        <function-ref name="isOutput" scoped="" ref="0x10d46d020"/>
        <function-ref name="getResistor" scoped="" ref="0x10d46d1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d46d330"/>
        <function-ref name="get" scoped="" ref="0x10d46d4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10d46d640"/>
        <function-ref name="getRaw" scoped="" ref="0x10d46d7c8"/>
        <function-ref name="set" scoped="" ref="0x10d46d950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10d46dad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10d46dc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10d46c020"/>
        <function-ref name="clr" scoped="" ref="0x10d46c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port56" ref="0x10d48b568" loc="99:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port56" scoped="" ref="0x10d48b568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d48b8b8"/>
        <function-ref name="isInput" scoped="" ref="0x10d48ba40"/>
        <function-ref name="setResistor" scoped="" ref="0x10d48bbc8"/>
        <function-ref name="toggle" scoped="" ref="0x10d48bd50"/>
        <function-ref name="isOutput" scoped="" ref="0x10d48a020"/>
        <function-ref name="getResistor" scoped="" ref="0x10d48a1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d48a330"/>
        <function-ref name="get" scoped="" ref="0x10d48a4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10d48a640"/>
        <function-ref name="getRaw" scoped="" ref="0x10d48a7c8"/>
        <function-ref name="set" scoped="" ref="0x10d48a950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10d48aad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10d48ac60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10d489020"/>
        <function-ref name="clr" scoped="" ref="0x10d4891a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port66" ref="0x10d4ad568" loc="110:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0x10d4ad568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d4ad8b8"/>
        <function-ref name="isInput" scoped="" ref="0x10d4ada40"/>
        <function-ref name="setResistor" scoped="" ref="0x10d4adbc8"/>
        <function-ref name="toggle" scoped="" ref="0x10d4add50"/>
        <function-ref name="isOutput" scoped="" ref="0x10d4ac020"/>
        <function-ref name="getResistor" scoped="" ref="0x10d4ac1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d4ac330"/>
        <function-ref name="get" scoped="" ref="0x10d4ac4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10d4ac640"/>
        <function-ref name="getRaw" scoped="" ref="0x10d4ac7c8"/>
        <function-ref name="set" scoped="" ref="0x10d4ac950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10d4acad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10d4acc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10d4ab020"/>
        <function-ref name="clr" scoped="" ref="0x10d4ab1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x10d44de10" loc="50:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x10d44de10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d4431a8"/>
        <function-ref name="isInput" scoped="" ref="0x10d443330"/>
        <function-ref name="setResistor" scoped="" ref="0x10d4434b8"/>
        <function-ref name="toggle" scoped="" ref="0x10d443640"/>
        <function-ref name="isOutput" scoped="" ref="0x10d4437c8"/>
        <function-ref name="getResistor" scoped="" ref="0x10d443950"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d443ad8"/>
        <function-ref name="get" scoped="" ref="0x10d443c60"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10d443de8"/>
        <function-ref name="getRaw" scoped="" ref="0x10d442020"/>
        <function-ref name="set" scoped="" ref="0x10d4421a8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10d442330"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10d4424b8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10d442740"/>
        <function-ref name="clr" scoped="" ref="0x10d4428c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x10d45f568" loc="63:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x10d45f568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d45f8b8"/>
        <function-ref name="isInput" scoped="" ref="0x10d45fa40"/>
        <function-ref name="setResistor" scoped="" ref="0x10d45fbc8"/>
        <function-ref name="toggle" scoped="" ref="0x10d45fd50"/>
        <function-ref name="isOutput" scoped="" ref="0x10d45e020"/>
        <function-ref name="getResistor" scoped="" ref="0x10d45e1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d45e330"/>
        <function-ref name="get" scoped="" ref="0x10d45e4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10d45e640"/>
        <function-ref name="getRaw" scoped="" ref="0x10d45e7c8"/>
        <function-ref name="set" scoped="" ref="0x10d45e950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10d45ead8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10d45ec60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10d45d020"/>
        <function-ref name="clr" scoped="" ref="0x10d45d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port35" ref="0x10d47c568" loc="76:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port35" scoped="" ref="0x10d47c568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d47c8b8"/>
        <function-ref name="isInput" scoped="" ref="0x10d47ca40"/>
        <function-ref name="setResistor" scoped="" ref="0x10d47cbc8"/>
        <function-ref name="toggle" scoped="" ref="0x10d47cd50"/>
        <function-ref name="isOutput" scoped="" ref="0x10d47b020"/>
        <function-ref name="getResistor" scoped="" ref="0x10d47b1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d47b330"/>
        <function-ref name="get" scoped="" ref="0x10d47b4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10d47b640"/>
        <function-ref name="getRaw" scoped="" ref="0x10d47b7c8"/>
        <function-ref name="set" scoped="" ref="0x10d47b950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10d47bad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10d47bc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10d47a020"/>
        <function-ref name="clr" scoped="" ref="0x10d47a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port47" ref="0x10d49a568" loc="89:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port47" scoped="" ref="0x10d49a568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d49a8b8"/>
        <function-ref name="isInput" scoped="" ref="0x10d49aa40"/>
        <function-ref name="setResistor" scoped="" ref="0x10d49abc8"/>
        <function-ref name="toggle" scoped="" ref="0x10d49ad50"/>
        <function-ref name="isOutput" scoped="" ref="0x10d499020"/>
        <function-ref name="getResistor" scoped="" ref="0x10d4991a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d499330"/>
        <function-ref name="get" scoped="" ref="0x10d4994b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10d499640"/>
        <function-ref name="getRaw" scoped="" ref="0x10d4997c8"/>
        <function-ref name="set" scoped="" ref="0x10d499950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10d499ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10d499c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10d498020"/>
        <function-ref name="clr" scoped="" ref="0x10d4981a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCL" ref="0x10d49f548" loc="148:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCL" scoped="" ref="0x10d49f548"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d49f898"/>
        <function-ref name="isInput" scoped="" ref="0x10d49fa20"/>
        <function-ref name="setResistor" scoped="" ref="0x10d49fba8"/>
        <function-ref name="toggle" scoped="" ref="0x10d49fd30"/>
        <function-ref name="isOutput" scoped="" ref="0x10d49e020"/>
        <function-ref name="getResistor" scoped="" ref="0x10d49e1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d49e330"/>
        <function-ref name="get" scoped="" ref="0x10d49e4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10d49e640"/>
        <function-ref name="getRaw" scoped="" ref="0x10d49e7c8"/>
        <function-ref name="set" scoped="" ref="0x10d49e950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10d49ead8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10d49ec60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10d49d020"/>
        <function-ref name="clr" scoped="" ref="0x10d49d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC2" ref="0x10d4ba558" loc="161:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC2" scoped="" ref="0x10d4ba558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d4ba8a8"/>
        <function-ref name="isInput" scoped="" ref="0x10d4baa30"/>
        <function-ref name="setResistor" scoped="" ref="0x10d4babb8"/>
        <function-ref name="toggle" scoped="" ref="0x10d4bad40"/>
        <function-ref name="isOutput" scoped="" ref="0x10d4b9020"/>
        <function-ref name="getResistor" scoped="" ref="0x10d4b91a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d4b9330"/>
        <function-ref name="get" scoped="" ref="0x10d4b94b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10d4b9640"/>
        <function-ref name="getRaw" scoped="" ref="0x10d4b97c8"/>
        <function-ref name="set" scoped="" ref="0x10d4b9950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10d4b9ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10d4b9c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10d4b8020"/>
        <function-ref name="clr" scoped="" ref="0x10d4b81a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK0" ref="0x10d4a1560" loc="147:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK0" scoped="" ref="0x10d4a1560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d4a18b0"/>
        <function-ref name="isInput" scoped="" ref="0x10d4a1a38"/>
        <function-ref name="setResistor" scoped="" ref="0x10d4a1bc0"/>
        <function-ref name="toggle" scoped="" ref="0x10d4a1d48"/>
        <function-ref name="isOutput" scoped="" ref="0x10d4a0020"/>
        <function-ref name="getResistor" scoped="" ref="0x10d4a01a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d4a0330"/>
        <function-ref name="get" scoped="" ref="0x10d4a04b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10d4a0640"/>
        <function-ref name="getRaw" scoped="" ref="0x10d4a07c8"/>
        <function-ref name="set" scoped="" ref="0x10d4a0950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10d4a0ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10d4a0c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10d49f020"/>
        <function-ref name="clr" scoped="" ref="0x10d49f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port51" ref="0x10d496568" loc="94:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port51" scoped="" ref="0x10d496568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d4968b8"/>
        <function-ref name="isInput" scoped="" ref="0x10d496a40"/>
        <function-ref name="setResistor" scoped="" ref="0x10d496bc8"/>
        <function-ref name="toggle" scoped="" ref="0x10d496d50"/>
        <function-ref name="isOutput" scoped="" ref="0x10d494020"/>
        <function-ref name="getResistor" scoped="" ref="0x10d4941a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d494330"/>
        <function-ref name="get" scoped="" ref="0x10d4944b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10d494640"/>
        <function-ref name="getRaw" scoped="" ref="0x10d4947c8"/>
        <function-ref name="set" scoped="" ref="0x10d494950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10d494ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10d494c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10d493020"/>
        <function-ref name="clr" scoped="" ref="0x10d4931a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC0" ref="0x10d4e0558" loc="168:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC0" scoped="" ref="0x10d4e0558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d4e08a8"/>
        <function-ref name="isInput" scoped="" ref="0x10d4e0a30"/>
        <function-ref name="setResistor" scoped="" ref="0x10d4e0bb8"/>
        <function-ref name="toggle" scoped="" ref="0x10d4e0d40"/>
        <function-ref name="isOutput" scoped="" ref="0x10d4df020"/>
        <function-ref name="getResistor" scoped="" ref="0x10d4df1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d4df330"/>
        <function-ref name="get" scoped="" ref="0x10d4df4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10d4df640"/>
        <function-ref name="getRaw" scoped="" ref="0x10d4df7c8"/>
        <function-ref name="set" scoped="" ref="0x10d4df950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10d4dfad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10d4dfc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10d4de020"/>
        <function-ref name="clr" scoped="" ref="0x10d4de1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSOUT" ref="0x10d4da568" loc="172:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSOUT" scoped="" ref="0x10d4da568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d4da8b8"/>
        <function-ref name="isInput" scoped="" ref="0x10d4daa40"/>
        <function-ref name="setResistor" scoped="" ref="0x10d4dabc8"/>
        <function-ref name="toggle" scoped="" ref="0x10d4dad50"/>
        <function-ref name="isOutput" scoped="" ref="0x10d4d9020"/>
        <function-ref name="getResistor" scoped="" ref="0x10d4d91a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d4d9330"/>
        <function-ref name="get" scoped="" ref="0x10d4d94b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10d4d9640"/>
        <function-ref name="getRaw" scoped="" ref="0x10d4d97c8"/>
        <function-ref name="set" scoped="" ref="0x10d4d9950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10d4d9ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10d4d9c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10d4d8020"/>
        <function-ref name="clr" scoped="" ref="0x10d4d81a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE0" ref="0x10d4a95b8" loc="143:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE0" scoped="" ref="0x10d4a95b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d4a9d08"/>
        <function-ref name="isInput" scoped="" ref="0x10d4a8020"/>
        <function-ref name="setResistor" scoped="" ref="0x10d4a81a8"/>
        <function-ref name="toggle" scoped="" ref="0x10d4a8330"/>
        <function-ref name="isOutput" scoped="" ref="0x10d4a84b8"/>
        <function-ref name="getResistor" scoped="" ref="0x10d4a8640"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d4a87c8"/>
        <function-ref name="get" scoped="" ref="0x10d4a8950"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10d4a8ad8"/>
        <function-ref name="getRaw" scoped="" ref="0x10d4a8c60"/>
        <function-ref name="set" scoped="" ref="0x10d4a8de8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10d4a7020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10d4a71a8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10d4a7430"/>
        <function-ref name="clr" scoped="" ref="0x10d4a75b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10d4d5e18" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P10"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10d4d5e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d5161a8"/>
        <function-ref name="isInput" scoped="" ref="0x10d516330"/>
        <function-ref name="setResistor" scoped="" ref="0x10d5164b8"/>
        <function-ref name="toggle" scoped="" ref="0x10d516640"/>
        <function-ref name="isOutput" scoped="" ref="0x10d5167c8"/>
        <function-ref name="getResistor" scoped="" ref="0x10d516950"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d516ad8"/>
        <function-ref name="get" scoped="" ref="0x10d516c60"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10d516de8"/>
        <function-ref name="getRaw" scoped="" ref="0x10d515020"/>
        <function-ref name="set" scoped="" ref="0x10d5151a8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10d515330"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10d5154b8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10d515740"/>
        <function-ref name="clr" scoped="" ref="0x10d5158c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10d511478" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P11"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10d511478"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d5117c8"/>
        <function-ref name="isInput" scoped="" ref="0x10d511950"/>
        <function-ref name="setResistor" scoped="" ref="0x10d511ad8"/>
        <function-ref name="toggle" scoped="" ref="0x10d511c60"/>
        <function-ref name="isOutput" scoped="" ref="0x10d511de8"/>
        <function-ref name="getResistor" scoped="" ref="0x10d510020"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d5101a8"/>
        <function-ref name="get" scoped="" ref="0x10d510330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10d5104b8"/>
        <function-ref name="getRaw" scoped="" ref="0x10d510640"/>
        <function-ref name="set" scoped="" ref="0x10d5107c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10d510950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10d510ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10d510d60"/>
        <function-ref name="clr" scoped="" ref="0x10d50f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10d50dca0" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P12"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10d50dca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d50c020"/>
        <function-ref name="isInput" scoped="" ref="0x10d50c1a8"/>
        <function-ref name="setResistor" scoped="" ref="0x10d50c330"/>
        <function-ref name="toggle" scoped="" ref="0x10d50c4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x10d50c640"/>
        <function-ref name="getResistor" scoped="" ref="0x10d50c7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d50c950"/>
        <function-ref name="get" scoped="" ref="0x10d50cad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10d50cc60"/>
        <function-ref name="getRaw" scoped="" ref="0x10d50cde8"/>
        <function-ref name="set" scoped="" ref="0x10d50b020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10d50b1a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10d50b330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10d50b5b8"/>
        <function-ref name="clr" scoped="" ref="0x10d50b740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10d5083d8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P13"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10d5083d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d508728"/>
        <function-ref name="isInput" scoped="" ref="0x10d5088b0"/>
        <function-ref name="setResistor" scoped="" ref="0x10d508a38"/>
        <function-ref name="toggle" scoped="" ref="0x10d508bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x10d508d48"/>
        <function-ref name="getResistor" scoped="" ref="0x10d507020"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d5071a8"/>
        <function-ref name="get" scoped="" ref="0x10d507330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10d5074b8"/>
        <function-ref name="getRaw" scoped="" ref="0x10d507640"/>
        <function-ref name="set" scoped="" ref="0x10d5077c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10d507950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10d507ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10d507d60"/>
        <function-ref name="clr" scoped="" ref="0x10d506020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10d504ca0" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P14"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10d504ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d503020"/>
        <function-ref name="isInput" scoped="" ref="0x10d5031a8"/>
        <function-ref name="setResistor" scoped="" ref="0x10d503330"/>
        <function-ref name="toggle" scoped="" ref="0x10d5034b8"/>
        <function-ref name="isOutput" scoped="" ref="0x10d503640"/>
        <function-ref name="getResistor" scoped="" ref="0x10d5037c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d503950"/>
        <function-ref name="get" scoped="" ref="0x10d503ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10d503c60"/>
        <function-ref name="getRaw" scoped="" ref="0x10d503de8"/>
        <function-ref name="set" scoped="" ref="0x10d502020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10d5021a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10d502330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10d5025b8"/>
        <function-ref name="clr" scoped="" ref="0x10d502740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10d5333d8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P15"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10d5333d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d533728"/>
        <function-ref name="isInput" scoped="" ref="0x10d5338b0"/>
        <function-ref name="setResistor" scoped="" ref="0x10d533a38"/>
        <function-ref name="toggle" scoped="" ref="0x10d533bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x10d533d48"/>
        <function-ref name="getResistor" scoped="" ref="0x10d532020"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d5321a8"/>
        <function-ref name="get" scoped="" ref="0x10d532330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10d5324b8"/>
        <function-ref name="getRaw" scoped="" ref="0x10d532640"/>
        <function-ref name="set" scoped="" ref="0x10d5327c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10d532950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10d532ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10d532d60"/>
        <function-ref name="clr" scoped="" ref="0x10d531020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10d52fca0" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P16"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10d52fca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d52e020"/>
        <function-ref name="isInput" scoped="" ref="0x10d52e1a8"/>
        <function-ref name="setResistor" scoped="" ref="0x10d52e330"/>
        <function-ref name="toggle" scoped="" ref="0x10d52e4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x10d52e640"/>
        <function-ref name="getResistor" scoped="" ref="0x10d52e7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d52e950"/>
        <function-ref name="get" scoped="" ref="0x10d52ead8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10d52ec60"/>
        <function-ref name="getRaw" scoped="" ref="0x10d52ede8"/>
        <function-ref name="set" scoped="" ref="0x10d52d020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10d52d1a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10d52d330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10d52d5b8"/>
        <function-ref name="clr" scoped="" ref="0x10d52d740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10d52a3d8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P17"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10d52a3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d52a728"/>
        <function-ref name="isInput" scoped="" ref="0x10d52a8b0"/>
        <function-ref name="setResistor" scoped="" ref="0x10d52aa38"/>
        <function-ref name="toggle" scoped="" ref="0x10d52abc0"/>
        <function-ref name="isOutput" scoped="" ref="0x10d52ad48"/>
        <function-ref name="getResistor" scoped="" ref="0x10d529020"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d5291a8"/>
        <function-ref name="get" scoped="" ref="0x10d529330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10d5294b8"/>
        <function-ref name="getRaw" scoped="" ref="0x10d529640"/>
        <function-ref name="set" scoped="" ref="0x10d5297c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10d529950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10d529ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10d529d60"/>
        <function-ref name="clr" scoped="" ref="0x10d528020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10d526ca0" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P20"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10d526ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d524020"/>
        <function-ref name="isInput" scoped="" ref="0x10d5241a8"/>
        <function-ref name="setResistor" scoped="" ref="0x10d524330"/>
        <function-ref name="toggle" scoped="" ref="0x10d5244b8"/>
        <function-ref name="isOutput" scoped="" ref="0x10d524640"/>
        <function-ref name="getResistor" scoped="" ref="0x10d5247c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d524950"/>
        <function-ref name="get" scoped="" ref="0x10d524ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10d524c60"/>
        <function-ref name="getRaw" scoped="" ref="0x10d524de8"/>
        <function-ref name="set" scoped="" ref="0x10d523020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10d5231a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10d523330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10d5235b8"/>
        <function-ref name="clr" scoped="" ref="0x10d523740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10d5203d8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P21"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10d5203d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d520728"/>
        <function-ref name="isInput" scoped="" ref="0x10d5208b0"/>
        <function-ref name="setResistor" scoped="" ref="0x10d520a38"/>
        <function-ref name="toggle" scoped="" ref="0x10d520bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x10d520d48"/>
        <function-ref name="getResistor" scoped="" ref="0x10d51f020"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d51f1a8"/>
        <function-ref name="get" scoped="" ref="0x10d51f330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10d51f4b8"/>
        <function-ref name="getRaw" scoped="" ref="0x10d51f640"/>
        <function-ref name="set" scoped="" ref="0x10d51f7c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10d51f950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10d51fad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10d51fd60"/>
        <function-ref name="clr" scoped="" ref="0x10d51e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10d51cca0" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P22"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10d51cca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d51b020"/>
        <function-ref name="isInput" scoped="" ref="0x10d51b1a8"/>
        <function-ref name="setResistor" scoped="" ref="0x10d51b330"/>
        <function-ref name="toggle" scoped="" ref="0x10d51b4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x10d51b640"/>
        <function-ref name="getResistor" scoped="" ref="0x10d51b7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d51b950"/>
        <function-ref name="get" scoped="" ref="0x10d51bad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10d51bc60"/>
        <function-ref name="getRaw" scoped="" ref="0x10d51bde8"/>
        <function-ref name="set" scoped="" ref="0x10d51a020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10d51a1a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10d51a330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10d51a5b8"/>
        <function-ref name="clr" scoped="" ref="0x10d51a740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10d54b3d8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P23"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10d54b3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d54b728"/>
        <function-ref name="isInput" scoped="" ref="0x10d54b8b0"/>
        <function-ref name="setResistor" scoped="" ref="0x10d54ba38"/>
        <function-ref name="toggle" scoped="" ref="0x10d54bbc0"/>
        <function-ref name="isOutput" scoped="" ref="0x10d54bd48"/>
        <function-ref name="getResistor" scoped="" ref="0x10d54a020"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d54a1a8"/>
        <function-ref name="get" scoped="" ref="0x10d54a330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10d54a4b8"/>
        <function-ref name="getRaw" scoped="" ref="0x10d54a640"/>
        <function-ref name="set" scoped="" ref="0x10d54a7c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10d54a950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10d54aad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10d54ad60"/>
        <function-ref name="clr" scoped="" ref="0x10d549020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10d547d08" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P24"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10d547d08"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d5460a0"/>
        <function-ref name="isInput" scoped="" ref="0x10d546228"/>
        <function-ref name="setResistor" scoped="" ref="0x10d5463b0"/>
        <function-ref name="toggle" scoped="" ref="0x10d546538"/>
        <function-ref name="isOutput" scoped="" ref="0x10d5466c0"/>
        <function-ref name="getResistor" scoped="" ref="0x10d546848"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d5469d0"/>
        <function-ref name="get" scoped="" ref="0x10d546b58"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10d546ce0"/>
        <function-ref name="getRaw" scoped="" ref="0x10d546e68"/>
        <function-ref name="set" scoped="" ref="0x10d545020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10d5451a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10d545330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10d5455b8"/>
        <function-ref name="clr" scoped="" ref="0x10d545740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10d5423d8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P25"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10d5423d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d542728"/>
        <function-ref name="isInput" scoped="" ref="0x10d5428b0"/>
        <function-ref name="setResistor" scoped="" ref="0x10d542a38"/>
        <function-ref name="toggle" scoped="" ref="0x10d542bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x10d542d48"/>
        <function-ref name="getResistor" scoped="" ref="0x10d541020"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d5411a8"/>
        <function-ref name="get" scoped="" ref="0x10d541330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10d5414b8"/>
        <function-ref name="getRaw" scoped="" ref="0x10d541640"/>
        <function-ref name="set" scoped="" ref="0x10d5417c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10d541950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10d541ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10d541d60"/>
        <function-ref name="clr" scoped="" ref="0x10d540020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10d53eca0" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P26"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10d53eca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d53d020"/>
        <function-ref name="isInput" scoped="" ref="0x10d53d1a8"/>
        <function-ref name="setResistor" scoped="" ref="0x10d53d330"/>
        <function-ref name="toggle" scoped="" ref="0x10d53d4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x10d53d640"/>
        <function-ref name="getResistor" scoped="" ref="0x10d53d7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d53d950"/>
        <function-ref name="get" scoped="" ref="0x10d53dad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10d53dc60"/>
        <function-ref name="getRaw" scoped="" ref="0x10d53dde8"/>
        <function-ref name="set" scoped="" ref="0x10d53c020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10d53c1a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10d53c330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10d53c5b8"/>
        <function-ref name="clr" scoped="" ref="0x10d53c740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10d5393d8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P27"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10d5393d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d539728"/>
        <function-ref name="isInput" scoped="" ref="0x10d5398b0"/>
        <function-ref name="setResistor" scoped="" ref="0x10d539a38"/>
        <function-ref name="toggle" scoped="" ref="0x10d539bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x10d539d48"/>
        <function-ref name="getResistor" scoped="" ref="0x10d538020"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d5381a8"/>
        <function-ref name="get" scoped="" ref="0x10d538330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10d5384b8"/>
        <function-ref name="getRaw" scoped="" ref="0x10d538640"/>
        <function-ref name="set" scoped="" ref="0x10d5387c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10d538950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10d538ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10d538d60"/>
        <function-ref name="clr" scoped="" ref="0x10d537020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10d535ca0" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P30"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10d535ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d567020"/>
        <function-ref name="isInput" scoped="" ref="0x10d5671a8"/>
        <function-ref name="setResistor" scoped="" ref="0x10d567330"/>
        <function-ref name="toggle" scoped="" ref="0x10d5674b8"/>
        <function-ref name="isOutput" scoped="" ref="0x10d567640"/>
        <function-ref name="getResistor" scoped="" ref="0x10d5677c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d567950"/>
        <function-ref name="get" scoped="" ref="0x10d567ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10d567c60"/>
        <function-ref name="getRaw" scoped="" ref="0x10d567de8"/>
        <function-ref name="set" scoped="" ref="0x10d566020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10d5661a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10d566330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10d5665b8"/>
        <function-ref name="clr" scoped="" ref="0x10d566740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10d5633d8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P31"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10d5633d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d563728"/>
        <function-ref name="isInput" scoped="" ref="0x10d5638b0"/>
        <function-ref name="setResistor" scoped="" ref="0x10d563a38"/>
        <function-ref name="toggle" scoped="" ref="0x10d563bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x10d563d48"/>
        <function-ref name="getResistor" scoped="" ref="0x10d562020"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d5621a8"/>
        <function-ref name="get" scoped="" ref="0x10d562330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10d5624b8"/>
        <function-ref name="getRaw" scoped="" ref="0x10d562640"/>
        <function-ref name="set" scoped="" ref="0x10d5627c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10d562950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10d562ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10d562d60"/>
        <function-ref name="clr" scoped="" ref="0x10d561020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10d55fca0" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P32"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10d55fca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d55e020"/>
        <function-ref name="isInput" scoped="" ref="0x10d55e1a8"/>
        <function-ref name="setResistor" scoped="" ref="0x10d55e330"/>
        <function-ref name="toggle" scoped="" ref="0x10d55e4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x10d55e640"/>
        <function-ref name="getResistor" scoped="" ref="0x10d55e7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d55e950"/>
        <function-ref name="get" scoped="" ref="0x10d55ead8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10d55ec60"/>
        <function-ref name="getRaw" scoped="" ref="0x10d55ede8"/>
        <function-ref name="set" scoped="" ref="0x10d55d020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10d55d1a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10d55d330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10d55d5b8"/>
        <function-ref name="clr" scoped="" ref="0x10d55d740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10d55a3d8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P33"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10d55a3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d55a728"/>
        <function-ref name="isInput" scoped="" ref="0x10d55a8b0"/>
        <function-ref name="setResistor" scoped="" ref="0x10d55aa38"/>
        <function-ref name="toggle" scoped="" ref="0x10d55abc0"/>
        <function-ref name="isOutput" scoped="" ref="0x10d55ad48"/>
        <function-ref name="getResistor" scoped="" ref="0x10d559020"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d5591a8"/>
        <function-ref name="get" scoped="" ref="0x10d559330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10d5594b8"/>
        <function-ref name="getRaw" scoped="" ref="0x10d559640"/>
        <function-ref name="set" scoped="" ref="0x10d5597c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10d559950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10d559ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10d559d60"/>
        <function-ref name="clr" scoped="" ref="0x10d558020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10d556ca0" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P34"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10d556ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d555020"/>
        <function-ref name="isInput" scoped="" ref="0x10d5551a8"/>
        <function-ref name="setResistor" scoped="" ref="0x10d555330"/>
        <function-ref name="toggle" scoped="" ref="0x10d5554b8"/>
        <function-ref name="isOutput" scoped="" ref="0x10d555640"/>
        <function-ref name="getResistor" scoped="" ref="0x10d5557c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d555950"/>
        <function-ref name="get" scoped="" ref="0x10d555ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10d555c60"/>
        <function-ref name="getRaw" scoped="" ref="0x10d555de8"/>
        <function-ref name="set" scoped="" ref="0x10d554020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10d5541a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10d554330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10d5545b8"/>
        <function-ref name="clr" scoped="" ref="0x10d554740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10d5513d8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P35"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10d5513d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d551728"/>
        <function-ref name="isInput" scoped="" ref="0x10d5518b0"/>
        <function-ref name="setResistor" scoped="" ref="0x10d551a38"/>
        <function-ref name="toggle" scoped="" ref="0x10d551bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x10d551d48"/>
        <function-ref name="getResistor" scoped="" ref="0x10d550020"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d5501a8"/>
        <function-ref name="get" scoped="" ref="0x10d550330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10d5504b8"/>
        <function-ref name="getRaw" scoped="" ref="0x10d550640"/>
        <function-ref name="set" scoped="" ref="0x10d5507c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10d550950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10d550ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10d550d60"/>
        <function-ref name="clr" scoped="" ref="0x10d54f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10d582ca0" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P36"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10d582ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d581020"/>
        <function-ref name="isInput" scoped="" ref="0x10d5811a8"/>
        <function-ref name="setResistor" scoped="" ref="0x10d581330"/>
        <function-ref name="toggle" scoped="" ref="0x10d5814b8"/>
        <function-ref name="isOutput" scoped="" ref="0x10d581640"/>
        <function-ref name="getResistor" scoped="" ref="0x10d5817c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d581950"/>
        <function-ref name="get" scoped="" ref="0x10d581ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10d581c60"/>
        <function-ref name="getRaw" scoped="" ref="0x10d581de8"/>
        <function-ref name="set" scoped="" ref="0x10d580020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10d5801a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10d580330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10d5805b8"/>
        <function-ref name="clr" scoped="" ref="0x10d580740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10d57d3d8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P37"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10d57d3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d57d728"/>
        <function-ref name="isInput" scoped="" ref="0x10d57d8b0"/>
        <function-ref name="setResistor" scoped="" ref="0x10d57da38"/>
        <function-ref name="toggle" scoped="" ref="0x10d57dbc0"/>
        <function-ref name="isOutput" scoped="" ref="0x10d57dd48"/>
        <function-ref name="getResistor" scoped="" ref="0x10d57c020"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d57c1a8"/>
        <function-ref name="get" scoped="" ref="0x10d57c330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10d57c4b8"/>
        <function-ref name="getRaw" scoped="" ref="0x10d57c640"/>
        <function-ref name="set" scoped="" ref="0x10d57c7c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10d57c950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10d57cad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10d57cd60"/>
        <function-ref name="clr" scoped="" ref="0x10d57b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10d578dd8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P40"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10d578dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d577170"/>
        <function-ref name="isInput" scoped="" ref="0x10d5772f8"/>
        <function-ref name="setResistor" scoped="" ref="0x10d577480"/>
        <function-ref name="toggle" scoped="" ref="0x10d577608"/>
        <function-ref name="isOutput" scoped="" ref="0x10d577790"/>
        <function-ref name="getResistor" scoped="" ref="0x10d577918"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d577aa0"/>
        <function-ref name="get" scoped="" ref="0x10d577c28"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10d577db0"/>
        <function-ref name="getRaw" scoped="" ref="0x10d576020"/>
        <function-ref name="set" scoped="" ref="0x10d5761a8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10d576330"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10d5764b8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10d576740"/>
        <function-ref name="clr" scoped="" ref="0x10d5768c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10d573478" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P41"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10d573478"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d5737c8"/>
        <function-ref name="isInput" scoped="" ref="0x10d573950"/>
        <function-ref name="setResistor" scoped="" ref="0x10d573ad8"/>
        <function-ref name="toggle" scoped="" ref="0x10d573c60"/>
        <function-ref name="isOutput" scoped="" ref="0x10d573de8"/>
        <function-ref name="getResistor" scoped="" ref="0x10d572020"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d5721a8"/>
        <function-ref name="get" scoped="" ref="0x10d572330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10d5724b8"/>
        <function-ref name="getRaw" scoped="" ref="0x10d572640"/>
        <function-ref name="set" scoped="" ref="0x10d5727c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10d572950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10d572ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10d572d60"/>
        <function-ref name="clr" scoped="" ref="0x10d571020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10d56fca0" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P42"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10d56fca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d56e020"/>
        <function-ref name="isInput" scoped="" ref="0x10d56e1a8"/>
        <function-ref name="setResistor" scoped="" ref="0x10d56e330"/>
        <function-ref name="toggle" scoped="" ref="0x10d56e4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x10d56e640"/>
        <function-ref name="getResistor" scoped="" ref="0x10d56e7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d56e950"/>
        <function-ref name="get" scoped="" ref="0x10d56ead8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10d56ec60"/>
        <function-ref name="getRaw" scoped="" ref="0x10d56ede8"/>
        <function-ref name="set" scoped="" ref="0x10d56d020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10d56d1a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10d56d330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10d56d5b8"/>
        <function-ref name="clr" scoped="" ref="0x10d56d740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10d56a3d8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P43"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10d56a3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d56a728"/>
        <function-ref name="isInput" scoped="" ref="0x10d56a8b0"/>
        <function-ref name="setResistor" scoped="" ref="0x10d56aa38"/>
        <function-ref name="toggle" scoped="" ref="0x10d56abc0"/>
        <function-ref name="isOutput" scoped="" ref="0x10d56ad48"/>
        <function-ref name="getResistor" scoped="" ref="0x10d569020"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d5691a8"/>
        <function-ref name="get" scoped="" ref="0x10d569330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10d5694b8"/>
        <function-ref name="getRaw" scoped="" ref="0x10d569640"/>
        <function-ref name="set" scoped="" ref="0x10d5697c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10d569950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10d569ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10d569d60"/>
        <function-ref name="clr" scoped="" ref="0x10d568020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10d59cca0" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P44"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10d59cca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d59b020"/>
        <function-ref name="isInput" scoped="" ref="0x10d59b1a8"/>
        <function-ref name="setResistor" scoped="" ref="0x10d59b330"/>
        <function-ref name="toggle" scoped="" ref="0x10d59b4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x10d59b640"/>
        <function-ref name="getResistor" scoped="" ref="0x10d59b7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d59b950"/>
        <function-ref name="get" scoped="" ref="0x10d59bad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10d59bc60"/>
        <function-ref name="getRaw" scoped="" ref="0x10d59bde8"/>
        <function-ref name="set" scoped="" ref="0x10d59a020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10d59a1a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10d59a330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10d59a5b8"/>
        <function-ref name="clr" scoped="" ref="0x10d59a740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10d5973d8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P45"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10d5973d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d597728"/>
        <function-ref name="isInput" scoped="" ref="0x10d5978b0"/>
        <function-ref name="setResistor" scoped="" ref="0x10d597a38"/>
        <function-ref name="toggle" scoped="" ref="0x10d597bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x10d597d48"/>
        <function-ref name="getResistor" scoped="" ref="0x10d596020"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d5961a8"/>
        <function-ref name="get" scoped="" ref="0x10d596330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10d5964b8"/>
        <function-ref name="getRaw" scoped="" ref="0x10d596640"/>
        <function-ref name="set" scoped="" ref="0x10d5967c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10d596950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10d596ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10d596d60"/>
        <function-ref name="clr" scoped="" ref="0x10d595020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10d593ca0" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P46"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10d593ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d592020"/>
        <function-ref name="isInput" scoped="" ref="0x10d5921a8"/>
        <function-ref name="setResistor" scoped="" ref="0x10d592330"/>
        <function-ref name="toggle" scoped="" ref="0x10d5924b8"/>
        <function-ref name="isOutput" scoped="" ref="0x10d592640"/>
        <function-ref name="getResistor" scoped="" ref="0x10d5927c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d592950"/>
        <function-ref name="get" scoped="" ref="0x10d592ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10d592c60"/>
        <function-ref name="getRaw" scoped="" ref="0x10d592de8"/>
        <function-ref name="set" scoped="" ref="0x10d591020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10d5911a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10d591330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10d5915b8"/>
        <function-ref name="clr" scoped="" ref="0x10d591740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10d58e3d8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P47"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10d58e3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d58e728"/>
        <function-ref name="isInput" scoped="" ref="0x10d58e8b0"/>
        <function-ref name="setResistor" scoped="" ref="0x10d58ea38"/>
        <function-ref name="toggle" scoped="" ref="0x10d58ebc0"/>
        <function-ref name="isOutput" scoped="" ref="0x10d58ed48"/>
        <function-ref name="getResistor" scoped="" ref="0x10d58c020"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d58c1a8"/>
        <function-ref name="get" scoped="" ref="0x10d58c330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10d58c4b8"/>
        <function-ref name="getRaw" scoped="" ref="0x10d58c640"/>
        <function-ref name="set" scoped="" ref="0x10d58c7c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10d58c950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10d58cad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10d58cd60"/>
        <function-ref name="clr" scoped="" ref="0x10d58b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10d589ca0" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P50"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10d589ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d588020"/>
        <function-ref name="isInput" scoped="" ref="0x10d5881a8"/>
        <function-ref name="setResistor" scoped="" ref="0x10d588330"/>
        <function-ref name="toggle" scoped="" ref="0x10d5884b8"/>
        <function-ref name="isOutput" scoped="" ref="0x10d588640"/>
        <function-ref name="getResistor" scoped="" ref="0x10d5887c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d588950"/>
        <function-ref name="get" scoped="" ref="0x10d588ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10d588c60"/>
        <function-ref name="getRaw" scoped="" ref="0x10d588de8"/>
        <function-ref name="set" scoped="" ref="0x10d587020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10d5871a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10d587330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10d5875b8"/>
        <function-ref name="clr" scoped="" ref="0x10d587740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10d5843d8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P51"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10d5843d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d584728"/>
        <function-ref name="isInput" scoped="" ref="0x10d5848b0"/>
        <function-ref name="setResistor" scoped="" ref="0x10d584a38"/>
        <function-ref name="toggle" scoped="" ref="0x10d584bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x10d584d48"/>
        <function-ref name="getResistor" scoped="" ref="0x10d583020"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d5831a8"/>
        <function-ref name="get" scoped="" ref="0x10d583330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10d5834b8"/>
        <function-ref name="getRaw" scoped="" ref="0x10d583640"/>
        <function-ref name="set" scoped="" ref="0x10d5837c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10d583950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10d583ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10d583d60"/>
        <function-ref name="clr" scoped="" ref="0x10d5b8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10d5b6ca0" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P52"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10d5b6ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d5b5020"/>
        <function-ref name="isInput" scoped="" ref="0x10d5b51a8"/>
        <function-ref name="setResistor" scoped="" ref="0x10d5b5330"/>
        <function-ref name="toggle" scoped="" ref="0x10d5b54b8"/>
        <function-ref name="isOutput" scoped="" ref="0x10d5b5640"/>
        <function-ref name="getResistor" scoped="" ref="0x10d5b57c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d5b5950"/>
        <function-ref name="get" scoped="" ref="0x10d5b5ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10d5b5c60"/>
        <function-ref name="getRaw" scoped="" ref="0x10d5b5de8"/>
        <function-ref name="set" scoped="" ref="0x10d5b4020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10d5b41a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10d5b4330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10d5b45b8"/>
        <function-ref name="clr" scoped="" ref="0x10d5b4740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10d5b13d8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P53"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10d5b13d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d5b1728"/>
        <function-ref name="isInput" scoped="" ref="0x10d5b18b0"/>
        <function-ref name="setResistor" scoped="" ref="0x10d5b1a38"/>
        <function-ref name="toggle" scoped="" ref="0x10d5b1bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x10d5b1d48"/>
        <function-ref name="getResistor" scoped="" ref="0x10d5b0020"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d5b01a8"/>
        <function-ref name="get" scoped="" ref="0x10d5b0330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10d5b04b8"/>
        <function-ref name="getRaw" scoped="" ref="0x10d5b0640"/>
        <function-ref name="set" scoped="" ref="0x10d5b07c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10d5b0950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10d5b0ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10d5b0d60"/>
        <function-ref name="clr" scoped="" ref="0x10d5af020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10d5adca0" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P54"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10d5adca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d5ac020"/>
        <function-ref name="isInput" scoped="" ref="0x10d5ac1a8"/>
        <function-ref name="setResistor" scoped="" ref="0x10d5ac330"/>
        <function-ref name="toggle" scoped="" ref="0x10d5ac4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x10d5ac640"/>
        <function-ref name="getResistor" scoped="" ref="0x10d5ac7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d5ac950"/>
        <function-ref name="get" scoped="" ref="0x10d5acad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10d5acc60"/>
        <function-ref name="getRaw" scoped="" ref="0x10d5acde8"/>
        <function-ref name="set" scoped="" ref="0x10d5ab020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10d5ab1a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10d5ab330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10d5ab5b8"/>
        <function-ref name="clr" scoped="" ref="0x10d5ab740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10d5a83d8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P55"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10d5a83d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d5a8728"/>
        <function-ref name="isInput" scoped="" ref="0x10d5a88b0"/>
        <function-ref name="setResistor" scoped="" ref="0x10d5a8a38"/>
        <function-ref name="toggle" scoped="" ref="0x10d5a8bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x10d5a8d48"/>
        <function-ref name="getResistor" scoped="" ref="0x10d5a7020"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d5a71a8"/>
        <function-ref name="get" scoped="" ref="0x10d5a7330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10d5a74b8"/>
        <function-ref name="getRaw" scoped="" ref="0x10d5a7640"/>
        <function-ref name="set" scoped="" ref="0x10d5a77c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10d5a7950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10d5a7ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10d5a7d60"/>
        <function-ref name="clr" scoped="" ref="0x10d5a6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10d5a4ca0" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P56"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10d5a4ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d5a3020"/>
        <function-ref name="isInput" scoped="" ref="0x10d5a31a8"/>
        <function-ref name="setResistor" scoped="" ref="0x10d5a3330"/>
        <function-ref name="toggle" scoped="" ref="0x10d5a34b8"/>
        <function-ref name="isOutput" scoped="" ref="0x10d5a3640"/>
        <function-ref name="getResistor" scoped="" ref="0x10d5a37c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d5a3950"/>
        <function-ref name="get" scoped="" ref="0x10d5a3ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10d5a3c60"/>
        <function-ref name="getRaw" scoped="" ref="0x10d5a3de8"/>
        <function-ref name="set" scoped="" ref="0x10d5a2020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10d5a21a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10d5a2330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10d5a25b8"/>
        <function-ref name="clr" scoped="" ref="0x10d5a2740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10d59f3d8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P57"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10d59f3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d59f728"/>
        <function-ref name="isInput" scoped="" ref="0x10d59f8b0"/>
        <function-ref name="setResistor" scoped="" ref="0x10d59fa38"/>
        <function-ref name="toggle" scoped="" ref="0x10d59fbc0"/>
        <function-ref name="isOutput" scoped="" ref="0x10d59fd48"/>
        <function-ref name="getResistor" scoped="" ref="0x10d5d3020"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d5d31a8"/>
        <function-ref name="get" scoped="" ref="0x10d5d3330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10d5d34b8"/>
        <function-ref name="getRaw" scoped="" ref="0x10d5d3640"/>
        <function-ref name="set" scoped="" ref="0x10d5d37c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10d5d3950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10d5d3ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10d5d3d60"/>
        <function-ref name="clr" scoped="" ref="0x10d5d2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10d5d0ca0" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P60"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10d5d0ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d5cf020"/>
        <function-ref name="isInput" scoped="" ref="0x10d5cf1a8"/>
        <function-ref name="setResistor" scoped="" ref="0x10d5cf330"/>
        <function-ref name="toggle" scoped="" ref="0x10d5cf4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x10d5cf640"/>
        <function-ref name="getResistor" scoped="" ref="0x10d5cf7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d5cf950"/>
        <function-ref name="get" scoped="" ref="0x10d5cfad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10d5cfc60"/>
        <function-ref name="getRaw" scoped="" ref="0x10d5cfde8"/>
        <function-ref name="set" scoped="" ref="0x10d5ce020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10d5ce1a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10d5ce330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10d5ce5b8"/>
        <function-ref name="clr" scoped="" ref="0x10d5ce740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10d5cb3d8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P61"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10d5cb3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d5cb728"/>
        <function-ref name="isInput" scoped="" ref="0x10d5cb8b0"/>
        <function-ref name="setResistor" scoped="" ref="0x10d5cba38"/>
        <function-ref name="toggle" scoped="" ref="0x10d5cbbc0"/>
        <function-ref name="isOutput" scoped="" ref="0x10d5cbd48"/>
        <function-ref name="getResistor" scoped="" ref="0x10d5ca020"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d5ca1a8"/>
        <function-ref name="get" scoped="" ref="0x10d5ca330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10d5ca4b8"/>
        <function-ref name="getRaw" scoped="" ref="0x10d5ca640"/>
        <function-ref name="set" scoped="" ref="0x10d5ca7c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10d5ca950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10d5caad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10d5cad60"/>
        <function-ref name="clr" scoped="" ref="0x10d5c9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10d5c7ca0" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P62"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10d5c7ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d5c6020"/>
        <function-ref name="isInput" scoped="" ref="0x10d5c61a8"/>
        <function-ref name="setResistor" scoped="" ref="0x10d5c6330"/>
        <function-ref name="toggle" scoped="" ref="0x10d5c64b8"/>
        <function-ref name="isOutput" scoped="" ref="0x10d5c6640"/>
        <function-ref name="getResistor" scoped="" ref="0x10d5c67c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d5c6950"/>
        <function-ref name="get" scoped="" ref="0x10d5c6ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10d5c6c60"/>
        <function-ref name="getRaw" scoped="" ref="0x10d5c6de8"/>
        <function-ref name="set" scoped="" ref="0x10d5c5020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10d5c51a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10d5c5330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10d5c55b8"/>
        <function-ref name="clr" scoped="" ref="0x10d5c5740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10d5c23d8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P63"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10d5c23d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d5c2728"/>
        <function-ref name="isInput" scoped="" ref="0x10d5c28b0"/>
        <function-ref name="setResistor" scoped="" ref="0x10d5c2a38"/>
        <function-ref name="toggle" scoped="" ref="0x10d5c2bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x10d5c2d48"/>
        <function-ref name="getResistor" scoped="" ref="0x10d5c1020"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d5c11a8"/>
        <function-ref name="get" scoped="" ref="0x10d5c1330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10d5c14b8"/>
        <function-ref name="getRaw" scoped="" ref="0x10d5c1640"/>
        <function-ref name="set" scoped="" ref="0x10d5c17c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10d5c1950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10d5c1ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10d5c1d60"/>
        <function-ref name="clr" scoped="" ref="0x10d5c0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10d5beca0" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P64"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10d5beca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d5bd020"/>
        <function-ref name="isInput" scoped="" ref="0x10d5bd1a8"/>
        <function-ref name="setResistor" scoped="" ref="0x10d5bd330"/>
        <function-ref name="toggle" scoped="" ref="0x10d5bd4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x10d5bd640"/>
        <function-ref name="getResistor" scoped="" ref="0x10d5bd7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d5bd950"/>
        <function-ref name="get" scoped="" ref="0x10d5bdad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10d5bdc60"/>
        <function-ref name="getRaw" scoped="" ref="0x10d5bdde8"/>
        <function-ref name="set" scoped="" ref="0x10d5bc020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10d5bc1a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10d5bc330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10d5bc5b8"/>
        <function-ref name="clr" scoped="" ref="0x10d5bc740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10d5b93d8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P65"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10d5b93d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d5b9728"/>
        <function-ref name="isInput" scoped="" ref="0x10d5b98b0"/>
        <function-ref name="setResistor" scoped="" ref="0x10d5b9a38"/>
        <function-ref name="toggle" scoped="" ref="0x10d5b9bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x10d5b9d48"/>
        <function-ref name="getResistor" scoped="" ref="0x10d5ee020"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d5ee1a8"/>
        <function-ref name="get" scoped="" ref="0x10d5ee330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10d5ee4b8"/>
        <function-ref name="getRaw" scoped="" ref="0x10d5ee640"/>
        <function-ref name="set" scoped="" ref="0x10d5ee7c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10d5ee950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10d5eead8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10d5eed60"/>
        <function-ref name="clr" scoped="" ref="0x10d5ed020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10d5ebca0" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P66"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10d5ebca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d5ea020"/>
        <function-ref name="isInput" scoped="" ref="0x10d5ea1a8"/>
        <function-ref name="setResistor" scoped="" ref="0x10d5ea330"/>
        <function-ref name="toggle" scoped="" ref="0x10d5ea4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x10d5ea640"/>
        <function-ref name="getResistor" scoped="" ref="0x10d5ea7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d5ea950"/>
        <function-ref name="get" scoped="" ref="0x10d5eaad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10d5eac60"/>
        <function-ref name="getRaw" scoped="" ref="0x10d5eade8"/>
        <function-ref name="set" scoped="" ref="0x10d5e9020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10d5e91a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10d5e9330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10d5e95b8"/>
        <function-ref name="clr" scoped="" ref="0x10d5e9740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10d5e53d8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P67"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10d5e53d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d5e5728"/>
        <function-ref name="isInput" scoped="" ref="0x10d5e58b0"/>
        <function-ref name="setResistor" scoped="" ref="0x10d5e5a38"/>
        <function-ref name="toggle" scoped="" ref="0x10d5e5bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x10d5e5d48"/>
        <function-ref name="getResistor" scoped="" ref="0x10d5e4020"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d5e41a8"/>
        <function-ref name="get" scoped="" ref="0x10d5e4330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10d5e44b8"/>
        <function-ref name="getRaw" scoped="" ref="0x10d5e4640"/>
        <function-ref name="set" scoped="" ref="0x10d5e47c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10d5e4950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10d5e4ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10d5e4d60"/>
        <function-ref name="clr" scoped="" ref="0x10d5e3020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x10d653da0" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x10d653da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d642170"/>
        <function-ref name="isInput" scoped="" ref="0x10d6422f8"/>
        <function-ref name="setResistor" scoped="" ref="0x10d642480"/>
        <function-ref name="toggle" scoped="" ref="0x10d642608"/>
        <function-ref name="isOutput" scoped="" ref="0x10d642790"/>
        <function-ref name="getResistor" scoped="" ref="0x10d642918"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d642aa0"/>
        <function-ref name="get" scoped="" ref="0x10d642c28"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10d642db0"/>
        <function-ref name="getRaw" scoped="" ref="0x10d641020"/>
        <function-ref name="set" scoped="" ref="0x10d6411a8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10d641330"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10d6414b8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10d641740"/>
        <function-ref name="clr" scoped="" ref="0x10d6418c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x10d654c30" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x10d654c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d653020"/>
        <function-ref name="isInput" scoped="" ref="0x10d6531a8"/>
        <function-ref name="toggle" scoped="" ref="0x10d653330"/>
        <function-ref name="isOutput" scoped="" ref="0x10d6534b8"/>
        <function-ref name="get" scoped="" ref="0x10d653640"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d6537c8"/>
        <function-ref name="set" scoped="" ref="0x10d653950"/>
        <function-ref name="clr" scoped="" ref="0x10d653ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x10d63e5f8" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x10d63e5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d63e948"/>
        <function-ref name="isInput" scoped="" ref="0x10d63ead0"/>
        <function-ref name="setResistor" scoped="" ref="0x10d63ec58"/>
        <function-ref name="toggle" scoped="" ref="0x10d63ede0"/>
        <function-ref name="isOutput" scoped="" ref="0x10d63d020"/>
        <function-ref name="getResistor" scoped="" ref="0x10d63d1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d63d330"/>
        <function-ref name="get" scoped="" ref="0x10d63d4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10d63d640"/>
        <function-ref name="getRaw" scoped="" ref="0x10d63d7c8"/>
        <function-ref name="set" scoped="" ref="0x10d63d950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10d63dad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10d63dc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10d63c020"/>
        <function-ref name="clr" scoped="" ref="0x10d63c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x10d63f448" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x10d63f448"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d63f798"/>
        <function-ref name="isInput" scoped="" ref="0x10d63f920"/>
        <function-ref name="toggle" scoped="" ref="0x10d63faa8"/>
        <function-ref name="isOutput" scoped="" ref="0x10d63fc30"/>
        <function-ref name="get" scoped="" ref="0x10d63fdb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d63e020"/>
        <function-ref name="set" scoped="" ref="0x10d63e1a8"/>
        <function-ref name="clr" scoped="" ref="0x10d63e330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x10d63ae20" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x10d63ae20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d6721a8"/>
        <function-ref name="isInput" scoped="" ref="0x10d672330"/>
        <function-ref name="setResistor" scoped="" ref="0x10d6724b8"/>
        <function-ref name="toggle" scoped="" ref="0x10d672640"/>
        <function-ref name="isOutput" scoped="" ref="0x10d6727c8"/>
        <function-ref name="getResistor" scoped="" ref="0x10d672950"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d672ad8"/>
        <function-ref name="get" scoped="" ref="0x10d672c60"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10d672de8"/>
        <function-ref name="getRaw" scoped="" ref="0x10d671020"/>
        <function-ref name="set" scoped="" ref="0x10d6711a8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10d671330"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10d6714b8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10d671740"/>
        <function-ref name="clr" scoped="" ref="0x10d6718c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x10d63bcd0" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x10d63bcd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10d63a0a0"/>
        <function-ref name="isInput" scoped="" ref="0x10d63a228"/>
        <function-ref name="toggle" scoped="" ref="0x10d63a3b0"/>
        <function-ref name="isOutput" scoped="" ref="0x10d63a538"/>
        <function-ref name="get" scoped="" ref="0x10d63a6c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10d63a848"/>
        <function-ref name="set" scoped="" ref="0x10d63a9d0"/>
        <function-ref name="clr" scoped="" ref="0x10d63ab58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x10cd26020" loc="55:../../tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x10cd26020"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x10cd26370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x10cb733c8" loc="51:../../tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x10cb733c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x10cb73718"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x10cdf2800" loc="52:../../tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerState" scoped="" ref="0x10cdf2800"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x10cdf2b50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430ClockInit" ref="0x10cf856c8" loc="39:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosb/MoteClockP.nc">
      <component-ref qname="MoteClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x10cf856c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x10d659640"/>
        <function-ref name="initTimerB" scoped="" ref="0x10cf85ba0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x10cf85d28"/>
        <function-ref name="initTimerA" scoped="" ref="0x10d659020"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x10cf85a18"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x10d6591a8"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x10d659330"/>
        <function-ref name="initClocks" scoped="" ref="0x10d6594b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x10d689140" loc="60:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x10d689140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10d689490"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x10cf719b0" loc="57:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x10cf719b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x10cf71d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x10d68b9f8" loc="59:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PlatformInit" scoped="" ref="0x10d68b9f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10d68bd48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x10d68b020" loc="58:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x10d68b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10d68b370"/>
        <function-ref name="taskLoop" scoped="" ref="0x10d68b4f8"/>
        <function-ref name="runNextTask" scoped="" ref="0x10d68b680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x10caffca0" loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x10caffca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10c876790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x10cabe020"/>
        <function-ref name="runTask" scoped="" ref="0x10cabe1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x10caf8390" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x10caf8390"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10caf86e0"/>
        <function-ref name="taskLoop" scoped="" ref="0x10caf8868"/>
        <function-ref name="runNextTask" scoped="" ref="0x10caf89f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x10cf33020" loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x10cf33020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10c876790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x10cf33370"/>
        <function-ref name="runTask" scoped="" ref="0x10cf334f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x10cf304e0" loc="57:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x10cf304e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x10cf30830"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x10cf350c0" loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x10cf350c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10cf35410"/>
        <function-ref name="taskLoop" scoped="" ref="0x10cf35598"/>
        <function-ref name="runNextTask" scoped="" ref="0x10cf35720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMControl" ref="0x10d696968" loc="55:RadioCountToLedsC.nc">
      <component-ref qname="RadioCountToLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMControl" scoped="" ref="0x10d696968"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x10d696cb8"/>
        <function-ref name="stop" scoped="" ref="0x10d696e40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x10d67cbc8" loc="50:RadioCountToLedsC.nc">
      <component-ref qname="RadioCountToLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x10d67cbc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x10d67b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x10d6a9178" loc="52:RadioCountToLedsC.nc">
      <component-ref qname="RadioCountToLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x10d6a9178"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x10d6a94c8"/>
        <function-ref name="getPayload" scoped="" ref="0x10d6a9650"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x10d6a97d8"/>
        <function-ref name="cancel" scoped="" ref="0x10d6a9960"/>
        <function-ref name="sendDone" scoped="" ref="0x10d6a9ae8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime" ref="0x10d69c108" loc="54:RadioCountToLedsC.nc">
      <component-ref qname="RadioCountToLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x10d69c108"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10d680a18"/>
            <typename><typedef-ref name="TMilli" ref="0x10d680d70"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x10d69cc88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x10d698020" loc="56:RadioCountToLedsC.nc">
      <component-ref qname="RadioCountToLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x10d698020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10d698370"/>
        <function-ref name="payloadLength" scoped="" ref="0x10d6984f8"/>
        <function-ref name="getPayload" scoped="" ref="0x10d698680"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x10d698808"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x10d698990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LplxPacket" ref="0x10d6c2be8" loc="57:RadioCountToLedsC.nc">
      <component-ref qname="RadioCountToLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LplxPacket" scoped="" ref="0x10d6c2be8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LplxPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setOppoRouting" scoped="" ref="0x10d695020"/>
        <function-ref name="clearSettings" scoped="" ref="0x10d6951a8"/>
        <function-ref name="setPacketBulk" scoped="" ref="0x10d695330"/>
        <function-ref name="getPacketBulk" scoped="" ref="0x10d6954b8"/>
        <function-ref name="setPacketCI" scoped="" ref="0x10d695640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x10d67b2b0" loc="51:RadioCountToLedsC.nc">
      <component-ref qname="RadioCountToLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x10d67b2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x10d67b600"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MilliTimer" ref="0x10d6a05a0" loc="53:RadioCountToLedsC.nc">
      <component-ref qname="RadioCountToLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MilliTimer" scoped="" ref="0x10d6a05a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10d680a18"/>
            <typename><typedef-ref name="TMilli" ref="0x10d680d70"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x10d69e8f0"/>
        <function-ref name="fired" scoped="" ref="0x10d679020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x10d679d10"/>
        <function-ref name="isOneShot" scoped="" ref="0x10d6798c0"/>
        <function-ref name="getdt" scoped="" ref="0x10d69d1c0"/>
        <function-ref name="gett0" scoped="" ref="0x10d69ed40"/>
        <function-ref name="isRunning" scoped="" ref="0x10d679470"/>
        <function-ref name="startPeriodic" scoped="" ref="0x10d67a118"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x10d69e320"/>
        <function-ref name="startOneShot" scoped="" ref="0x10d67a5b8"/>
        <function-ref name="stop" scoped="" ref="0x10d67aa58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x10d67d678" loc="49:RadioCountToLedsC.nc">
      <component-ref qname="RadioCountToLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x10d67d678"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x10d67d9c8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x10d67db50"/>
        <function-ref name="led1On" scoped="" ref="0x10d67dcd8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x10d67de60"/>
        <function-ref name="led2Toggle" scoped="" ref="0x10d67c020"/>
        <function-ref name="get" scoped="" ref="0x10d67c1a8"/>
        <function-ref name="led1Off" scoped="" ref="0x10d67c330"/>
        <function-ref name="led2Off" scoped="" ref="0x10d67c950"/>
        <function-ref name="set" scoped="" ref="0x10d67c4b8"/>
        <function-ref name="led0On" scoped="" ref="0x10d67c640"/>
        <function-ref name="led2On" scoped="" ref="0x10d67c7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Acks" ref="0x10d6bb320" loc="58:RadioCountToLedsC.nc">
      <component-ref qname="RadioCountToLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x10d6bb320"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x10d6bb670"/>
        <function-ref name="noAck" scoped="" ref="0x10d6bb7f8"/>
        <function-ref name="wasAcked" scoped="" ref="0x10d6bb980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x10da74c20" loc="49:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="RadioCountToLedsAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x10da74c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x10da73020"/>
        <function-ref name="getPayload" scoped="" ref="0x10da731a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x10da73330"/>
        <function-ref name="cancel" scoped="" ref="0x10da734b8"/>
        <function-ref name="sendDone" scoped="" ref="0x10da73640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x10da73888" loc="50:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="RadioCountToLedsAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x10da73888"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10da73bd8"/>
        <function-ref name="payloadLength" scoped="" ref="0x10da73d60"/>
        <function-ref name="getPayload" scoped="" ref="0x10da72020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x10da721a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x10da72330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x10da72578" loc="51:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="RadioCountToLedsAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x10da72578"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x10da728c8"/>
        <function-ref name="source" scoped="" ref="0x10da72a50"/>
        <function-ref name="address" scoped="" ref="0x10da72bd8"/>
        <function-ref name="destination" scoped="" ref="0x10da72d60"/>
        <function-ref name="setSource" scoped="" ref="0x10da71020"/>
        <function-ref name="setDestination" scoped="" ref="0x10da711a8"/>
        <function-ref name="type" scoped="" ref="0x10da71330"/>
        <function-ref name="setType" scoped="" ref="0x10da714b8"/>
        <function-ref name="isForMe" scoped="" ref="0x10da71640"/>
        <function-ref name="setGroup" scoped="" ref="0x10da717c8"/>
        <function-ref name="localGroup" scoped="" ref="0x10da71950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x10da71bd8" loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="RadioCountToLedsAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x10da71bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x10da70020"/>
        <function-ref name="noAck" scoped="" ref="0x10da701a8"/>
        <function-ref name="wasAcked" scoped="" ref="0x10da70330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x10de8e020" loc="49:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="RadioCountToLedsAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x10de8e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x10de8e370"/>
        <function-ref name="getPayload" scoped="" ref="0x10de8e4f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x10de8e680"/>
        <function-ref name="cancel" scoped="" ref="0x10de8e808"/>
        <function-ref name="sendDone" scoped="" ref="0x10de8e990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x10de8ebd8" loc="50:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="RadioCountToLedsAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x10de8ebd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10de8d020"/>
        <function-ref name="payloadLength" scoped="" ref="0x10de8d1a8"/>
        <function-ref name="getPayload" scoped="" ref="0x10de8d330"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x10de8d4b8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x10de8d640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x10de8d888" loc="51:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="RadioCountToLedsAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x10de8d888"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x10de8dbd8"/>
        <function-ref name="source" scoped="" ref="0x10de8dd60"/>
        <function-ref name="address" scoped="" ref="0x10de8c020"/>
        <function-ref name="destination" scoped="" ref="0x10de8c1a8"/>
        <function-ref name="setSource" scoped="" ref="0x10de8c330"/>
        <function-ref name="setDestination" scoped="" ref="0x10de8c4b8"/>
        <function-ref name="type" scoped="" ref="0x10de8c640"/>
        <function-ref name="setType" scoped="" ref="0x10de8c7c8"/>
        <function-ref name="isForMe" scoped="" ref="0x10de8c950"/>
        <function-ref name="setGroup" scoped="" ref="0x10de8cad8"/>
        <function-ref name="localGroup" scoped="" ref="0x10de8cc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x10de8b020" loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="RadioCountToLedsAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x10de8b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x10de8b370"/>
        <function-ref name="noAck" scoped="" ref="0x10de8b4f8"/>
        <function-ref name="wasAcked" scoped="" ref="0x10de8b680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x10de82710" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="RadioCountToLedsAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x10de82710"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x10de82a60"/>
        <function-ref name="getPayload" scoped="" ref="0x10de82be8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x10de82d70"/>
        <function-ref name="cancel" scoped="" ref="0x10de81020"/>
        <function-ref name="sendDone" scoped="" ref="0x10de811a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x10de81450" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="RadioCountToLedsAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x10de81450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x10de817a0"/>
        <function-ref name="getPayload" scoped="" ref="0x10de81928"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x10de81ab0"/>
        <function-ref name="cancel" scoped="" ref="0x10de81c38"/>
        <function-ref name="sendDone" scoped="" ref="0x10de81dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x10de7f060" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="RadioCountToLedsAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x10de7f060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x10de7f3b0"/>
        <function-ref name="source" scoped="" ref="0x10de7f538"/>
        <function-ref name="address" scoped="" ref="0x10de7f6c0"/>
        <function-ref name="destination" scoped="" ref="0x10de7f848"/>
        <function-ref name="setSource" scoped="" ref="0x10de7f9d0"/>
        <function-ref name="setDestination" scoped="" ref="0x10de7fb58"/>
        <function-ref name="type" scoped="" ref="0x10de7fce0"/>
        <function-ref name="setType" scoped="" ref="0x10de7fe68"/>
        <function-ref name="isForMe" scoped="" ref="0x10de7e020"/>
        <function-ref name="setGroup" scoped="" ref="0x10de7e1a8"/>
        <function-ref name="localGroup" scoped="" ref="0x10de7e330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x10d71c020" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x10d71c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10c876790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x10d71c370"/>
        <function-ref name="getPayload" scoped="" ref="0x10d71c4f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x10d71c680"/>
        <function-ref name="cancel" scoped="" ref="0x10d71c808"/>
        <function-ref name="sendDone" scoped="" ref="0x10d71c990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x10d74b060" loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x10d74b060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x10d0d43b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x10d74b3d0"/>
        <function-ref name="getPayload" scoped="" ref="0x10d74b558"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x10d74b6e0"/>
        <function-ref name="cancel" scoped="" ref="0x10d74b868"/>
        <function-ref name="sendDone" scoped="" ref="0x10d74b9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x10d74c2c8" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x10d74c2c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10c876790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x10d74c638"/>
        <function-ref name="getPayload" scoped="" ref="0x10d74c7c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x10d74c948"/>
        <function-ref name="cancel" scoped="" ref="0x10d74cad0"/>
        <function-ref name="sendDone" scoped="" ref="0x10d74cc58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x10d749268" loc="50:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x10d749268"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10d7495b8"/>
        <function-ref name="payloadLength" scoped="" ref="0x10d749740"/>
        <function-ref name="getPayload" scoped="" ref="0x10d7498c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x10d749a50"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x10d749bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x10d748020" loc="169:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="errorTask" scoped="" ref="0x10d748020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x10d748370"/>
        <function-ref name="runTask" scoped="" ref="0x10d7484f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x10d7487c0" loc="126:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CancelTask" scoped="" ref="0x10d7487c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x10d748b10"/>
        <function-ref name="runTask" scoped="" ref="0x10d748c98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x10d74bc38" loc="49:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x10d74bc38"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x10d74a020"/>
        <function-ref name="source" scoped="" ref="0x10d74a1a8"/>
        <function-ref name="address" scoped="" ref="0x10d74a330"/>
        <function-ref name="destination" scoped="" ref="0x10d74a4b8"/>
        <function-ref name="setSource" scoped="" ref="0x10d74a640"/>
        <function-ref name="setDestination" scoped="" ref="0x10d74a7c8"/>
        <function-ref name="type" scoped="" ref="0x10d74a950"/>
        <function-ref name="setType" scoped="" ref="0x10d74aad8"/>
        <function-ref name="isForMe" scoped="" ref="0x10d74ac60"/>
        <function-ref name="setGroup" scoped="" ref="0x10d74ade8"/>
        <function-ref name="localGroup" scoped="" ref="0x10d749020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LplxPacket" ref="0x10d77bc00" loc="13:../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LplxPacket" scoped="" ref="0x10d77bc00"/></type-interface>
      <instance>
        <interfacedef-ref qname="LplxPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setOppoRouting" scoped="" ref="0x10d77a020"/>
        <function-ref name="clearSettings" scoped="" ref="0x10d77a1a8"/>
        <function-ref name="setPacketBulk" scoped="" ref="0x10d77a330"/>
        <function-ref name="getPacketBulk" scoped="" ref="0x10d77a4b8"/>
        <function-ref name="setPacketCI" scoped="" ref="0x10d77a640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x10d7435b0" loc="7:../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x10d7435b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x10d0d43b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x10d743900"/>
        <function-ref name="getPayload" scoped="" ref="0x10d743a88"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x10d743c10"/>
        <function-ref name="cancel" scoped="" ref="0x10d743d98"/>
        <function-ref name="sendDone" scoped="" ref="0x10d77f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x10d77d348" loc="9:../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x10d77d348"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x10d0d43b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x10d77d698"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x10d77d920" loc="11:../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x10d77d920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10d77dc70"/>
        <function-ref name="payloadLength" scoped="" ref="0x10d77ddf8"/>
        <function-ref name="getPayload" scoped="" ref="0x10d77c020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x10d77c1a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x10d77c330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x10d77f7a0" loc="8:../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x10d77f7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x10d0d43b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x10d77faf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x10d77a968" loc="14:../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x10d77a968"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x10d77acb8"/>
        <function-ref name="noAck" scoped="" ref="0x10d77ae40"/>
        <function-ref name="wasAcked" scoped="" ref="0x10d779020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x10d746918" loc="5:../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x10d746918"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x10d746c68"/>
        <function-ref name="stop" scoped="" ref="0x10d746df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x10d77c5d0" loc="12:../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x10d77c5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x10d77c920"/>
        <function-ref name="source" scoped="" ref="0x10d77caa8"/>
        <function-ref name="address" scoped="" ref="0x10d77cc30"/>
        <function-ref name="destination" scoped="" ref="0x10d77cdb8"/>
        <function-ref name="setSource" scoped="" ref="0x10d77b020"/>
        <function-ref name="setDestination" scoped="" ref="0x10d77b1a8"/>
        <function-ref name="type" scoped="" ref="0x10d77b330"/>
        <function-ref name="setType" scoped="" ref="0x10d77b4b8"/>
        <function-ref name="isForMe" scoped="" ref="0x10d77b640"/>
        <function-ref name="setGroup" scoped="" ref="0x10d77b7c8"/>
        <function-ref name="localGroup" scoped="" ref="0x10d77b950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LplxPacket" ref="0x10d776458" loc="12:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LplxPacket" scoped="" ref="0x10d776458"/></type-interface>
      <instance>
        <interfacedef-ref qname="LplxPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setOppoRouting" scoped="" ref="0x10d7767a8"/>
        <function-ref name="clearSettings" scoped="" ref="0x10d776930"/>
        <function-ref name="setPacketBulk" scoped="" ref="0x10d776ab8"/>
        <function-ref name="getPacketBulk" scoped="" ref="0x10d776c40"/>
        <function-ref name="setPacketCI" scoped="" ref="0x10d776dc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x10d766700" loc="22:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x10d766700"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x10d0d43b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x10d766a50"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x10d766bd8"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x10d766d60"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x10d76e020"/>
        <function-ref name="setCca" scoped="" ref="0x10d76e1a8"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x10d76e330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x10d774740" loc="14:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x10d774740"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10d774a90"/>
        <function-ref name="payloadLength" scoped="" ref="0x10d774c18"/>
        <function-ref name="getPayload" scoped="" ref="0x10d774da0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x10d773020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x10d7731a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioControl" ref="0x10d779ca8" loc="11:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioControl" scoped="" ref="0x10d779ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x10d776020"/>
        <function-ref name="stop" scoped="" ref="0x10d7761a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x10d7728e8" loc="19:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x10d7728e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x10d0d43b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x10d772c38"/>
        <function-ref name="getPayload" scoped="" ref="0x10d772dc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x10d771020"/>
        <function-ref name="cancel" scoped="" ref="0x10d7711a8"/>
        <function-ref name="sendDone" scoped="" ref="0x10d771330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OppoRouting" ref="0x10d773de8" loc="17:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OppoRouting" scoped="" ref="0x10d773de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="OppoRouting"/>
      </instance>
      <interface-functions>
        <function-ref name="setLocalMetric" scoped="" ref="0x10d772170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x10d76f628" loc="21:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x10d76f628"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x10d0d43b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x10d76f978"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x10d771ab0" loc="20:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x10d771ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x10d0d43b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x10d771e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x10d765508" loc="23:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x10d765508"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x10d0d43b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x10d765858"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x10d7734d0" loc="15:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x10d7734d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x10d773820"/>
        <function-ref name="noAck" scoped="" ref="0x10d7739a8"/>
        <function-ref name="wasAcked" scoped="" ref="0x10d773b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x10d7750c0" loc="13:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x10d7750c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x10d775410"/>
        <function-ref name="source" scoped="" ref="0x10d775598"/>
        <function-ref name="address" scoped="" ref="0x10d775720"/>
        <function-ref name="destination" scoped="" ref="0x10d7758a8"/>
        <function-ref name="setSource" scoped="" ref="0x10d775a30"/>
        <function-ref name="setDestination" scoped="" ref="0x10d775bb8"/>
        <function-ref name="type" scoped="" ref="0x10d775d40"/>
        <function-ref name="setType" scoped="" ref="0x10d774020"/>
        <function-ref name="isForMe" scoped="" ref="0x10d7741a8"/>
        <function-ref name="setGroup" scoped="" ref="0x10d774330"/>
        <function-ref name="localGroup" scoped="" ref="0x10d7744b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x10d793c50" loc="17:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x10d793c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x10d798020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x10d799020" loc="15:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x10d799020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x10d799370"/>
        <function-ref name="getPayload" scoped="" ref="0x10d7994f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x10d799680"/>
        <function-ref name="cancel" scoped="" ref="0x10d799808"/>
        <function-ref name="sendDone" scoped="" ref="0x10d799990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LplxPacket" ref="0x10d798948" loc="19:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LplxPacket" scoped="" ref="0x10d798948"/></type-interface>
      <instance>
        <interfacedef-ref qname="LplxPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setOppoRouting" scoped="" ref="0x10d798c98"/>
        <function-ref name="clearSettings" scoped="" ref="0x10d798e20"/>
        <function-ref name="setPacketBulk" scoped="" ref="0x10d797020"/>
        <function-ref name="getPacketBulk" scoped="" ref="0x10d7971a8"/>
        <function-ref name="setPacketCI" scoped="" ref="0x10d797330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x10d79a020" loc="11:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x10d79a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x10d0d43b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x10d79a370"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x10d79a4f8"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x10d79a680"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x10d79a808"/>
        <function-ref name="setCca" scoped="" ref="0x10d79a990"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x10d79ab18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x10d79b4e8" loc="10:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x10d79b4e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x10d0d43b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x10d79b838"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x10d792bd8" loc="21:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x10d792bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10d791020"/>
        <function-ref name="payloadLength" scoped="" ref="0x10d7911a8"/>
        <function-ref name="getPayload" scoped="" ref="0x10d791330"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x10d7914b8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x10d791640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x10d764d10" loc="7:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x10d764d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x10d0d43b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x10d79e0a0"/>
        <function-ref name="getPayload" scoped="" ref="0x10d79e228"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x10d79e3b0"/>
        <function-ref name="cancel" scoped="" ref="0x10d79e538"/>
        <function-ref name="sendDone" scoped="" ref="0x10d79e6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x10d79c9b8" loc="9:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x10d79c9b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x10d0d43b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x10d79cd08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x10d79ee40" loc="8:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x10d79ee40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x10d0d43b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x10d79c1c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BulkSend" ref="0x10d7932b8" loc="16:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BulkSend" scoped="" ref="0x10d7932b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BulkSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x10d793608"/>
        <function-ref name="cancel" scoped="" ref="0x10d793790"/>
        <function-ref name="sendDone" scoped="" ref="0x10d793918"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x10d7918b8" loc="22:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x10d7918b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x10d791d08"/>
        <function-ref name="led0Toggle" scoped="" ref="0x10d790020"/>
        <function-ref name="led1On" scoped="" ref="0x10d7901a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x10d790330"/>
        <function-ref name="led2Toggle" scoped="" ref="0x10d7904b8"/>
        <function-ref name="get" scoped="" ref="0x10d790640"/>
        <function-ref name="led1Off" scoped="" ref="0x10d7907c8"/>
        <function-ref name="led2Off" scoped="" ref="0x10d790de8"/>
        <function-ref name="set" scoped="" ref="0x10d790950"/>
        <function-ref name="led0On" scoped="" ref="0x10d790ad8"/>
        <function-ref name="led2On" scoped="" ref="0x10d790c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x10d7975d0" loc="20:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x10d7975d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x10d797920"/>
        <function-ref name="source" scoped="" ref="0x10d797aa8"/>
        <function-ref name="address" scoped="" ref="0x10d797c30"/>
        <function-ref name="destination" scoped="" ref="0x10d797db8"/>
        <function-ref name="setSource" scoped="" ref="0x10d792020"/>
        <function-ref name="setDestination" scoped="" ref="0x10d7921a8"/>
        <function-ref name="type" scoped="" ref="0x10d792330"/>
        <function-ref name="setType" scoped="" ref="0x10d7924b8"/>
        <function-ref name="isForMe" scoped="" ref="0x10d792640"/>
        <function-ref name="setGroup" scoped="" ref="0x10d7927c8"/>
        <function-ref name="localGroup" scoped="" ref="0x10d792950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSnoop" ref="0x10d798348" loc="18:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSnoop" scoped="" ref="0x10d798348"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x10d798698"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x10d7d1338" loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x10d7d1338"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x10d7d1688"/>
        <function-ref name="changed" scoped="" ref="0x10d7d1810"/>
        <function-ref name="amGroup" scoped="" ref="0x10d7d1998"/>
        <function-ref name="setAddress" scoped="" ref="0x10d7d1b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioTimerUpdate" ref="0x10d7f7350" loc="9:../../tos/chips/cc2420/x-lpl/CC2420xLplC.nc">
      <component-ref qname="CC2420xLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioTimerUpdate" scoped="" ref="0x10d7f7350"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioTimerUpdate"/>
      </instance>
      <interface-functions>
        <function-ref name="startRadioTime" scoped="" ref="0x10d7f76a0"/>
        <function-ref name="counterUpdate" scoped="" ref="0x10d7f7828"/>
        <function-ref name="triggerUpdate" scoped="" ref="0x10d7f79b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioControl" ref="0x10d7bf2b8" loc="2:../../tos/chips/cc2420/x-lpl/CC2420xLplC.nc">
      <component-ref qname="CC2420xLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioControl" scoped="" ref="0x10d7bf2b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x10d7bf608"/>
        <function-ref name="stop" scoped="" ref="0x10d7bf790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x10d7bfa48" loc="3:../../tos/chips/cc2420/x-lpl/CC2420xLplC.nc">
      <component-ref qname="CC2420xLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x10d7bfa48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x10d7bfd98"/>
        <function-ref name="getPayload" scoped="" ref="0x10d7be020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x10d7be1a8"/>
        <function-ref name="cancel" scoped="" ref="0x10d7be330"/>
        <function-ref name="sendDone" scoped="" ref="0x10d7be4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x10d7fc7a0" loc="6:../../tos/chips/cc2420/x-lpl/CC2420xLplC.nc">
      <component-ref qname="CC2420xLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x10d7fc7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x10d7fcaf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OppoRouting" ref="0x10d7fcde8" loc="7:../../tos/chips/cc2420/x-lpl/CC2420xLplC.nc">
      <component-ref qname="CC2420xLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OppoRouting" scoped="" ref="0x10d7fcde8"/></type-interface>
      <instance>
        <interfacedef-ref qname="OppoRouting"/>
      </instance>
      <interface-functions>
        <function-ref name="setLocalMetric" scoped="" ref="0x10d7fb170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x10d7fc108" loc="5:../../tos/chips/cc2420/x-lpl/CC2420xLplC.nc">
      <component-ref qname="CC2420xLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x10d7fc108"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x10d7fc458"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BulkSend" ref="0x10d7be798" loc="4:../../tos/chips/cc2420/x-lpl/CC2420xLplC.nc">
      <component-ref qname="CC2420xLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BulkSend" scoped="" ref="0x10d7be798"/></type-interface>
      <instance>
        <interfacedef-ref qname="BulkSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x10d7beae8"/>
        <function-ref name="cancel" scoped="" ref="0x10d7bec70"/>
        <function-ref name="sendDone" scoped="" ref="0x10d7bedf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x10d7f1e58" loc="16:../../tos/chips/cc2420/x-lpl/CC2420xLplP.nc">
      <component-ref qname="CC2420xLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x10d7f1e58"/></type-interface>
      <instance>
        <interfacedef-ref qname="LplSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x10d7f01e8"/>
        <function-ref name="sendDone" scoped="" ref="0x10d7f0370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x10d7f0708" loc="17:../../tos/chips/cc2420/x-lpl/CC2420xLplP.nc">
      <component-ref qname="CC2420xLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x10d7f0708"/></type-interface>
      <instance>
        <interfacedef-ref qname="LplReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="txDetect" scoped="" ref="0x10d7f0a58"/>
        <function-ref name="rxInit" scoped="" ref="0x10d7f0be0"/>
        <function-ref name="receive" scoped="" ref="0x10d7f0d68"/>
        <function-ref name="rxOn" scoped="" ref="0x10d7ef020"/>
        <function-ref name="rxBuffSet" scoped="" ref="0x10d7ef1a8"/>
        <function-ref name="rxEnable" scoped="" ref="0x10d7ef330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioTimerUpdate" ref="0x10d7f14a0" loc="14:../../tos/chips/cc2420/x-lpl/CC2420xLplP.nc">
      <component-ref qname="CC2420xLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioTimerUpdate" scoped="" ref="0x10d7f14a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioTimerUpdate"/>
      </instance>
      <interface-functions>
        <function-ref name="startRadioTime" scoped="" ref="0x10d7f17f0"/>
        <function-ref name="counterUpdate" scoped="" ref="0x10d7f1978"/>
        <function-ref name="triggerUpdate" scoped="" ref="0x10d7f1b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioControl" ref="0x10d7f3020" loc="10:../../tos/chips/cc2420/x-lpl/CC2420xLplP.nc">
      <component-ref qname="CC2420xLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioControl" scoped="" ref="0x10d7f3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x10d7f3370"/>
        <function-ref name="stop" scoped="" ref="0x10d7f34f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x10d7f37b0" loc="11:../../tos/chips/cc2420/x-lpl/CC2420xLplP.nc">
      <component-ref qname="CC2420xLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x10d7f37b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x10d7f3b00"/>
        <function-ref name="getPayload" scoped="" ref="0x10d7f3c88"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x10d7f3e10"/>
        <function-ref name="cancel" scoped="" ref="0x10d7f2020"/>
        <function-ref name="sendDone" scoped="" ref="0x10d7f21a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x10d7e6508" loc="20:../../tos/chips/cc2420/x-lpl/CC2420xLplP.nc">
      <component-ref qname="CC2420xLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x10d7e6508"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x10d7e6858"/>
        <function-ref name="rand32" scoped="" ref="0x10d7e69e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x10d7f4848" loc="9:../../tos/chips/cc2420/x-lpl/CC2420xLplP.nc">
      <component-ref qname="CC2420xLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x10d7f4848"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10d7f4b98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x10d7f2db8" loc="13:../../tos/chips/cc2420/x-lpl/CC2420xLplP.nc">
      <component-ref qname="CC2420xLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x10d7f2db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x10d7f1170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BulkSend" ref="0x10d7f2488" loc="12:../../tos/chips/cc2420/x-lpl/CC2420xLplP.nc">
      <component-ref qname="CC2420xLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BulkSend" scoped="" ref="0x10d7f2488"/></type-interface>
      <instance>
        <interfacedef-ref qname="BulkSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x10d7f27d8"/>
        <function-ref name="cancel" scoped="" ref="0x10d7f2960"/>
        <function-ref name="sendDone" scoped="" ref="0x10d7f2ae8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SleepTimer" ref="0x10d7ee020" loc="19:../../tos/chips/cc2420/x-lpl/CC2420xLplP.nc">
      <component-ref qname="CC2420xLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SleepTimer" scoped="" ref="0x10d7ee020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10d680a18"/>
            <typename><typedef-ref name="TMilli" ref="0x10d680d70"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x10d7ea2b8"/>
        <function-ref name="fired" scoped="" ref="0x10d7ed978"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x10d7eb6c8"/>
        <function-ref name="isOneShot" scoped="" ref="0x10d7eb278"/>
        <function-ref name="getdt" scoped="" ref="0x10d7eab58"/>
        <function-ref name="gett0" scoped="" ref="0x10d7ea708"/>
        <function-ref name="isRunning" scoped="" ref="0x10d7eddc8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x10d7eeb68"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x10d7ebc98"/>
        <function-ref name="startOneShot" scoped="" ref="0x10d7ed088"/>
        <function-ref name="stop" scoped="" ref="0x10d7ed528"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x10d7e6c98" loc="22:../../tos/chips/cc2420/x-lpl/CC2420xLplP.nc">
      <component-ref qname="CC2420xLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x10d7e6c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x10d7e8020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x10d7e81a8"/>
        <function-ref name="led1On" scoped="" ref="0x10d7e8330"/>
        <function-ref name="led1Toggle" scoped="" ref="0x10d7e84b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x10d7e8640"/>
        <function-ref name="get" scoped="" ref="0x10d7e87c8"/>
        <function-ref name="led1Off" scoped="" ref="0x10d7e8950"/>
        <function-ref name="led2Off" scoped="" ref="0x10d7e7020"/>
        <function-ref name="set" scoped="" ref="0x10d7e8ad8"/>
        <function-ref name="led0On" scoped="" ref="0x10d7e8c60"/>
        <function-ref name="led2On" scoped="" ref="0x10d7e8de8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LplTime" ref="0x10d7ef600" loc="18:../../tos/chips/cc2420/x-lpl/CC2420xLplP.nc">
      <component-ref qname="CC2420xLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LplTime" scoped="" ref="0x10d7ef600"/></type-interface>
      <instance>
        <interfacedef-ref qname="LplTime"/>
      </instance>
      <interface-functions>
        <function-ref name="timeRadio" scoped="" ref="0x10d7ef950"/>
        <function-ref name="timeCompensated" scoped="" ref="0x10d7efad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x10d8541c8" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="CC2420xLplC.SleepTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x10d8541c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10d680a18"/>
            <typename><typedef-ref name="TMilli" ref="0x10d680d70"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x10da165f0"/>
        <function-ref name="fired" scoped="" ref="0x10d9d2af0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x10da178c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x10da17470"/>
        <function-ref name="getdt" scoped="" ref="0x10da15020"/>
        <function-ref name="gett0" scoped="" ref="0x10da16a40"/>
        <function-ref name="isRunning" scoped="" ref="0x10da17020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x10d854d10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x10da16020"/>
        <function-ref name="startOneShot" scoped="" ref="0x10d9d2200"/>
        <function-ref name="stop" scoped="" ref="0x10d9d26a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x10d84ca18" loc="49:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x10d84ca18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10d680a18"/>
            <typename><typedef-ref name="TMilli" ref="0x10d680d70"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10c876790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x10d848d60"/>
        <function-ref name="fired" scoped="" ref="0x10d84a470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x10d8481c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x10d84ad10"/>
        <function-ref name="getdt" scoped="" ref="0x10d847648"/>
        <function-ref name="gett0" scoped="" ref="0x10d8471f8"/>
        <function-ref name="isRunning" scoped="" ref="0x10d84a8c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x10d84b5a0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x10d848790"/>
        <function-ref name="startOneShot" scoped="" ref="0x10d84ba40"/>
        <function-ref name="stop" scoped="" ref="0x10d84a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x10d8421c8" loc="35:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x10d8421c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10d680a18"/>
            <typename><typedef-ref name="TMilli" ref="0x10d680d70"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10c876790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x10d83f5f0"/>
        <function-ref name="fired" scoped="" ref="0x10d841af0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x10d8408c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x10d840470"/>
        <function-ref name="getdt" scoped="" ref="0x10d83d020"/>
        <function-ref name="gett0" scoped="" ref="0x10d83fa40"/>
        <function-ref name="isRunning" scoped="" ref="0x10d840020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x10d842d10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x10d83f020"/>
        <function-ref name="startOneShot" scoped="" ref="0x10d841200"/>
        <function-ref name="stop" scoped="" ref="0x10d8416a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x10d83d5e0" loc="36:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x10d83d5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10d680a18"/>
            <typename><typedef-ref name="TMilli" ref="0x10d680d70"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x10d87d190"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x10d845430" loc="34:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x10d845430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10d845780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x10d9584b8" loc="33:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x10d9584b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10d680a18"/>
            <typename><typedef-ref name="TMilli" ref="0x10d680d70"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10c877020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x10d956b18"/>
        <function-ref name="fired" scoped="" ref="0x10d957b90"/>
        <function-ref name="startAt" scoped="" ref="0x10d956510"/>
        <function-ref name="isRunning" scoped="" ref="0x10d956088"/>
        <function-ref name="getAlarm" scoped="" ref="0x10d955020"/>
        <function-ref name="start" scoped="" ref="0x10d957230"/>
        <function-ref name="stop" scoped="" ref="0x10d957708"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x10d87ab40" loc="32:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x10d87ab40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10d958020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x10dee0b40" loc="33:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x10dee0b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10d67e1d8"/>
            <typename><typedef-ref name="T32khz" ref="0x10d67e530"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10c876b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x10dedc238"/>
        <function-ref name="fired" scoped="" ref="0x10dedd2b0"/>
        <function-ref name="startAt" scoped="" ref="0x10deddbc0"/>
        <function-ref name="isRunning" scoped="" ref="0x10dedd738"/>
        <function-ref name="getAlarm" scoped="" ref="0x10dedc6c0"/>
        <function-ref name="start" scoped="" ref="0x10dede8f8"/>
        <function-ref name="stop" scoped="" ref="0x10dededd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x10dee0358" loc="32:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x10dee0358"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10dee06a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x10dec6740" loc="30:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x10dec6740"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10dec6a90"/>
        <function-ref name="setEvent" scoped="" ref="0x10dec6c18"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x10dec6da0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x10dec5020"/>
        <function-ref name="fired" scoped="" ref="0x10dec51a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x10decae60" loc="28:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x10decae60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10dec81e8"/>
        <function-ref name="setClockSource" scoped="" ref="0x10dec8370"/>
        <function-ref name="enableEvents" scoped="" ref="0x10dec84f8"/>
        <function-ref name="get" scoped="" ref="0x10dec8680"/>
        <function-ref name="disableEvents" scoped="" ref="0x10dec8808"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10dec8990"/>
        <function-ref name="getMode" scoped="" ref="0x10dec8b18"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10dec8ca0"/>
        <function-ref name="overflow" scoped="" ref="0x10dec8e28"/>
        <function-ref name="setMode" scoped="" ref="0x10dec7020"/>
        <function-ref name="setInputDivider" scoped="" ref="0x10dec71a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x10dec7430" loc="29:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x10dec7430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x10dec7780"/>
        <function-ref name="getControl" scoped="" ref="0x10dec7908"/>
        <function-ref name="enableEvents" scoped="" ref="0x10dec7a90"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x10dec7c18"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x10dec7da0"/>
        <function-ref name="disableEvents" scoped="" ref="0x10dec6020"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x10dec61a8"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x10dec6330"/>
        <function-ref name="setControl" scoped="" ref="0x10dec64b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x10d89c498" loc="10:../../tos/chips/msp430/timer/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x10d89c498"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10c876790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10d89c7e8"/>
        <function-ref name="setEvent" scoped="" ref="0x10d89c970"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x10d89caf8"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x10d89cc80"/>
        <function-ref name="fired" scoped="" ref="0x10d89ce08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x10d85e020" loc="8:../../tos/chips/msp430/timer/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x10d85e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10c876790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10d85e370"/>
        <function-ref name="setClockSource" scoped="" ref="0x10d85e4f8"/>
        <function-ref name="enableEvents" scoped="" ref="0x10d85e680"/>
        <function-ref name="get" scoped="" ref="0x10d85e808"/>
        <function-ref name="disableEvents" scoped="" ref="0x10d85e990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10d85eb18"/>
        <function-ref name="getMode" scoped="" ref="0x10d85eca0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10d85ee28"/>
        <function-ref name="overflow" scoped="" ref="0x10d85d020"/>
        <function-ref name="setMode" scoped="" ref="0x10d85d1a8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x10d85d330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x10d85db60" loc="9:../../tos/chips/msp430/timer/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x10d85db60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10c876790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x10d89d020"/>
        <function-ref name="getControl" scoped="" ref="0x10d89d1a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x10d89d330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x10d89d4b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x10d89d640"/>
        <function-ref name="disableEvents" scoped="" ref="0x10d89d7c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x10d89d950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x10d89dad8"/>
        <function-ref name="setControl" scoped="" ref="0x10d89dc60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x10df17020" loc="40:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x10df17020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10df17370"/>
        <function-ref name="setEvent" scoped="" ref="0x10df174f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x10df17680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x10df17808"/>
        <function-ref name="fired" scoped="" ref="0x10df17990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x10df1a5a8" loc="38:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x10df1a5a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10df1a8f8"/>
        <function-ref name="setClockSource" scoped="" ref="0x10df1aa80"/>
        <function-ref name="enableEvents" scoped="" ref="0x10df1ac08"/>
        <function-ref name="get" scoped="" ref="0x10df1ad90"/>
        <function-ref name="disableEvents" scoped="" ref="0x10df19020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10df191a8"/>
        <function-ref name="getMode" scoped="" ref="0x10df19330"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10df194b8"/>
        <function-ref name="overflow" scoped="" ref="0x10df19640"/>
        <function-ref name="setMode" scoped="" ref="0x10df197c8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x10df19950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x10dec3648" loc="37:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x10dec3648"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10d67e1d8"/>
            <typename><typedef-ref name="T32khz" ref="0x10d67e530"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10c876b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x10df1bcc0"/>
        <function-ref name="fired" scoped="" ref="0x10dec2d50"/>
        <function-ref name="startAt" scoped="" ref="0x10df1b6b8"/>
        <function-ref name="isRunning" scoped="" ref="0x10df1b230"/>
        <function-ref name="getAlarm" scoped="" ref="0x10df1a190"/>
        <function-ref name="start" scoped="" ref="0x10dec23f0"/>
        <function-ref name="stop" scoped="" ref="0x10dec28c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x10dec4d90" loc="36:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x10dec4d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10dec3170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x10df19bd8" loc="39:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x10df19bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x10df18020"/>
        <function-ref name="getControl" scoped="" ref="0x10df181a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x10df18330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x10df184b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x10df18640"/>
        <function-ref name="disableEvents" scoped="" ref="0x10df187c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x10df18950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x10df18ad8"/>
        <function-ref name="setControl" scoped="" ref="0x10df18c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x10df17c18" loc="41:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x10df17c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x10df16020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x10df161a8"/>
        <function-ref name="led1On" scoped="" ref="0x10df16330"/>
        <function-ref name="led1Toggle" scoped="" ref="0x10df164b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x10df16640"/>
        <function-ref name="get" scoped="" ref="0x10df167c8"/>
        <function-ref name="led1Off" scoped="" ref="0x10df16950"/>
        <function-ref name="led0On" scoped="" ref="0x10df15020"/>
        <function-ref name="set" scoped="" ref="0x10df16c60"/>
        <function-ref name="led2On" scoped="" ref="0x10df16ad8"/>
        <function-ref name="led2Off" scoped="" ref="0x10df16de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x10d8d82e8" loc="32:../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x10d8d82e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10d680a18"/>
            <typename><typedef-ref name="TMilli" ref="0x10d680d70"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10c877020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x10d8d7088"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10d8d7998"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10d8d7510"/>
        <function-ref name="overflow" scoped="" ref="0x10d8d7e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Counter32khz" ref="0x10d8cf118" loc="32:../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <component-ref qname="Msp430Counter32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Counter32khz" scoped="" ref="0x10d8cf118"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10d67e1d8"/>
            <typename><typedef-ref name="T32khz" ref="0x10d67e530"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10c876b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x10d8cfe68"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10d8ce7a8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10d8ce320"/>
        <function-ref name="overflow" scoped="" ref="0x10d8cec30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x10d9008c0" loc="34:../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x10d9008c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10d900c10"/>
        <function-ref name="setClockSource" scoped="" ref="0x10d900d98"/>
        <function-ref name="enableEvents" scoped="" ref="0x10d8ff020"/>
        <function-ref name="get" scoped="" ref="0x10d8ff1a8"/>
        <function-ref name="disableEvents" scoped="" ref="0x10d8ff330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10d8ff4b8"/>
        <function-ref name="getMode" scoped="" ref="0x10d8ff640"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10d8ff7c8"/>
        <function-ref name="overflow" scoped="" ref="0x10d8ff950"/>
        <function-ref name="setMode" scoped="" ref="0x10d8ffad8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x10d8ffc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x10d8cb888" loc="33:../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x10d8cb888"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10d67e1d8"/>
            <typename><typedef-ref name="T32khz" ref="0x10d67e530"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10c876b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x10d901660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10d900020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10d901ae8"/>
        <function-ref name="overflow" scoped="" ref="0x10d9004a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioTimerUpdate" ref="0x10d90fad0" loc="67:../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioTimerUpdate" scoped="" ref="0x10d90fad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioTimerUpdate"/>
      </instance>
      <interface-functions>
        <function-ref name="startRadioTime" scoped="" ref="0x10d90fe20"/>
        <function-ref name="counterUpdate" scoped="" ref="0x10d90e020"/>
        <function-ref name="triggerUpdate" scoped="" ref="0x10d90e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x10d912b10" loc="66:../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x10d912b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10d67e1d8"/>
            <typename><typedef-ref name="T32khz" ref="0x10d67e530"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10c876b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x10d9118f8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10d90f230"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10d911d80"/>
        <function-ref name="overflow" scoped="" ref="0x10d90f6b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x10d8fa8d8" loc="65:../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x10d8fa8d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10d680a18"/>
            <typename><typedef-ref name="TMilli" ref="0x10d680d70"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10c877020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x10d913660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10d912020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10d913ae8"/>
        <function-ref name="overflow" scoped="" ref="0x10d9124a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x10dedaa20" loc="61:../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x10dedaa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10d680a18"/>
            <typename><typedef-ref name="TMilli" ref="0x10d680d70"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10c877020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x10ded6088"/>
        <function-ref name="fired" scoped="" ref="0x10ded8130"/>
        <function-ref name="startAt" scoped="" ref="0x10ded8a40"/>
        <function-ref name="isRunning" scoped="" ref="0x10ded85b8"/>
        <function-ref name="getAlarm" scoped="" ref="0x10ded6510"/>
        <function-ref name="start" scoped="" ref="0x10ded97a8"/>
        <function-ref name="stop" scoped="" ref="0x10ded9c80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x10ded4d20" loc="73:../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x10ded4d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10d67e1d8"/>
            <typename><typedef-ref name="T32khz" ref="0x10d67e530"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10c876b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x10ded0410"/>
        <function-ref name="fired" scoped="" ref="0x10ded14a8"/>
        <function-ref name="startAt" scoped="" ref="0x10ded1db8"/>
        <function-ref name="isRunning" scoped="" ref="0x10ded1930"/>
        <function-ref name="getAlarm" scoped="" ref="0x10ded0898"/>
        <function-ref name="start" scoped="" ref="0x10ded3ac0"/>
        <function-ref name="stop" scoped="" ref="0x10ded1020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x10ded6b38" loc="68:../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x10ded6b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10d680a18"/>
            <typename><typedef-ref name="TMilli" ref="0x10d680d70"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10c877020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x10ded58f8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10ded4230"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10ded5d80"/>
        <function-ref name="overflow" scoped="" ref="0x10ded46b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x10ded0cb0" loc="74:../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x10ded0cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x10decf0a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x10decf228"/>
        <function-ref name="led1On" scoped="" ref="0x10decf3b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x10decf538"/>
        <function-ref name="led2Toggle" scoped="" ref="0x10decf6c0"/>
        <function-ref name="get" scoped="" ref="0x10decf848"/>
        <function-ref name="led1Off" scoped="" ref="0x10decf9d0"/>
        <function-ref name="led0On" scoped="" ref="0x10dece020"/>
        <function-ref name="set" scoped="" ref="0x10decfce0"/>
        <function-ref name="led2On" scoped="" ref="0x10decfb58"/>
        <function-ref name="led2Off" scoped="" ref="0x10decfe68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x10d96a900" loc="76:../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="fired" scoped="" ref="0x10d96a900"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x10d96ac50"/>
        <function-ref name="runTask" scoped="" ref="0x10d96add8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x10d96e6b0" loc="49:../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x10d96e6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10d680a18"/>
            <typename><typedef-ref name="TMilli" ref="0x10d680d70"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10c877020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x10d96a020"/>
        <function-ref name="fired" scoped="" ref="0x10d96c020"/>
        <function-ref name="startAt" scoped="" ref="0x10d96c930"/>
        <function-ref name="isRunning" scoped="" ref="0x10d96c4a8"/>
        <function-ref name="getAlarm" scoped="" ref="0x10d96a4a8"/>
        <function-ref name="start" scoped="" ref="0x10d96d578"/>
        <function-ref name="stop" scoped="" ref="0x10d96da50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x10d973528" loc="48:../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x10d973528"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10d680a18"/>
            <typename><typedef-ref name="TMilli" ref="0x10d680d70"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x10d96f768"/>
        <function-ref name="fired" scoped="" ref="0x10d972e50"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x10d971b78"/>
        <function-ref name="isOneShot" scoped="" ref="0x10d971728"/>
        <function-ref name="getdt" scoped="" ref="0x10d96e088"/>
        <function-ref name="gett0" scoped="" ref="0x10d96fbb8"/>
        <function-ref name="isRunning" scoped="" ref="0x10d9712d8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x10d9720c0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x10d96f198"/>
        <function-ref name="startOneShot" scoped="" ref="0x10d972560"/>
        <function-ref name="stop" scoped="" ref="0x10d972a00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x10d9e6020" loc="74:../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="updateFromTimer" scoped="" ref="0x10d9e6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x10d9e6370"/>
        <function-ref name="runTask" scoped="" ref="0x10d9e64f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x10d9ed678" loc="51:../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x10d9ed678"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10d680a18"/>
            <typename><typedef-ref name="TMilli" ref="0x10d680d70"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x10d9e98f0"/>
        <function-ref name="fired" scoped="" ref="0x10d9ea020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x10d9ead10"/>
        <function-ref name="isOneShot" scoped="" ref="0x10d9ea8c0"/>
        <function-ref name="getdt" scoped="" ref="0x10d9e71c0"/>
        <function-ref name="gett0" scoped="" ref="0x10d9e9d40"/>
        <function-ref name="isRunning" scoped="" ref="0x10d9ea470"/>
        <function-ref name="startPeriodic" scoped="" ref="0x10d9eb1e8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x10d9e9320"/>
        <function-ref name="startOneShot" scoped="" ref="0x10d9eb688"/>
        <function-ref name="stop" scoped="" ref="0x10d9ebb28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioTimerUpdate" ref="0x10d9e75d8" loc="52:../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioTimerUpdate" scoped="" ref="0x10d9e75d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioTimerUpdate"/>
      </instance>
      <interface-functions>
        <function-ref name="startRadioTime" scoped="" ref="0x10d9e7928"/>
        <function-ref name="counterUpdate" scoped="" ref="0x10d9e7ab0"/>
        <function-ref name="triggerUpdate" scoped="" ref="0x10d9e7c38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x10d9f3328" loc="50:../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x10d9f3328"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10d680a18"/>
            <typename><typedef-ref name="TMilli" ref="0x10d680d70"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10c876790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x10d9ee7f0"/>
        <function-ref name="fired" scoped="" ref="0x10d9f1e10"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x10d9f0bb8"/>
        <function-ref name="isOneShot" scoped="" ref="0x10d9f0748"/>
        <function-ref name="getdt" scoped="" ref="0x10d9ed0f8"/>
        <function-ref name="gett0" scoped="" ref="0x10d9eec60"/>
        <function-ref name="isRunning" scoped="" ref="0x10d9f02d8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x10d9f1020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x10d9ee200"/>
        <function-ref name="startOneShot" scoped="" ref="0x10d9f14e0"/>
        <function-ref name="stop" scoped="" ref="0x10d9f19a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x10d9e47f8" loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x10d9e47f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10d680a18"/>
            <typename><typedef-ref name="TMilli" ref="0x10d680d70"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x10d9e33a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x10d9e39d0" loc="49:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x10d9e39d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10d680a18"/>
            <typename><typedef-ref name="TMilli" ref="0x10d680d70"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10c877020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x10d9d9768"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10d9d80c0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10d9d9bf0"/>
        <function-ref name="overflow" scoped="" ref="0x10d9d8548"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x10da0f530" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x10da0f530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x10da0f880"/>
        <function-ref name="rand32" scoped="" ref="0x10da0fa08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x10da0e4c0" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x10da0e4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10c876b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10da0f088"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x10da14758" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x10da14758"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10da14aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x10da09320" loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x10da09320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x10da09670"/>
        <function-ref name="rand32" scoped="" ref="0x10da097f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x10da0a2b8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x10da0a2b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10c876b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10da0ae00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x10da0da40" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x10da0da40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10da0dd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LplxPacket" ref="0x10d9faa08" loc="4:../../tos/chips/cc2420/x-packet/CC2420xPacketP.nc">
      <component-ref qname="CC2420xPacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LplxPacket" scoped="" ref="0x10d9faa08"/></type-interface>
      <instance>
        <interfacedef-ref qname="LplxPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setOppoRouting" scoped="" ref="0x10d9fad58"/>
        <function-ref name="clearSettings" scoped="" ref="0x10d9f7020"/>
        <function-ref name="setPacketBulk" scoped="" ref="0x10d9f71a8"/>
        <function-ref name="getPacketBulk" scoped="" ref="0x10d9f7330"/>
        <function-ref name="setPacketCI" scoped="" ref="0x10d9f74b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x10d9f6da0" loc="6:../../tos/chips/cc2420/x-packet/CC2420xPacketP.nc">
      <component-ref qname="CC2420xPacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x10d9f6da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10d9f5170"/>
        <function-ref name="payloadLength" scoped="" ref="0x10d9f52f8"/>
        <function-ref name="getPayload" scoped="" ref="0x10d9f5480"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x10d9f5608"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x10d9f5790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x10d9f7798" loc="5:../../tos/chips/cc2420/x-packet/CC2420xPacketP.nc">
      <component-ref qname="CC2420xPacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x10d9f7798"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x10d9f7ae8"/>
        <function-ref name="source" scoped="" ref="0x10d9f7c70"/>
        <function-ref name="address" scoped="" ref="0x10d9f7df8"/>
        <function-ref name="destination" scoped="" ref="0x10d9f6020"/>
        <function-ref name="setSource" scoped="" ref="0x10d9f61a8"/>
        <function-ref name="setDestination" scoped="" ref="0x10d9f6330"/>
        <function-ref name="type" scoped="" ref="0x10d9f64b8"/>
        <function-ref name="setType" scoped="" ref="0x10d9f6640"/>
        <function-ref name="isForMe" scoped="" ref="0x10d9f67c8"/>
        <function-ref name="setGroup" scoped="" ref="0x10d9f6950"/>
        <function-ref name="localGroup" scoped="" ref="0x10d9f6ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x10d9f5b68" loc="7:../../tos/chips/cc2420/x-packet/CC2420xPacketP.nc">
      <component-ref qname="CC2420xPacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x10d9f5b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x10da3c020"/>
        <function-ref name="noAck" scoped="" ref="0x10da3c1a8"/>
        <function-ref name="wasAcked" scoped="" ref="0x10da3c330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x10da68408" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="RadioCountToLedsAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x10da68408"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10da68758"/>
        <function-ref name="payloadLength" scoped="" ref="0x10da688e0"/>
        <function-ref name="getPayload" scoped="" ref="0x10da68a68"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x10da68bf0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x10da68d78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x10da6de38" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="RadioCountToLedsAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x10da6de38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x10da681c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x10da66020" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="RadioCountToLedsAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x10da66020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x10da66370"/>
        <function-ref name="source" scoped="" ref="0x10da664f8"/>
        <function-ref name="address" scoped="" ref="0x10da66680"/>
        <function-ref name="destination" scoped="" ref="0x10da66808"/>
        <function-ref name="setSource" scoped="" ref="0x10da66990"/>
        <function-ref name="setDestination" scoped="" ref="0x10da66b18"/>
        <function-ref name="type" scoped="" ref="0x10da66ca0"/>
        <function-ref name="setType" scoped="" ref="0x10da66e28"/>
        <function-ref name="isForMe" scoped="" ref="0x10da65020"/>
        <function-ref name="setGroup" scoped="" ref="0x10da651a8"/>
        <function-ref name="localGroup" scoped="" ref="0x10da65330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x10da64ce0" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="RadioCountToLedsAppC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x10da64ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10d680a18"/>
            <typename><typedef-ref name="TMilli" ref="0x10d680d70"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x10daaa088"/>
        <function-ref name="fired" scoped="" ref="0x10da62688"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x10da61470"/>
        <function-ref name="isOneShot" scoped="" ref="0x10da61020"/>
        <function-ref name="getdt" scoped="" ref="0x10daaa928"/>
        <function-ref name="gett0" scoped="" ref="0x10daaa4d8"/>
        <function-ref name="isRunning" scoped="" ref="0x10da62ad8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x10da638b8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x10da61a40"/>
        <function-ref name="startOneShot" scoped="" ref="0x10da63d58"/>
        <function-ref name="stop" scoped="" ref="0x10da62238"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Init.nc">
      <documentation loc="34:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x10cf6e1d8" loc="62:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Init.nc">
        <documentation loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10caf4780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Boot.nc">
      <documentation loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x10cf75e08" loc="60:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Boot.nc">
        <documentation loc="51:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430ClockInit" loc="27:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
      <documentation loc="22:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="defaultInitTimerB" ref="0x10cf9b020" loc="37:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerB" ref="0x10cf9e3e0" loc="32:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitTimerA" ref="0x10cf9d920" loc="36:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerA" ref="0x10cf9fd20" loc="31:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultSetupDcoCalibrate" ref="0x10cf9eaf0" loc="34:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="setupDcoCalibrate" ref="0x10cf9f020" loc="29:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initClocks" ref="0x10cf9f6a0" loc="30:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitClocks" ref="0x10cf9d258" loc="35:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x10cc4ab08" loc="62:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x10cba9ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerControl" loc="29:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
      <documentation loc="22:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="setControlAsCapture" ref="0x10cff7410" loc="44:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <documentation loc="38:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
          <short> &#10; Sets the timer in capture mode.</short>
          <long> &#10; Sets the timer in capture mode.&#10; @param cm configures the capture to occur on none, rising, falling or rising_and_falling edges&#10; Msp430Timer.h has convenience definitions:&#10; MSP430TIMER_CM_NONE, MSP430TIMER_CM_RISING, MSP430TIMER_CM_FALLING, MSP430TIMER_CM_BOTH&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10c876790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x10cff71a0" loc="44:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10c876790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControl" ref="0x10cfe4a40" loc="31:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x10cf94978"/>
            <typename><typedef-ref name="msp430_compare_control_t" ref="0x10cfb1438"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x10cff7c18" loc="46:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="areEventsEnabled" ref="0x10cff6a50" loc="48:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10caf01d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlAsCompare" ref="0x10cff9a48" loc="36:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x10cff6328" loc="47:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x10cffa1d8" loc="32:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10caf01d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearPendingInterrupt" ref="0x10cffa900" loc="33:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x10cff9338" loc="35:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x10cf94978"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x10cfb1438"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x10cff90c8" loc="35:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x10cf94978"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x10cfb1438"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Capture" loc="28:../../tos/chips/msp430/timer/Msp430Capture.nc">
      <documentation loc="22:../../tos/chips/msp430/timer/Msp430Capture.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x10d00de30" loc="33:../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="30:../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Reads the value of the last capture event in TxCCRx&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10c876b20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSynchronous" ref="0x10d007290" loc="68:../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="59:../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set whether the capture should occur synchronously or asynchronously.</short>
          <long>&#10; Set whether the capture should occur synchronously or asynchronously.&#10; TinyOS default is synchronous captures.&#10; WARNING: if the capture signal is asynchronous to the timer clock,&#10;          it could case a race condition (see Timer documentation&#10;          in MSP430F1xx user guide)&#10; @param synchronous TRUE to synchronize the timer capture with the&#10;        next timer clock instead of occurring asynchronously.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x10caf01d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="synchronous" ref="0x10d007020" loc="68:../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x10caf01d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x10d007da0" loc="75:../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="70:../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Signalled when an event is captured.</short>
          <long>&#10; Signalled when an event is captured.&#10;&#10; @param time The time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10c876b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x10d007b30" loc="75:../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10c876b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x10d008800" loc="57:../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="54:../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Clear the capture overflow flag for when multiple captures occur&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x10d008070" loc="52:../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="47:../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Determine if a capture overflow is pending.</short>
          <long>&#10; Determine if a capture overflow is pending.&#10;&#10; @return TRUE if the capture register has overflowed&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10caf01d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEdge" ref="0x10d00a788" loc="45:../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="35:../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set the edge that the capture should occur&#10;&#10; </short>
          <long>&#10; Set the edge that the capture should occur&#10;&#10; @param cm Capture Mode for edge capture.&#10; enums exist for:&#10;   MSP430TIMER_CM_NONE is no capture.&#10;   MSP430TIMER_CM_RISING is rising edge capture.&#10;   MSP430TIMER_CM_FALLING is a falling edge capture.&#10;   MSP430TIMER_CM_BOTH captures on both rising and falling edges.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10c876790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x10d00a518" loc="45:../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10c876790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Compare" loc="27:../../tos/chips/msp430/timer/Msp430Compare.nc">
      <documentation loc="22:../../tos/chips/msp430/timer/Msp430Compare.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x10cff1470" loc="29:../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10c876b20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEvent" ref="0x10cff1d78" loc="30:../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10c876b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x10cff1b08" loc="30:../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10c876b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromPrev" ref="0x10cfef728" loc="31:../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10c876b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x10cfef4b8" loc="31:../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10c876b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromNow" ref="0x10d00e0a8" loc="32:../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10c876b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x10cfefe08" loc="32:../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10c876b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x10d00e730" loc="34:../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Timer" loc="32:../../tos/chips/msp430/timer/Msp430Timer.nc">
      <documentation loc="22:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x10cfe0488" loc="41:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x10cffebd8" loc="44:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10c876b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="clockSource" ref="0x10cffe968" loc="44:../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10c876b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x10cfe0b58" loc="42:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x10cfe6920" loc="34:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10c876b20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x10cffe258" loc="43:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x10cfe27b0" loc="36:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x10cfe1dd0" loc="40:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x10cfe20d8" loc="35:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10caf01d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x10cfe2e58" loc="37:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMode" ref="0x10cfe1738" loc="39:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x10cfe14c8" loc="39:../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInputDivider" ref="0x10cffd5d8" loc="45:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10c876b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="inputDivider" ref="0x10cffd368" loc="45:../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10c876b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerEvent" loc="26:../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
      <documentation loc="22:../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x10d018da0" loc="28:../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <interfacedef-ref qname="Msp430TimerEvent"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Leds.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x10d0c0550" loc="61:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="58:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x10d0c0c88" loc="67:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="63:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x10d0bf420" loc="72:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="69:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x10d0bd2a8" loc="83:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="79:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x10d0bc8b0" loc="100:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="96:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x10d0bb070" loc="117:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="103:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10c876790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x10d0bfb38" loc="77:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="74:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x10d0bbb70" loc="134:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="120:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10c876790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x10d0bb900" loc="134:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10c876790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x10d0c1df8" loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x10d0bda18" loc="89:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="86:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x10d0bc178" loc="94:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="91:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Receive.nc">
      <documentation loc="34:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x10d234160" loc="78:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Receive.nc">
        <documentation loc="58:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10d119540"/>
              <typename><typedef-ref name="message_t" ref="0x10d118aa8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10d119540"/>
                <typename><typedef-ref name="message_t" ref="0x10d118aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10c876790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x10d216820" loc="78:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10d119540"/>
                <typename><typedef-ref name="message_t" ref="0x10d118aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x10d216b48" loc="78:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x10d216e58" loc="78:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10c876790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="OppoRouting" loc="1:../../tos/chips/cc2420/interfaces/OppoRouting.nc">
      <function command="" provided="0" name="setLocalMetric" ref="0x10d235d98" loc="2:../../tos/chips/cc2420/interfaces/OppoRouting.nc">
        <interfacedef-ref qname="OppoRouting"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10c876b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="metric" ref="0x10d235b28" loc="2:../../tos/chips/cc2420/interfaces/OppoRouting.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10c876b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LplSend" loc="1:../../tos/chips/cc2420/interfaces/LplSend.nc">
      <function command="" provided="0" name="send" ref="0x10d214020" loc="3:../../tos/chips/cc2420/interfaces/LplSend.nc">
        <interfacedef-ref qname="LplSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10caf4780"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10d119540"/>
                <typename><typedef-ref name="message_t" ref="0x10d118aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:15" alignment="I:1"><nx_struct-ref ref="0x10d113590"/>
                <typename><typedef-ref name="rtx_setting_t" ref="0x10d112020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x10d2188c0" loc="3:../../tos/chips/cc2420/interfaces/LplSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10d119540"/>
                <typename><typedef-ref name="message_t" ref="0x10d118aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ts" ref="0x10d218c40" loc="3:../../tos/chips/cc2420/interfaces/LplSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:15" alignment="I:1"><nx_struct-ref ref="0x10d113590"/>
                <typename><typedef-ref name="rtx_setting_t" ref="0x10d112020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x10d23b0c8" loc="5:../../tos/chips/cc2420/interfaces/LplSend.nc">
        <interfacedef-ref qname="LplSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10d119540"/>
                <typename><typedef-ref name="message_t" ref="0x10d118aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:15" alignment="I:1"><nx_struct-ref ref="0x10d113590"/>
                <typename><typedef-ref name="rtx_setting_t" ref="0x10d112020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10caf4780"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x10d214708" loc="5:../../tos/chips/cc2420/interfaces/LplSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10d119540"/>
                <typename><typedef-ref name="message_t" ref="0x10d118aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ts" ref="0x10d214a88" loc="5:../../tos/chips/cc2420/interfaces/LplSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:15" alignment="I:1"><nx_struct-ref ref="0x10d113590"/>
                <typename><typedef-ref name="rtx_setting_t" ref="0x10d112020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x10d214db0" loc="5:../../tos/chips/cc2420/interfaces/LplSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10caf4780"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LplTime" loc="1:../../tos/chips/cc2420/interfaces/LplTime.nc">
      <function event="" provided="0" name="timeRadio" ref="0x10d236a08" loc="2:../../tos/chips/cc2420/interfaces/LplTime.nc">
        <interfacedef-ref qname="LplTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:36" alignment="I:2"><struct-ref ref="0x10d10d478"/>
                <typename><typedef-ref name="rtx_time_compensation_t" ref="0x10d12e278"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_rtx_time" ref="0x10d236798" loc="2:../../tos/chips/cc2420/interfaces/LplTime.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:36" alignment="I:2"><struct-ref ref="0x10d10d478"/>
                <typename><typedef-ref name="rtx_time_compensation_t" ref="0x10d12e278"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="timeCompensated" ref="0x10d2307b8" loc="3:../../tos/chips/cc2420/interfaces/LplTime.nc">
        <interfacedef-ref qname="LplTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10c876b20"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:36" alignment="I:2"><struct-ref ref="0x10d10d478"/>
                <typename><typedef-ref name="rtx_time_compensation_t" ref="0x10d12e278"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x10d230108" loc="3:../../tos/chips/cc2420/interfaces/LplTime.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10c876b20"/></typename>
            </type-int>
          </variable>
          <variable name="p_rtx_time" ref="0x10d230538" loc="3:../../tos/chips/cc2420/interfaces/LplTime.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:36" alignment="I:2"><struct-ref ref="0x10d10d478"/>
                <typename><typedef-ref name="rtx_time_compensation_t" ref="0x10d12e278"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LplReceive" loc="1:../../tos/chips/cc2420/interfaces/LplReceive.nc">
      <function command="" provided="0" name="txDetect" ref="0x10d23aa40" loc="5:../../tos/chips/cc2420/interfaces/LplReceive.nc">
        <interfacedef-ref qname="LplReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxInit" ref="0x10d239870" loc="9:../../tos/chips/cc2420/interfaces/LplReceive.nc">
        <interfacedef-ref qname="LplReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10caf4780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receive" ref="0x10d237c98" loc="13:../../tos/chips/cc2420/interfaces/LplReceive.nc">
        <interfacedef-ref qname="LplReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10d119540"/>
                <typename><typedef-ref name="message_t" ref="0x10d118aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10c876790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x10d2376f8" loc="13:../../tos/chips/cc2420/interfaces/LplReceive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10d119540"/>
                <typename><typedef-ref name="message_t" ref="0x10d118aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="size" ref="0x10d237a18" loc="13:../../tos/chips/cc2420/interfaces/LplReceive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10c876790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rxOn" ref="0x10d239178" loc="7:../../tos/chips/cc2420/interfaces/LplReceive.nc">
        <interfacedef-ref qname="LplReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10caf4780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxBuffSet" ref="0x10d237020" loc="11:../../tos/chips/cc2420/interfaces/LplReceive.nc">
        <interfacedef-ref qname="LplReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxEnable" ref="0x10d23a378" loc="3:../../tos/chips/cc2420/interfaces/LplReceive.nc">
        <interfacedef-ref qname="LplReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x10d412020" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x10d4126e8" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10caf01d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x10d414290" loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x10d4114a0" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10caf01d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x10d414930" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10caf01d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x10d412da0" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x10d415548" loc="40:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x10d415bb8" loc="41:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430GeneralIO" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
      <documentation loc="34:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x10d449440" loc="78:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="75:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to input.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x10d449b28" loc="80:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10caf01d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setResistor" ref="0x10d444290" loc="110:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="103:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin pullup / pull down resistor mode.</short>
          <long>&#10; Set pin pullup / pull down resistor mode.&#10; @param mode One of the MSP430_PORT_RESISTOR_* values&#10; @return EINVAL if invalid mode or pin does not support resistor configuration;&#10; FAIL if pin is not an input;&#10; SUCCESS if pin supports resistor configuration, is an input, and mode is valid&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10caf4780"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10c876790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x10d444020" loc="110:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10c876790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x10d44cdc0" loc="58:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Toggle pin status.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x10d448950" loc="87:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10caf01d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getResistor" ref="0x10d444b10" loc="117:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="112:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the pin pullup / pulldown resistor mode.</short>
          <long>&#10; Get the pin pullup / pulldown resistor mode.&#10;&#10; @return one of the MSP430_PORT_RESISTOR_* values&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10c876790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x10d448258" loc="85:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="82:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to output.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x10d44bca8" loc="73:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="68:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Read pin value.</short>
          <long>&#10; Read pin value.&#10;&#10; @return TRUE if pin is high, FALSE otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10caf01d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectIOFunc" ref="0x10d445020" loc="99:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="96:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for I/O functionality.</short>
          <long>&#10; Set pin for I/O functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRaw" ref="0x10d44b510" loc="66:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="60:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the port status that contains the pin.</short>
          <long>&#10; Get the port status that contains the pin.&#10;&#10; @return Status of the port that contains the given pin. The x'th&#10; pin on the port will be represented in the x'th bit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10c876790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x10d44c020" loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to high.</short>
          <long>&#10; Set pin to high.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectModuleFunc" ref="0x10d4470d8" loc="92:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="89:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for module specific functionality.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isIOFunc" ref="0x10d445748" loc="101:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10caf01d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isModuleFunc" ref="0x10d447808" loc="94:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10caf01d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x10d44c6e0" loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="50:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to low.</short>
          <long>&#10; Set pin to low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x10cf301d8" loc="76:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x10cdf2458" loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x10caed020" loc="57:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x10caf8020" loc="72:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x10caed718" loc="65:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10caf01d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x10cb00ba0" loc="67:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10caf4780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x10caff3e0" loc="75:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/StdControl.nc">
      <documentation loc="72:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x10d69bc98" loc="95:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/StdControl.nc">
        <documentation loc="88:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10caf4780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x10d696490" loc="105:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/StdControl.nc">
        <documentation loc="97:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10caf4780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMSend.nc">
      <documentation loc="34:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x10d678b50" loc="80:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="60:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10caf4780"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x10d0d4b18"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10d119540"/>
                <typename><typedef-ref name="message_t" ref="0x10d118aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10c876790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x10d678250" loc="80:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x10d0d4b18"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x10d6785b0" loc="80:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10d119540"/>
                <typename><typedef-ref name="message_t" ref="0x10d118aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x10d6788c0" loc="80:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10c876790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x10d6ab2d8" loc="135:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="126:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10d119540"/>
                <typename><typedef-ref name="message_t" ref="0x10d118aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10c876790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x10d6adbe8" loc="135:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10d119540"/>
                <typename><typedef-ref name="message_t" ref="0x10d118aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x10d6ab020" loc="135:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10c876790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x10d6ad3e0" loc="123:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="113:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10c876790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x10d676108" loc="96:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="82:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10caf4780"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10d119540"/>
                <typename><typedef-ref name="message_t" ref="0x10d118aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x10d677e50" loc="96:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10d119540"/>
                <typename><typedef-ref name="message_t" ref="0x10d118aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x10d6ae5c8" loc="110:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="98:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10d119540"/>
                <typename><typedef-ref name="message_t" ref="0x10d118aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10caf4780"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x10d6ae020" loc="110:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10d119540"/>
                <typename><typedef-ref name="message_t" ref="0x10d118aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x10d6ae348" loc="110:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10caf4780"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x10d69a340" loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x10d69a340"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x10d69abd0" loc="61:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10c877020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Packet.nc">
      <documentation loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x10d699cb8" loc="65:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="58:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10d119540"/>
                <typename><typedef-ref name="message_t" ref="0x10d118aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x10d699a48" loc="65:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10d119540"/>
                <typename><typedef-ref name="message_t" ref="0x10d118aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x10d693c90" loc="78:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="67:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10c876790"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10d119540"/>
                <typename><typedef-ref name="message_t" ref="0x10d118aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x10d693a20" loc="78:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10d119540"/>
                <typename><typedef-ref name="message_t" ref="0x10d118aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x10d6cae78" loc="126:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="109:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10d119540"/>
                <typename><typedef-ref name="message_t" ref="0x10d118aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10c876790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x10d6ca8b0" loc="126:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10d119540"/>
                <typename><typedef-ref name="message_t" ref="0x10d118aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x10d6cabc0" loc="126:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10c876790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x10d6ca020" loc="106:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="96:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10c876790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x10d6940b8" loc="94:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="80:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10d119540"/>
                <typename><typedef-ref name="message_t" ref="0x10d118aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10c876790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x10d692ab0" loc="94:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10d119540"/>
                <typename><typedef-ref name="message_t" ref="0x10d118aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x10d692dc0" loc="94:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10c876790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LplxPacket" loc="1:../../tos/chips/cc2420/interfaces/LplxPacket.nc">
      <function command="" provided="0" name="setOppoRouting" ref="0x10d6c5a28" loc="3:../../tos/chips/cc2420/interfaces/LplxPacket.nc">
        <interfacedef-ref qname="LplxPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10d119540"/>
                <typename><typedef-ref name="message_t" ref="0x10d118aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10c876b20"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10c876b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m" ref="0x10d6c5100" loc="3:../../tos/chips/cc2420/interfaces/LplxPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10d119540"/>
                <typename><typedef-ref name="message_t" ref="0x10d118aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="metric" ref="0x10d6c5440" loc="3:../../tos/chips/cc2420/interfaces/LplxPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10c876b20"/></typename>
            </type-int>
          </variable>
          <variable name="progress" ref="0x10d6c5798" loc="3:../../tos/chips/cc2420/interfaces/LplxPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10c876b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearSettings" ref="0x10d6c2950" loc="6:../../tos/chips/cc2420/interfaces/LplxPacket.nc">
        <interfacedef-ref qname="LplxPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10d119540"/>
                <typename><typedef-ref name="message_t" ref="0x10d118aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m" ref="0x10d6c26e0" loc="6:../../tos/chips/cc2420/interfaces/LplxPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10d119540"/>
                <typename><typedef-ref name="message_t" ref="0x10d118aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setPacketBulk" ref="0x10d6c46a0" loc="4:../../tos/chips/cc2420/interfaces/LplxPacket.nc">
        <interfacedef-ref qname="LplxPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10d119540"/>
                <typename><typedef-ref name="message_t" ref="0x10d118aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10c876790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m" ref="0x10d6c4100" loc="4:../../tos/chips/cc2420/interfaces/LplxPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10d119540"/>
                <typename><typedef-ref name="message_t" ref="0x10d118aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="size" ref="0x10d6c4420" loc="4:../../tos/chips/cc2420/interfaces/LplxPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10c876790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPacketBulk" ref="0x10d6c2030" loc="5:../../tos/chips/cc2420/interfaces/LplxPacket.nc">
        <interfacedef-ref qname="LplxPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10c876790"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10d119540"/>
                <typename><typedef-ref name="message_t" ref="0x10d118aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m" ref="0x10d6c4d98" loc="5:../../tos/chips/cc2420/interfaces/LplxPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10d119540"/>
                <typename><typedef-ref name="message_t" ref="0x10d118aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setPacketCI" ref="0x10d6c69f0" loc="2:../../tos/chips/cc2420/interfaces/LplxPacket.nc">
        <interfacedef-ref qname="LplxPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10d119540"/>
                <typename><typedef-ref name="message_t" ref="0x10d118aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10c876790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m" ref="0x10d6c6460" loc="2:../../tos/chips/cc2420/interfaces/LplxPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10d119540"/>
                <typename><typedef-ref name="message_t" ref="0x10d118aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="hop" ref="0x10d6c6770" loc="2:../../tos/chips/cc2420/interfaces/LplxPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10c876790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
      <documentation loc="36:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x10d6aa4c8" loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x10d6aa4c8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x10d6a1020" loc="136:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="132:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10c877020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x10d6a68f8" loc="83:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="80:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x10d6a45b8" loc="114:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="100:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x10c877020"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x10c877020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x10d6a4020" loc="114:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x10c877020"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x10d6a4338" loc="114:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x10c877020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x10d6a5870" loc="98:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="94:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10caf01d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x10d6a0020" loc="151:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="146:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10c877020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x10d6a1740" loc="144:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="138:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10c877020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x10d6a50d8" loc="92:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="86:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10caf01d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x10d6a8020" loc="64:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x10c877020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x10d6aad28" loc="64:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x10c877020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x10d6a35b8" loc="129:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="116:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x10c877020"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x10c877020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x10d6a3020" loc="129:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x10c877020"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x10d6a3338" loc="129:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x10c877020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x10d6a8a60" loc="73:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="66:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x10c877020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x10d6a87f0" loc="73:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x10c877020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x10d6a6258" loc="78:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="75:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x10d6c06d8" loc="59:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10caf4780"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10d119540"/>
                <typename><typedef-ref name="message_t" ref="0x10d118aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x10d6c0468" loc="59:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10d119540"/>
                <typename><typedef-ref name="message_t" ref="0x10d118aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x10d6bf818" loc="71:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10caf4780"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10d119540"/>
                <typename><typedef-ref name="message_t" ref="0x10d118aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x10d6bf5a8" loc="71:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10d119540"/>
                <typename><typedef-ref name="message_t" ref="0x10d118aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x10d6bc8c8" loc="85:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10caf01d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10d119540"/>
                <typename><typedef-ref name="message_t" ref="0x10d118aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x10d6bc658" loc="85:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10d119540"/>
                <typename><typedef-ref name="message_t" ref="0x10d118aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x10d6d03b0" loc="177:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x10d0d4760"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10d119540"/>
                <typename><typedef-ref name="message_t" ref="0x10d118aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x10d6d0140" loc="177:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10d119540"/>
                <typename><typedef-ref name="message_t" ref="0x10d118aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x10d6d92d0" loc="88:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x10d0d4b18"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10d119540"/>
                <typename><typedef-ref name="message_t" ref="0x10d118aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x10d6d9060" loc="88:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10d119540"/>
                <typename><typedef-ref name="message_t" ref="0x10d118aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x10d6dc840" loc="68:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x10d0d4b18"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x10d6db2d0" loc="78:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x10d0d4b18"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10d119540"/>
                <typename><typedef-ref name="message_t" ref="0x10d118aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x10d6db060" loc="78:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10d119540"/>
                <typename><typedef-ref name="message_t" ref="0x10d118aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x10d6d7a60" loc="121:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10d119540"/>
                <typename><typedef-ref name="message_t" ref="0x10d118aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x10d0d4b18"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x10d6d74a8" loc="121:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10d119540"/>
                <typename><typedef-ref name="message_t" ref="0x10d118aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x10d6d77e0" loc="121:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x10d0d4b18"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x10d6d8618" loc="103:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10d119540"/>
                <typename><typedef-ref name="message_t" ref="0x10d118aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x10d0d4b18"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x10d6d8060" loc="103:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10d119540"/>
                <typename><typedef-ref name="message_t" ref="0x10d118aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x10d6d8398" loc="103:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x10d0d4b18"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x10d6d2020" loc="147:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x10d0d43b0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10d119540"/>
                <typename><typedef-ref name="message_t" ref="0x10d118aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x10d6d5cf8" loc="147:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10d119540"/>
                <typename><typedef-ref name="message_t" ref="0x10d118aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x10d6d12a0" loc="162:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10d119540"/>
                <typename><typedef-ref name="message_t" ref="0x10d118aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x10d0d43b0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x10d6d2ce8" loc="162:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10d119540"/>
                <typename><typedef-ref name="message_t" ref="0x10d118aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x10d6d1020" loc="162:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x10d0d43b0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x10d6d4c38" loc="136:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10caf01d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10d119540"/>
                <typename><typedef-ref name="message_t" ref="0x10d118aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x10d6d49c8" loc="136:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10d119540"/>
                <typename><typedef-ref name="message_t" ref="0x10d118aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x10d6cf7b8" loc="187:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10d119540"/>
                <typename><typedef-ref name="message_t" ref="0x10d118aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x10d0d4760"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x10d6cf208" loc="187:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10d119540"/>
                <typename><typedef-ref name="message_t" ref="0x10d118aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x10d6cf538" loc="187:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x10d0d4760"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x10d6cd560" loc="195:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x10d0d4760"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Send.nc">
      <documentation loc="34:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x10d6f95b0" loc="75:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="57:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10caf4780"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10d119540"/>
                <typename><typedef-ref name="message_t" ref="0x10d118aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10c876790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x10d6f9020" loc="75:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10d119540"/>
                <typename><typedef-ref name="message_t" ref="0x10d118aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x10d6f9330" loc="75:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10c876790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x10d6f5878" loc="125:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="115:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10d119540"/>
                <typename><typedef-ref name="message_t" ref="0x10d118aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10c876790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x10d6f52b0" loc="125:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10d119540"/>
                <typename><typedef-ref name="message_t" ref="0x10d118aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x10d6f55c0" loc="125:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10c876790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x10d6f4a58" loc="112:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="102:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10c876790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x10d6f7828" loc="89:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="77:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10caf4780"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10d119540"/>
                <typename><typedef-ref name="message_t" ref="0x10d118aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x10d6f75b8" loc="89:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10d119540"/>
                <typename><typedef-ref name="message_t" ref="0x10d118aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x10d6f6c10" loc="100:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="91:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10d119540"/>
                <typename><typedef-ref name="message_t" ref="0x10d118aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10caf4780"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x10d6f6668" loc="100:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10d119540"/>
                <typename><typedef-ref name="message_t" ref="0x10d118aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x10d6f6990" loc="100:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10caf4780"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioBackoff" loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
      <documentation loc="32:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <short>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.</short>
        <long>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.  &#10; &#10; This is because of fan-out issues with multiple components wanting to&#10; affect backoffs for whatever they're interested in:&#10; If you signal out an *event* to request an initial backoff and&#10; several components happen to be listening, then those components&#10; would be required to return a backoff value.  We don't want that&#10; behavior.&#10; With this strategy, components can listen for the requests and then&#10; decide if they want to affect the behavior.  If the component wants to&#10; affect the behavior, it calls back using the setXYZBackoff(..) command.&#10; If several components call back, then the last component to get its &#10; word in has the final say. &#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="requestCca" ref="0x10d767d88" loc="95:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="90:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on whether or not to use CCA on the outbound packet.</short>
          <long>&#10; Request for input on whether or not to use CCA on the outbound packet.&#10; Replies should come in the form of setCca(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10d119540"/>
                <typename><typedef-ref name="message_t" ref="0x10d118aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x10d767b18" loc="95:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10d119540"/>
                <typename><typedef-ref name="message_t" ref="0x10d118aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestInitialBackoff" ref="0x10d7690a8" loc="81:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="76:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; </short>
          <long>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10d119540"/>
                <typename><typedef-ref name="message_t" ref="0x10d118aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x10d76add0" loc="81:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10d119540"/>
                <typename><typedef-ref name="message_t" ref="0x10d118aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCongestionBackoff" ref="0x10d76b750" loc="66:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="62:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestCongestionBackoff event&#10; </short>
          <long>&#10; Must be called within a requestCongestionBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10c876b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x10d76b4e0" loc="66:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10c876b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInitialBackoff" ref="0x10d76cc08" loc="60:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestInitialBackoff event&#10; </short>
          <long>&#10; Must be called within a requestInitialBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10c876b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x10d76c998" loc="60:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10c876b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCca" ref="0x10d76a290" loc="73:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="68:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Enable CCA for the outbound packet.</short>
          <long>&#10; Enable CCA for the outbound packet.  Must be called within a requestCca&#10; event&#10; @param ccaOn TRUE to enable CCA, which is the default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x10caf01d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ccaOn" ref="0x10d76a020" loc="73:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x10caf01d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestCongestionBackoff" ref="0x10d767020" loc="88:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="83:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; </short>
          <long>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10d119540"/>
                <typename><typedef-ref name="message_t" ref="0x10d118aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x10d769c28" loc="88:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10d119540"/>
                <typename><typedef-ref name="message_t" ref="0x10d118aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/SendNotifier.nc">
      <documentation loc="32:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x10d7636e8" loc="59:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/SendNotifier.nc">
        <documentation loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x10d0d4b18"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10d119540"/>
                <typename><typedef-ref name="message_t" ref="0x10d118aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x10d763108" loc="59:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x10d0d4b18"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x10d763468" loc="59:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10d119540"/>
                <typename><typedef-ref name="message_t" ref="0x10d118aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BulkSend" loc="1:../../tos/chips/cc2420/interfaces/BulkSend.nc">
      <function command="" provided="0" name="send" ref="0x10d7969f8" loc="2:../../tos/chips/cc2420/interfaces/BulkSend.nc">
        <interfacedef-ref qname="BulkSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10caf4780"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10d119540"/>
                <typename><typedef-ref name="message_t" ref="0x10d118aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10c876790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x10d796468" loc="2:../../tos/chips/cc2420/interfaces/BulkSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10d119540"/>
                <typename><typedef-ref name="message_t" ref="0x10d118aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x10d796778" loc="2:../../tos/chips/cc2420/interfaces/BulkSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10c876790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x10d794370" loc="3:../../tos/chips/cc2420/interfaces/BulkSend.nc">
        <interfacedef-ref qname="BulkSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10caf4780"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10d119540"/>
                <typename><typedef-ref name="message_t" ref="0x10d118aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x10d794100" loc="3:../../tos/chips/cc2420/interfaces/BulkSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10d119540"/>
                <typename><typedef-ref name="message_t" ref="0x10d118aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x10d793020" loc="4:../../tos/chips/cc2420/interfaces/BulkSend.nc">
        <interfacedef-ref qname="BulkSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10d119540"/>
                <typename><typedef-ref name="message_t" ref="0x10d118aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10caf4780"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x10d794a00" loc="4:../../tos/chips/cc2420/interfaces/BulkSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10d119540"/>
                <typename><typedef-ref name="message_t" ref="0x10d118aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="err" ref="0x10d794d10" loc="4:../../tos/chips/cc2420/interfaces/BulkSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10caf4780"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x10d7d2178" loc="50:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x10d0d4b18"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x10d7d1020" loc="60:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x10d7d28d8" loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x10d0d4760"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x10d7d3920" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x10d0d4760"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x10d0d4b18"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x10d7d3368" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x10d0d4760"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x10d7d36a0" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x10d0d4b18"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioTimerUpdate" loc="1:../../tos/chips/cc2420/x-timer/RadioTimerUpdate.nc">
      <function event="" provided="0" name="startRadioTime" ref="0x10d7fbce8" loc="2:../../tos/chips/cc2420/x-timer/RadioTimerUpdate.nc">
        <interfacedef-ref qname="RadioTimerUpdate"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="counterUpdate" ref="0x10d7f70b8" loc="4:../../tos/chips/cc2420/x-timer/RadioTimerUpdate.nc">
        <interfacedef-ref qname="RadioTimerUpdate"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x10c877020"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10c876b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="count" ref="0x10d7f8a78" loc="4:../../tos/chips/cc2420/x-timer/RadioTimerUpdate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x10c877020"/></typename>
            </type-int>
          </variable>
          <variable name="factor" ref="0x10d7f8db8" loc="4:../../tos/chips/cc2420/x-timer/RadioTimerUpdate.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10c876b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="triggerUpdate" ref="0x10d7f83e0" loc="3:../../tos/chips/cc2420/x-timer/RadioTimerUpdate.nc">
        <interfacedef-ref qname="RadioTimerUpdate"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Random.nc">
      <documentation loc="34:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x10d7e61d8" loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Random.nc">
        <documentation loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10c876b20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x10d7e99e0" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Random.nc">
        <documentation loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10c877020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x10d876020" loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x10d876020"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x10d876250" loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x10d876250"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x10d873bd8" loc="109:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x10d876250"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x10d875c88" loc="78:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x10d8732a0" loc="103:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x10d876250"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x10d876250"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x10d874bf0" loc="103:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x10d876250"/></type-var>
          </variable>
          <variable name="dt" ref="0x10d873020" loc="103:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x10d876250"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x10d874440" loc="88:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10caf01d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x10d8713a0" loc="116:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x10d876250"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x10d876d10" loc="66:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x10d876250"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x10d876aa0" loc="66:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x10d876250"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x10d875538" loc="73:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Counter.nc">
      <documentation loc="36:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x10d8d9a50" loc="57:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x10d8d9a50"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x10d8d9c80" loc="57:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x10d8d9c80"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x10d8d6548" loc="64:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="59:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x10d8d9c80"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x10d8d4590" loc="76:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="73:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x10d8d6d60" loc="71:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="66:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10caf01d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x10d8d4c80" loc="82:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="78:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ParameterInit.nc">
      <documentation loc="34:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x10da11348" loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x10da11348"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x10da11df0" loc="64:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ParameterInit.nc">
        <documentation loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10caf4780"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x10da11348"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x10da11b80" loc="64:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x10da11348"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
