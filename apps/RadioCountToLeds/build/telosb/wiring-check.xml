<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="53:RadioCountToLedsAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x109e3fbc8"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x109794220"/></to>
    </wire>
    <wire loc="72:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x109794220"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x1097959b0"/></to>
    </wire>
    <wire loc="54:RadioCountToLedsAppC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x109e3e2b0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x10a2041c8"/></to>
    </wire>
    <wire loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x10a2041c8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x109efb7a0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x1098d83b0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:RadioCountToLedsAppC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x109e31178"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x10a210080"/></to>
    </wire>
    <wire loc="64:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x10a210080"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x10a5ee020"/></to>
    </wire>
    <wire loc="56:RadioCountToLedsAppC.nc">
      <from><interface-ref name="AMControl" scoped="" ref="0x109e57968"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x109eff918"/></to>
    </wire>
    <wire loc="20:../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x109eff918"/></from>
      <to><interface-ref name="RadioControl" scoped="" ref="0x109ef5b00"/></to>
    </wire>
    <wire loc="57:RadioCountToLedsAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x109e40678"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x109bab7d8"/></to>
    </wire>
    <wire loc="51:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x109bab7d8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x109ba3020"/></to>
    </wire>
    <wire loc="58:RadioCountToLedsAppC.nc">
      <from><interface-ref name="MilliTimer" scoped="" ref="0x109e295a0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x10a2001c8"/></to>
    </wire>
    <wire loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x10a2001c8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x109ffd1c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="59:RadioCountToLedsAppC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x109e58020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x10a210c38"/></to>
    </wire>
    <wire loc="65:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x10a210c38"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x10a5eebd8"/></to>
    </wire>
    <wire loc="60:RadioCountToLedsAppC.nc">
      <from><interface-ref name="LplxPacket" scoped="" ref="0x109e492c8"/></from>
      <to><interface-ref name="LplxPacket" scoped="" ref="0x109ef7c00"/></to>
    </wire>
    <wire loc="27:../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="LplxPacket" scoped="" ref="0x109ef7c00"/></from>
      <to><interface-ref name="LplxPacket" scoped="" ref="0x109ef22d0"/></to>
    </wire>
    <wire loc="63:RadioCountToLedsAppC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x109e5c108"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x109ff0c48"/></to>
    </wire>
    <wire loc="48:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x109ff0c48"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x10a186440"/></to>
    </wire>
    <wire loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x109793680"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x10a1ac6a0"/></to>
    </wire>
    <wire loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x109793680"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x109ff9dc8"/></to>
    </wire>
    <wire loc="22:../../tos/chips/cc2420/x-lpl/CC2420xLplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x109793680"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x109fa3020"/></to>
    </wire>
    <wire loc="23:../../tos/chips/cc2420/x-lpl/CC2420xLplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x109793680"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x109a32b58"/></to>
    </wire>
    <wire loc="67:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x109e15020"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x10931b390"/></to>
    </wire>
    <wire loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x10931b390"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x1097580c0"/></to>
    </wire>
    <wire loc="68:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x109e159f8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x1097965b8"/></to>
    </wire>
    <wire loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x1097965b8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x109791740"/></to>
    </wire>
    <wire loc="71:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x109e14140"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x109793680"/></to>
    </wire>
    <wire loc="49:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x109791e10"/></from>
      <to><interface-ref name="MoteClockInit" scoped="" ref="0x1097ac0e8"/></to>
    </wire>
    <wire loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosb/MoteClockC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x1097ac0e8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x1097a9020"/></to>
    </wire>
    <wire loc="50:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x10978d4f8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x109790610"/></to>
    </wire>
    <wire loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x10978db98"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x109bd9020"/></to>
    </wire>
    <wire loc="35:../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x1097a9020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x1097cf4f0"/></to>
    </wire>
    <wire loc="36:../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Msp430ClockInit" scoped="" ref="0x1097bf2b8"/></from>
      <to><interface-ref name="Msp430ClockInit" scoped="" ref="0x1097cfb60"/></to>
    </wire>
    <wire loc="37:../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x109549020"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x1097cee08"/></to>
    </wire>
    <wire loc="82:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA2" scoped="" ref="0x109820d30"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x1098b9c80"/></to>
    </wire>
    <wire loc="77:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA1" scoped="" ref="0x109831558"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x1098bfc58"/></to>
    </wire>
    <wire loc="99:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB0" scoped="" ref="0x109829d30"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x1098d4c80"/></to>
    </wire>
    <wire loc="76:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0x109817d80"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x1098bf020"/></to>
    </wire>
    <wire loc="68:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0x10981a4d0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x109864c80"/></to>
    </wire>
    <wire loc="84:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA2" scoped="" ref="0x109830558"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x1098b7c58"/></to>
    </wire>
    <wire loc="62:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0x10980a060"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x109852798"/></to>
    </wire>
    <wire loc="83:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA2" scoped="" ref="0x109816b40"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x1098b7020"/></to>
    </wire>
    <wire loc="75:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0x109821898"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x1098c1c80"/></to>
    </wire>
    <wire loc="70:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA0" scoped="" ref="0x10982b668"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x1098a4c58"/></to>
    </wire>
    <wire loc="69:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0x109817060"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x1098a4020"/></to>
    </wire>
    <wire loc="89:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerB" scoped="" ref="0x10982a520"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x10986b1e8"/></to>
    </wire>
    <wire loc="101:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB0" scoped="" ref="0x109826020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x1098d2c58"/></to>
    </wire>
    <wire loc="100:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB0" scoped="" ref="0x109827120"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x1098d2020"/></to>
    </wire>
    <wire loc="63:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x109870658"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x109870020"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x109870c70"/></from>
      <to><interface-ref name="VectorTimerA0" scoped="" ref="0x1098cb4f8"/></to>
    </wire>
    <wire loc="65:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x10986f2e8"/></from>
      <to><interface-ref name="VectorTimerA1" scoped="" ref="0x1098cbc40"/></to>
    </wire>
    <wire loc="71:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x1098c5a90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x109852798"/></to>
    </wire>
    <wire loc="72:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x1098c3100"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x109870020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x1098bea90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x109852798"/></to>
    </wire>
    <wire loc="79:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x1098bc100"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x109870020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x1098b6a90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x109852798"/></to>
    </wire>
    <wire loc="86:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x1098d6100"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x109870020"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x109868020"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x1098698a0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x109868638"/></from>
      <to><interface-ref name="VectorTimerB0" scoped="" ref="0x1098c9418"/></to>
    </wire>
    <wire loc="95:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x109868c50"/></from>
      <to><interface-ref name="VectorTimerB1" scoped="" ref="0x109a487c8"/></to>
    </wire>
    <wire loc="102:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x1098d1a90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x10986b1e8"/></to>
    </wire>
    <wire loc="103:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x1098cf100"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x1098698a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="108:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x1098c8080"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x109bab7d8"/></to>
    </wire>
    <wire loc="37:../../tos/chips/cc2420/x-lpl/CC2420xLplC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x109a48dd0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x109bab7d8"/></to>
    </wire>
    <wire loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x109bd9020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x109ba79d0"/></to>
    </wire>
    <wire loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x109bc9348"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x109ba5ab0"/></to>
    </wire>
    <wire loc="58:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x109ba5ab0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x109de6c30"/></to>
    </wire>
    <wire loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x109ba14c0"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x109bdcca8"/></to>
    </wire>
    <wire loc="61:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x109bdcca8"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x109e06448"/></to>
    </wire>
    <wire loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x109ba0648"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x109bdbe30"/></to>
    </wire>
    <wire loc="64:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x109bdbe30"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x109e02cd0"/></to>
    </wire>
    <wire loc="59:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x109de4da0"/></from>
      <to><interface-ref name="Port54" scoped="" ref="0x109c40568"/></to>
    </wire>
    <wire loc="486:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port54" scoped="" ref="0x109c40568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x109d48ca0"/></to>
    </wire>
    <wire loc="62:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x109e055f8"/></from>
      <to><interface-ref name="Port55" scoped="" ref="0x109c3e568"/></to>
    </wire>
    <wire loc="487:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port55" scoped="" ref="0x109c3e568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x109d433d8"/></to>
    </wire>
    <wire loc="65:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x109e00e20"/></from>
      <to><interface-ref name="Port56" scoped="" ref="0x109c3c568"/></to>
    </wire>
    <wire loc="488:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port56" scoped="" ref="0x109c3c568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x109d3fca0"/></to>
    </wire>
    <wire loc="442:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x109bf2568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x109cacca0"/></to>
    </wire>
    <wire loc="455:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x109c0d568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x109ce1ca0"/></to>
    </wire>
    <wire loc="531:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SDA" scoped="" ref="0x109c537d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x109d053d8"/></to>
    </wire>
    <wire loc="551:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC6" scoped="" ref="0x109c5f558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x109d82ca0"/></to>
    </wire>
    <wire loc="532:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI0" scoped="" ref="0x109c51660"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x109d01ca0"/></to>
    </wire>
    <wire loc="460:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port30" scoped="" ref="0x109c09568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x109cd8ca0"/></to>
    </wire>
    <wire loc="473:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port42" scoped="" ref="0x109c24568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x109d0fca0"/></to>
    </wire>
    <wire loc="497:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port64" scoped="" ref="0x109c30568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x109d57ca0"/></to>
    </wire>
    <wire loc="535:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD0" scoped="" ref="0x109c4b560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x109cf8ca0"/></to>
    </wire>
    <wire loc="545:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC0" scoped="" ref="0x109c6b558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x109d6aca0"/></to>
    </wire>
    <wire loc="557:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSIN" scoped="" ref="0x109c86560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x109d7d3d8"/></to>
    </wire>
    <wire loc="445:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x109bec568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x109ccf3d8"/></to>
    </wire>
    <wire loc="536:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD0" scoped="" ref="0x109c49560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x109cf23d8"/></to>
    </wire>
    <wire loc="450:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x109be8568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x109cc63d8"/></to>
    </wire>
    <wire loc="463:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port33" scoped="" ref="0x109c03568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x109cfc3d8"/></to>
    </wire>
    <wire loc="476:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port45" scoped="" ref="0x109c1e568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x109d343d8"/></to>
    </wire>
    <wire loc="489:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port57" scoped="" ref="0x109c3a568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x109d6e3d8"/></to>
    </wire>
    <wire loc="500:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port67" scoped="" ref="0x109c59568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x109d7d3d8"/></to>
    </wire>
    <wire loc="440:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x109bf6668"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x109cb5ca0"/></to>
    </wire>
    <wire loc="453:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x109c11568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x109cebd08"/></to>
    </wire>
    <wire loc="466:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port36" scoped="" ref="0x109bfd568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x109d21ca0"/></to>
    </wire>
    <wire loc="530:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO0" scoped="" ref="0x109c55970"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x109d053d8"/></to>
    </wire>
    <wire loc="548:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC3" scoped="" ref="0x109c65558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x109d5c3d8"/></to>
    </wire>
    <wire loc="555:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC1" scoped="" ref="0x109c88558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x109d7d3d8"/></to>
    </wire>
    <wire loc="541:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK1" scoped="" ref="0x109c71560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x109d4d3d8"/></to>
    </wire>
    <wire loc="471:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port40" scoped="" ref="0x109c28568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x109d18dd8"/></to>
    </wire>
    <wire loc="484:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port52" scoped="" ref="0x109c14568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x109d52ca0"/></to>
    </wire>
    <wire loc="495:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port62" scoped="" ref="0x109c34568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x109d61ca0"/></to>
    </wire>
    <wire loc="549:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC4" scoped="" ref="0x109c63558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x109d57ca0"/></to>
    </wire>
    <wire loc="538:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE1" scoped="" ref="0x109c47558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x109d27ca0"/></to>
    </wire>
    <wire loc="443:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x109bf0568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x109ca73d8"/></to>
    </wire>
    <wire loc="456:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x109c0b568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x109cdc3d8"/></to>
    </wire>
    <wire loc="493:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port60" scoped="" ref="0x109c38568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x109d6aca0"/></to>
    </wire>
    <wire loc="461:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port31" scoped="" ref="0x109c07568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x109d053d8"/></to>
    </wire>
    <wire loc="474:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port43" scoped="" ref="0x109c22568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x109d0a3d8"/></to>
    </wire>
    <wire loc="498:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port65" scoped="" ref="0x109c2e568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x109d863d8"/></to>
    </wire>
    <wire loc="540:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI1" scoped="" ref="0x109c73560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x109d52ca0"/></to>
    </wire>
    <wire loc="438:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x109bf9950"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x109c80e18"/></to>
    </wire>
    <wire loc="451:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x109be6568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x109cc2ca0"/></to>
    </wire>
    <wire loc="464:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port34" scoped="" ref="0x109c01568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x109cf8ca0"/></to>
    </wire>
    <wire loc="477:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port46" scoped="" ref="0x109c1c568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x109d30ca0"/></to>
    </wire>
    <wire loc="542:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD1" scoped="" ref="0x109c6f560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x109d21ca0"/></to>
    </wire>
    <wire loc="546:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC1" scoped="" ref="0x109c69558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x109d653d8"/></to>
    </wire>
    <wire loc="552:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC7" scoped="" ref="0x109c5d558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x109d7d3d8"/></to>
    </wire>
    <wire loc="482:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port50" scoped="" ref="0x109c18568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x109d27ca0"/></to>
    </wire>
    <wire loc="543:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD1" scoped="" ref="0x109c6d560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x109d1c3d8"/></to>
    </wire>
    <wire loc="441:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x109bf4568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x109cb03d8"/></to>
    </wire>
    <wire loc="454:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x109c0f568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x109ce53d8"/></to>
    </wire>
    <wire loc="467:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port37" scoped="" ref="0x109c2b568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x109d1c3d8"/></to>
    </wire>
    <wire loc="539:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO1" scoped="" ref="0x109c45560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x109d563d8"/></to>
    </wire>
    <wire loc="550:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC5" scoped="" ref="0x109c61558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x109d863d8"/></to>
    </wire>
    <wire loc="472:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port41" scoped="" ref="0x109c26668"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x109d13478"/></to>
    </wire>
    <wire loc="485:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port53" scoped="" ref="0x109c42568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x109d4d3d8"/></to>
    </wire>
    <wire loc="496:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port63" scoped="" ref="0x109c32568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x109d5c3d8"/></to>
    </wire>
    <wire loc="444:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x109bee568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x109cd4ca0"/></to>
    </wire>
    <wire loc="494:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port61" scoped="" ref="0x109c36568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x109d653d8"/></to>
    </wire>
    <wire loc="449:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x109bea568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x109ccbca0"/></to>
    </wire>
    <wire loc="462:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port32" scoped="" ref="0x109c05568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x109d01ca0"/></to>
    </wire>
    <wire loc="475:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port44" scoped="" ref="0x109c20568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x109d3aca0"/></to>
    </wire>
    <wire loc="499:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port66" scoped="" ref="0x109c2c568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x109d82ca0"/></to>
    </wire>
    <wire loc="439:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x109bd37f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x109cb9478"/></to>
    </wire>
    <wire loc="452:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x109c13568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x109cef3d8"/></to>
    </wire>
    <wire loc="465:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port35" scoped="" ref="0x109bff568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x109cf23d8"/></to>
    </wire>
    <wire loc="478:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port47" scoped="" ref="0x109c1a568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x109d2b3d8"/></to>
    </wire>
    <wire loc="534:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SCL" scoped="" ref="0x109c4d548"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x109cfc3d8"/></to>
    </wire>
    <wire loc="547:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC2" scoped="" ref="0x109c67558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x109d61ca0"/></to>
    </wire>
    <wire loc="533:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK0" scoped="" ref="0x109c4f560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x109cfc3d8"/></to>
    </wire>
    <wire loc="483:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port51" scoped="" ref="0x109c16568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x109d563d8"/></to>
    </wire>
    <wire loc="554:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC0" scoped="" ref="0x109c8a558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x109d82ca0"/></to>
    </wire>
    <wire loc="558:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSOUT" scoped="" ref="0x109c84568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x109d6e3d8"/></to>
    </wire>
    <wire loc="529:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE0" scoped="" ref="0x109c575b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x109cd8ca0"/></to>
    </wire>
    <wire loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x109322ca0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x109756020"/></to>
    </wire>
    <wire loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x1097534e0"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x1093963e0"/></to>
    </wire>
    <wire loc="63:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x10a5ee020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x10a5e2710"/></to>
    </wire>
    <wire loc="64:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x10a5eebd8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x109ef9920"/></to>
    </wire>
    <wire loc="66:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x10a20f888"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x10a5ed888"/></to>
    </wire>
    <wire loc="65:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x10a5ed888"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x109ef85d0"/></to>
    </wire>
    <wire loc="67:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x10a20d020"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x10a5eb020"/></to>
    </wire>
    <wire loc="66:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x10a5eb020"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x109ef67e0"/></to>
    </wire>
    <wire loc="25:../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x109ef9920"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x109ef0430"/></to>
    </wire>
    <wire loc="26:../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x109ef85d0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x109ef2d58"/></to>
    </wire>
    <wire loc="28:../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x109ef67e0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x109f2a1a0"/></to>
    </wire>
    <wire loc="60:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x10a5e1450"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x109e9f020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x10a5df060"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x109ef85d0"/></to>
    </wire>
    <wire loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x109e9f020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x109f052c8"/></to>
    </wire>
    <wire loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x109f04060"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x109efc5b0"/></to>
    </wire>
    <wire loc="22:../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x109efc5b0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x109f295b0"/></to>
    </wire>
    <wire loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x109f04c38"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x109ef85d0"/></to>
    </wire>
    <wire loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x109f02268"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x109ef9920"/></to>
    </wire>
    <wire loc="169:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x109f01020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x109322ca0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x109f017c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x109322ca0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="41:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LplxPacket" scoped="" ref="0x109ef22d0"/></from>
      <to><interface-ref name="LplxPacket" scoped="" ref="0x10a19b918"/></to>
    </wire>
    <wire loc="36:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x109f295b0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x109f189c0"/></to>
    </wire>
    <wire loc="24:../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x109ef9348"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x109f26348"/></to>
    </wire>
    <wire loc="39:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x109f26348"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x109f15818"/></to>
    </wire>
    <wire loc="43:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x109ef0430"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x10a197a90"/></to>
    </wire>
    <wire loc="23:../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x109efb7a0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x109f287a0"/></to>
    </wire>
    <wire loc="38:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x109f287a0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x109f17c38"/></to>
    </wire>
    <wire loc="44:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x109f2a1a0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x10a196890"/></to>
    </wire>
    <wire loc="32:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x109ef5b00"/></from>
      <to><interface-ref name="RadioControl" scoped="" ref="0x109f702b8"/></to>
    </wire>
    <wire loc="42:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x109ef2d58"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x10a198488"/></to>
    </wire>
    <wire loc="35:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x109f252e0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x109f14e50"/></to>
    </wire>
    <wire loc="14:../../tos/chips/cc2420/x-lpl/CC2420xLplC.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x109f702b8"/></from>
      <to><interface-ref name="RadioControl" scoped="" ref="0x109fa3720"/></to>
    </wire>
    <wire loc="33:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="OppoRouting" scoped="" ref="0x109f2aab8"/></from>
      <to><interface-ref name="OppoRouting" scoped="" ref="0x109f6ede8"/></to>
    </wire>
    <wire loc="20:../../tos/chips/cc2420/x-lpl/CC2420xLplC.nc">
      <from><interface-ref name="OppoRouting" scoped="" ref="0x109f6ede8"/></from>
      <to><interface-ref name="OppoRouting" scoped="" ref="0x109a48080"/></to>
    </wire>
    <wire loc="37:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x109f1c1c8"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x109f14348"/></to>
    </wire>
    <wire loc="46:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x109f13d10"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x109f70a48"/></to>
    </wire>
    <wire loc="15:../../tos/chips/cc2420/x-lpl/CC2420xLplC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x109f70a48"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x109fa2020"/></to>
    </wire>
    <wire loc="47:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x109f119b8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x109f6e108"/></to>
    </wire>
    <wire loc="17:../../tos/chips/cc2420/x-lpl/CC2420xLplC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x109f6e108"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x109fa1600"/></to>
    </wire>
    <wire loc="48:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSnoop" scoped="" ref="0x109f10060"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x109f6e7a0"/></to>
    </wire>
    <wire loc="18:../../tos/chips/cc2420/x-lpl/CC2420xLplC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x109f6e7a0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x109a4a868"/></to>
    </wire>
    <wire loc="49:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="BulkSend" scoped="" ref="0x109f11020"/></from>
      <to><interface-ref name="BulkSend" scoped="" ref="0x109f6f798"/></to>
    </wire>
    <wire loc="16:../../tos/chips/cc2420/x-lpl/CC2420xLplC.nc">
      <from><interface-ref name="BulkSend" scoped="" ref="0x109f6f798"/></from>
      <to><interface-ref name="BulkSend" scoped="" ref="0x109fa2c70"/></to>
    </wire>
    <wire loc="50:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LplxPacket" scoped="" ref="0x109f10660"/></from>
      <to><interface-ref name="LplxPacket" scoped="" ref="0x10a19b918"/></to>
    </wire>
    <wire loc="51:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x109f47740"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x10a197a90"/></to>
    </wire>
    <wire loc="52:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x109f48118"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x10a198488"/></to>
    </wire>
    <wire loc="55:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x109f46420"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x109bab7d8"/></to>
    </wire>
    <wire loc="19:../../tos/chips/cc2420/x-lpl/CC2420xLplC.nc">
      <from><interface-ref name="RadioTimerUpdate" scoped="" ref="0x109f6ac30"/></from>
      <to><interface-ref name="RadioTimerUpdate" scoped="" ref="0x109fa1c80"/></to>
    </wire>
    <wire loc="25:../../tos/chips/cc2420/x-lpl/CC2420xLplC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x109fa0500"/></from>
      <to><interface-ref name="LplSend" scoped="" ref="0x109a2c3d0"/></to>
    </wire>
    <wire loc="26:../../tos/chips/cc2420/x-lpl/CC2420xLplC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x109fa0d70"/></from>
      <to><interface-ref name="LplReceive" scoped="" ref="0x109a30020"/></to>
    </wire>
    <wire loc="27:../../tos/chips/cc2420/x-lpl/CC2420xLplC.nc">
      <from><interface-ref name="LplTime" scoped="" ref="0x109f9fb68"/></from>
      <to><interface-ref name="LplTime" scoped="" ref="0x109a49a10"/></to>
    </wire>
    <wire loc="30:../../tos/chips/cc2420/x-lpl/CC2420xLplC.nc">
      <from><interface-ref name="SleepTimer" scoped="" ref="0x109f9e658"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x109fc9e80"/></to>
    </wire>
    <wire loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x109fc9e80"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x109ffd1c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="33:../../tos/chips/cc2420/x-lpl/CC2420xLplC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x109f96ae8"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x10a1af208"/></to>
    </wire>
    <wire loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x10a1af208"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x10a1aa080"/></to>
    </wire>
    <wire loc="36:../../tos/chips/cc2420/x-lpl/CC2420xLplC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x109f982d8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x109bab7d8"/></to>
    </wire>
    <wire loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x109ffd1c8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x109ff5b18"/></to>
    </wire>
    <wire loc="47:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x109ff5b18"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x10a153020"/></to>
    </wire>
    <wire loc="46:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x109ff9dc8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x10a1031a8"/></to>
    </wire>
    <wire loc="41:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x10a1031a8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x10a63b060"/></to>
    </wire>
    <wire loc="50:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x10a14d208"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x10a0fcc38"/></to>
    </wire>
    <wire loc="51:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x10a117d70"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x10a103990"/></to>
    </wire>
    <wire loc="42:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x10a103990"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x10a635830"/></to>
    </wire>
    <wire loc="52:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x10a17d648"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x10a07ed70"/></to>
    </wire>
    <wire loc="39:../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x10a07ed70"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x10a062d48"/></to>
    </wire>
    <wire loc="41:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x10a63b060"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x10a677d90"/></to>
    </wire>
    <wire loc="44:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x10a687ce8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x10a63b848"/></to>
    </wire>
    <wire loc="42:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x10a63b848"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x10a676648"/></to>
    </wire>
    <wire loc="45:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x10a689ad0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x10a07ed70"/></to>
    </wire>
    <wire loc="44:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x10a6725a8"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x10a67de60"/></to>
    </wire>
    <wire loc="38:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x10a67de60"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x10a00f5b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="45:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x10a671bd8"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x10a67a430"/></to>
    </wire>
    <wire loc="39:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x10a67a430"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x10a00c1c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="46:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x10a66f020"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x10a679740"/></to>
    </wire>
    <wire loc="40:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x10a679740"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x10a00b9a8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="47:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x10a66fc18"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x109bab7d8"/></to>
    </wire>
    <wire loc="14:../../tos/chips/msp430/timer/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x10a00f5b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerA" scoped="" ref="0x10980a060"/></to>
    </wire>
    <wire loc="15:../../tos/chips/msp430/timer/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x10a00c1c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlA0" scoped="" ref="0x10981a4d0"/></to>
    </wire>
    <wire loc="16:../../tos/chips/msp430/timer/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x10a00b9a8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA0" scoped="" ref="0x109817060"/></to>
    </wire>
    <wire loc="18:../../tos/chips/msp430/timer/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x10a00f5b0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerA" scoped="" ref="0x10980a060"/></to>
    </wire>
    <wire loc="19:../../tos/chips/msp430/timer/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x10a00c1c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlA1" scoped="" ref="0x109821898"/></to>
    </wire>
    <wire loc="20:../../tos/chips/msp430/timer/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x10a00b9a8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA1" scoped="" ref="0x109817d80"/></to>
    </wire>
    <wire loc="22:../../tos/chips/msp430/timer/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x10a00f5b0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerA" scoped="" ref="0x10980a060"/></to>
    </wire>
    <wire loc="23:../../tos/chips/msp430/timer/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x10a00c1c8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlA2" scoped="" ref="0x109820d30"/></to>
    </wire>
    <wire loc="24:../../tos/chips/msp430/timer/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x10a00b9a8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA2" scoped="" ref="0x109816b40"/></to>
    </wire>
    <wire loc="41:../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x10a0bf020"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x10a07cb88"/></to>
    </wire>
    <wire loc="39:../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Counter32khz" scoped="" ref="0x10a07cb88"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x10a074020"/></to>
    </wire>
    <wire loc="40:../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x10a067020"/></from>
      <to><interface-ref name="TimerA" scoped="" ref="0x10980a060"/></to>
    </wire>
    <wire loc="76:../../tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x10a113cf0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x109322ca0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:../../tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x10a18cbd8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x109322ca0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x10a16d1a0"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x10a1ab020"/></to>
    </wire>
    <wire loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x10a1703e8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x10a1ac6a0"/></to>
    </wire>
    <wire loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x10a204760"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x109ef9920"/></to>
    </wire>
    <wire loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x10a2033f0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x109ef85d0"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/MainC.nc">
      <documentation loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="40:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformC.nc">
      <documentation loc="34:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre and Cory Sharp&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="3:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformP.nc" safe="">
      <module/>
    </component>
    <component qname="MotePlatformC" loc="1:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosb/MotePlatformC.nc" safe="">
      <module/>
    </component>
    <component qname="MoteClockC" loc="37:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosb/MoteClockC.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosb/MoteClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockC" loc="26:../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <documentation loc="22:../../tos/chips/msp430/timer/Msp430ClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockP" loc="35:../../tos/chips/msp430/timer/Msp430ClockP.nc" safe="">
      <module/>
    </component>
    <component qname="Msp430TimerC" loc="26:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <documentation loc="22:../../tos/chips/msp430/timer/Msp430TimerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA" loc="28(Msp430TimerC.Msp430TimerA):../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:302">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:368">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:352">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB" loc="28(Msp430TimerC.Msp430TimerB):../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:286">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:400">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:384">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA0" loc="28(Msp430TimerC.Msp430TimerA0):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="22:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:354">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:370">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA1" loc="28(Msp430TimerC.Msp430TimerA1):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="22:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:356">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:372">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA2" loc="28(Msp430TimerC.Msp430TimerA2):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="22:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:358">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:374">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB0" loc="28(Msp430TimerC.Msp430TimerB0):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="22:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:386">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:402">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerCommonP" loc="2:../../tos/chips/msp430/timer/Msp430TimerCommonP.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420xRTxP" loc="6:../../tos/chips/cc2420/x-rtx/CC2420xRTxP.nc">
      <module/>
    </component>
    <component qname="LedsC" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/LedsC.nc">
      <documentation loc="34:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="40:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <documentation loc="34:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <documentation loc="35:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for general-purpose I/O.&#10;&#10; @author Joe Polastre&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC.P10" loc="39(HplMsp430GeneralIOC.P10):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P11" loc="39(HplMsp430GeneralIOC.P11):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P12" loc="39(HplMsp430GeneralIOC.P12):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P13" loc="39(HplMsp430GeneralIOC.P13):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P14" loc="39(HplMsp430GeneralIOC.P14):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P15" loc="39(HplMsp430GeneralIOC.P15):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P16" loc="39(HplMsp430GeneralIOC.P16):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P17" loc="39(HplMsp430GeneralIOC.P17):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P20" loc="39(HplMsp430GeneralIOC.P20):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P21" loc="39(HplMsp430GeneralIOC.P21):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P22" loc="39(HplMsp430GeneralIOC.P22):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P23" loc="39(HplMsp430GeneralIOC.P23):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P24" loc="39(HplMsp430GeneralIOC.P24):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P25" loc="39(HplMsp430GeneralIOC.P25):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P26" loc="39(HplMsp430GeneralIOC.P26):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P27" loc="39(HplMsp430GeneralIOC.P27):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P30" loc="39(HplMsp430GeneralIOC.P30):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P31" loc="39(HplMsp430GeneralIOC.P31):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P32" loc="39(HplMsp430GeneralIOC.P32):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P33" loc="39(HplMsp430GeneralIOC.P33):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P34" loc="39(HplMsp430GeneralIOC.P34):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P35" loc="39(HplMsp430GeneralIOC.P35):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P36" loc="39(HplMsp430GeneralIOC.P36):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P37" loc="39(HplMsp430GeneralIOC.P37):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P40" loc="39(HplMsp430GeneralIOC.P40):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P41" loc="39(HplMsp430GeneralIOC.P41):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P42" loc="39(HplMsp430GeneralIOC.P42):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P43" loc="39(HplMsp430GeneralIOC.P43):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P44" loc="39(HplMsp430GeneralIOC.P44):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P45" loc="39(HplMsp430GeneralIOC.P45):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P46" loc="39(HplMsp430GeneralIOC.P46):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P47" loc="39(HplMsp430GeneralIOC.P47):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P50" loc="39(HplMsp430GeneralIOC.P50):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P51" loc="39(HplMsp430GeneralIOC.P51):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P52" loc="39(HplMsp430GeneralIOC.P52):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P53" loc="39(HplMsp430GeneralIOC.P53):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P54" loc="39(HplMsp430GeneralIOC.P54):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P55" loc="39(HplMsp430GeneralIOC.P55):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P56" loc="39(HplMsp430GeneralIOC.P56):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P57" loc="39(HplMsp430GeneralIOC.P57):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P60" loc="39(HplMsp430GeneralIOC.P60):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P61" loc="39(HplMsp430GeneralIOC.P61):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P62" loc="39(HplMsp430GeneralIOC.P62):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P63" loc="39(HplMsp430GeneralIOC.P63):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P64" loc="39(HplMsp430GeneralIOC.P64):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P65" loc="39(HplMsp430GeneralIOC.P65):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P66" loc="39(HplMsp430GeneralIOC.P66):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P67" loc="39(HplMsp430GeneralIOC.P67):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led0Impl" loc="42(PlatformLedsC.Led0Impl):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led1Impl" loc="42(PlatformLedsC.Led1Impl):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led2Impl" loc="42(PlatformLedsC.Led2Impl):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="McuSleepC" loc="49:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/McuSleepC.nc" safe="">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430. Code for low power calculation copied from older&#10; msp430hardware.h by Vlado Handziski, Joe Polastre, and Cory Sharp.&#10;&#10;&#10; @author Philip Levis&#10; @author Vlado Handziski&#10; @author Joe Polastre&#10; @author Cory Sharp&#10; @date   October 26, 2005&#10; @see  Please refer to TEP 112 for more information about this component and its&#10;          intended use.&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MoteClockP" loc="38:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosb/MoteClockP.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosb/MoteClockP.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="RadioCountToLedsC" loc="47:RadioCountToLedsC.nc" safe="">
      <documentation loc="36:RadioCountToLedsC.nc">
        <short>&#10; Implementation of the RadioCountToLeds application.</short>
        <long>&#10; Implementation of the RadioCountToLeds application. RadioCountToLeds &#10; maintains a 4Hz counter, broadcasting its value in an AM packet &#10; every time it gets updated. A RadioCountToLeds node that hears a counter &#10; displays the bottom three bits on its LEDs. This application is a useful &#10; test to show that basic AM communication and timers work.&#10;&#10; @author Philip Levis&#10; @date   June 6 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RadioCountToLedsAppC.AMSenderC" loc="47(RadioCountToLedsAppC.AMSenderC):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMSenderC.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RadioCountToLedsAppC.AMSenderC.SenderC" loc="47(RadioCountToLedsAppC.AMSenderC.SenderC):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x1098d83b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RadioCountToLedsAppC.AMSenderC.SenderC.AMQueueEntryP" loc="43(RadioCountToLedsAppC.AMSenderC.SenderC.AMQueueEntryP):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x1098d83b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueP.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="45(AMQueueP.AMQueueImplP):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="3:../../tos/platforms/telosa/ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageC" loc="9:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageP" loc="4:../../tos/chips/cc2420/CC2420ActiveMessageP.nc" safe="">
      <module/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420xLplC" loc="1:../../tos/chips/cc2420/x-lpl/CC2420xLplC.nc">
      <configuration/>
    </component>
    <component qname="CC2420xLplP" loc="8:../../tos/chips/cc2420/x-lpl/CC2420xLplP.nc">
      <module/>
    </component>
    <component qname="CC2420xLplC.SleepTimer" loc="44(CC2420xLplC.SleepTimer):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TimerMilliP.nc">
      <documentation loc="34:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="32:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <documentation loc="22:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
        <short>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.</short>
        <long>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.  TimerMilliC in tos/system/ uses this component to&#10; allocate new timers.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C" loc="30(HilTimerMilliC.AlarmMilli32C):../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <documentation loc="22:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom" loc="30(HilTimerMilliC.AlarmMilli32C.AlarmFrom):../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="22:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer" loc="26(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer):../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="22:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzMapC" loc="7:../../tos/chips/msp430/timer/Msp430Timer32khzMapC.nc">
      <documentation loc="1:../../tos/chips/msp430/timer/Msp430Timer32khzMapC.nc">
        <short>&#10; Msp430TimerMicroMapC presents as paramaterized interfaces all of the Micro&#10; hardware timers on the MSP430 that are available for compile time allocation&#10; by &#34;new AlarmMicro16C()&#34;, &#34;new AlarmMicro32C()&#34;, and so on.</short>
        <long>&#10; Msp430TimerMicroMapC presents as paramaterized interfaces all of the Micro&#10; hardware timers on the MSP430 that are available for compile time allocation&#10; by &#34;new AlarmMicro16C()&#34;, &#34;new AlarmMicro32C()&#34;, and so on.&#10;*</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm" loc="32(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm):../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="23:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x109e411d8"/>
            <typename><typedef-ref name="T32khz" ref="0x109e41530"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C" loc="30:../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <documentation loc="22:../../tos/chips/msp430/timer/CounterMilli32C.nc">
        <short>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.</short>
        <long>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC" loc="30:../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <documentation loc="22:../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
        <short>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.</short>
        <long>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC.Counter" loc="31(Msp430Counter32khzC.Counter):../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="22:../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x109e411d8"/>
            <typename><typedef-ref name="T32khz" ref="0x109e41530"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C.Transform" loc="54(CounterMilli32C.Transform):../../tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x109e42a18"/>
            <typename><typedef-ref name="TMilli" ref="0x109e42d70"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10909a020"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x109e411d8"/>
            <typename><typedef-ref name="T32khz" ref="0x109e41530"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x109099b20"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10909a020"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.Transform" loc="51(HilTimerMilliC.AlarmMilli32C.Transform):../../tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x109e42a18"/>
            <typename><typedef-ref name="TMilli" ref="0x109e42d70"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10909a020"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x109e411d8"/>
            <typename><typedef-ref name="T32khz" ref="0x109e41530"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x109099b20"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):../../tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:../../tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x109e42a18"/>
            <typename><typedef-ref name="TMilli" ref="0x109e42d70"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):../../tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:../../tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x109e42a18"/>
            <typename><typedef-ref name="TMilli" ref="0x109e42d70"/></typename>
          </type-tag>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x109e42a18"/>
            <typename><typedef-ref name="TMilli" ref="0x109e42d70"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RandomC" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/RandomC.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420xPacketP" loc="3:../../tos/chips/cc2420/x-packet/CC2420xPacketP.nc">
      <module/>
    </component>
    <component qname="RadioCountToLedsAppC.AMReceiverC" loc="43(RadioCountToLedsAppC.AMReceiverC):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMReceiverC.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RadioCountToLedsAppC.TimerMilliC" loc="44(RadioCountToLedsAppC.TimerMilliC):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430TimerP" loc="28:../../tos/chips/msp430/timer/Msp430TimerP.nc" abstract="" safe="">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxIV_addr" ref="0x109822878" loc="29:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x109099b20"/></typename>
          </type-int>
        </constant>
        <constant name="TxR_addr" ref="0x109822bf0" loc="30:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x109099b20"/></typename>
          </type-int>
        </constant>
        <constant name="TxCTL_addr" ref="0x109841020" loc="31:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x109099b20"/></typename>
          </type-int>
        </constant>
        <constant name="TxIFG" ref="0x109841378" loc="32:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x109099b20"/></typename>
          </type-int>
        </constant>
        <constant name="TxCLR" ref="0x1098416d0" loc="33:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x109099b20"/></typename>
          </type-int>
        </constant>
        <constant name="TxIE" ref="0x109841a20" loc="34:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x109099b20"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL0" ref="0x109841d88" loc="35:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x109099b20"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL1" ref="0x109840150" loc="36:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x109099b20"/></typename>
          </type-int>
        </constant>
        <constant name="isClockSourceAsync" ref="0x109840500" loc="37:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1093131d0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430TimerCapComP" loc="28:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc" abstract="" safe="">
      <documentation loc="22:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxCCTLx_addr" ref="0x109866928" loc="29:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x109099b20"/></typename>
          </type-int>
        </constant>
        <constant name="TxCCRx_addr" ref="0x109866cd8" loc="30:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x109099b20"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOP" loc="39:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc" abstract="" safe="">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_in_addr" ref="0x109c7f998" loc="40:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_out_addr" ref="0x109c7fd20" loc="41:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_dir_addr" ref="0x109c7e108" loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_sel_addr" ref="0x109c7e490" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="pin" ref="0x109c7e7e0" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x109099790"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430GpioC" loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc" abstract="" safe="">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AMSenderC" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMSenderC.nc" abstract="">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x109e439b8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x1098d83b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DirectAMSenderC" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x109e696c0" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x1098d83b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x109e82170" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x1098d83b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x109e9a2a8" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmMilli32C" loc="30:../../tos/chips/msp430/timer/AlarmMilli32C.nc" abstract="">
      <documentation loc="22:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz16C" loc="30:../../tos/chips/msp430/timer/Alarm32khz16C.nc" abstract="">
      <documentation loc="22:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzC" loc="26:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc" abstract="">
      <documentation loc="22:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430AlarmC" loc="32:../../tos/chips/msp430/timer/Msp430AlarmC.nc" abstract="" safe="">
      <documentation loc="23:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x10a039c10" loc="32:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
          <component-ref qname="Msp430AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x10a039c10"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430CounterC" loc="31:../../tos/chips/msp430/timer/Msp430CounterC.nc" abstract="" safe="">
      <documentation loc="22:../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x10a077a50" loc="31:../../tos/chips/msp430/timer/Msp430CounterC.nc">
          <component-ref qname="Msp430CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x10a077a50"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:../../tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x10a061550" loc="55:../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x10a061550"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x10a061cb8" loc="56:../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x10a061cb8"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x10a0a10a8" loc="57:../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x10a0a10a8"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x10a0a1820" loc="58:../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x10a0a1820"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x10a0a1bc8" loc="59:../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x109099790"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x10a0a0380" loc="60:../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x10a0a0380"/></type-var>
        </typedef>
        <constant name="isdco" ref="0x10a0a06b0" loc="61:../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1093131d0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:../../tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x10a043960" loc="52:../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x10a043960"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x10a0b7110" loc="53:../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x10a0b7110"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x10a0b74d8" loc="54:../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x10a0b74d8"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x10a0b7c50" loc="55:../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x10a0b7c50"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x10a0b6020" loc="56:../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x109099790"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:../../tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:../../tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x10a0fead0" loc="46:../../tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x10a0fead0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:../../tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:../../tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x10a10e210" loc="46:../../tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x10a10e210"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x10a10e520" loc="46:../../tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x10a185020" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x10a185020"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AMReceiverC" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x10a2090c8" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x1098d83b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x109793680" loc="58:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x109793680"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1097939d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x109794220" loc="57:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x109794220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x109794570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x1097965b8" loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x1097965b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x109796908"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x10978d4f8" loc="6:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteInit" scoped="" ref="0x10978d4f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10978d848"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x109791740" loc="4:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x109791740"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x109791a90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteClockInit" ref="0x109791e10" loc="5:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x109791e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10978d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x10978db98" loc="7:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LedsInit" scoped="" ref="0x10978db98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10978c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x109790610" loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosb/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x109790610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x109790960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MoteClockInit" ref="0x1097ac0e8" loc="39:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosb/MoteClockC.nc">
      <component-ref qname="MoteClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x1097ac0e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1097ac438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x1097bf2b8" loc="29:../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x1097bf2b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x1097a81a8"/>
        <function-ref name="initTimerB" scoped="" ref="0x1097bf790"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x1097bf918"/>
        <function-ref name="initTimerA" scoped="" ref="0x1097bfaa0"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x1097bf608"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x1097bfc28"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x1097bfdb0"/>
        <function-ref name="initClocks" scoped="" ref="0x1097a8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x1097a9020" loc="28:../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x1097a9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1097a9370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x1097cfb60" loc="38:../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x1097cfb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x1097cead8"/>
        <function-ref name="initTimerB" scoped="" ref="0x1097ce1a8"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x1097ce330"/>
        <function-ref name="initTimerA" scoped="" ref="0x1097ce4b8"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x1097ce020"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x1097ce640"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x1097ce7c8"/>
        <function-ref name="initClocks" scoped="" ref="0x1097ce950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x1097cee08" loc="39:../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x1097cee08"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x1097cd1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x1097cf4f0" loc="37:../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x1097cf4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1097cf840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA2" ref="0x109820d30" loc="31:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA2" scoped="" ref="0x109820d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x1098190d8"/>
        <function-ref name="getControl" scoped="" ref="0x109819260"/>
        <function-ref name="enableEvents" scoped="" ref="0x1098193e8"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x109819570"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x1098196f8"/>
        <function-ref name="disableEvents" scoped="" ref="0x109819880"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x109819a08"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x109819b90"/>
        <function-ref name="setControl" scoped="" ref="0x109819d18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA1" ref="0x109831558" loc="36:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA1" scoped="" ref="0x109831558"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x1098318a8"/>
        <function-ref name="setSynchronous" scoped="" ref="0x109831a30"/>
        <function-ref name="captured" scoped="" ref="0x109831bb8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x109831d40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x109830020"/>
        <function-ref name="setEdge" scoped="" ref="0x1098301a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB0" ref="0x109829d30" loc="40:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB0" scoped="" ref="0x109829d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x1098280d8"/>
        <function-ref name="getControl" scoped="" ref="0x109828260"/>
        <function-ref name="enableEvents" scoped="" ref="0x1098283e8"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x109828570"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x1098286f8"/>
        <function-ref name="disableEvents" scoped="" ref="0x109828880"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x109828a08"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x109828b90"/>
        <function-ref name="setControl" scoped="" ref="0x109828d18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA1" ref="0x109817d80" loc="33:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0x109817d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x109816170"/>
        <function-ref name="setEvent" scoped="" ref="0x1098162f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x109816480"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x109816608"/>
        <function-ref name="fired" scoped="" ref="0x109816790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA0" ref="0x10981a4d0" loc="29:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0x10981a4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x10981a820"/>
        <function-ref name="getControl" scoped="" ref="0x10981a9a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x10981ab30"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x10981acb8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x10981ae40"/>
        <function-ref name="disableEvents" scoped="" ref="0x109821020"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x1098211a8"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x109821330"/>
        <function-ref name="setControl" scoped="" ref="0x1098214b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA2" ref="0x109830558" loc="37:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA2" scoped="" ref="0x109830558"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x1098308a8"/>
        <function-ref name="setSynchronous" scoped="" ref="0x109830a30"/>
        <function-ref name="captured" scoped="" ref="0x109830bb8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x109830d40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10982a020"/>
        <function-ref name="setEdge" scoped="" ref="0x10982a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerA" ref="0x10980a060" loc="28:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0x10980a060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10980a3b0"/>
        <function-ref name="setClockSource" scoped="" ref="0x10980a538"/>
        <function-ref name="enableEvents" scoped="" ref="0x10980a6c0"/>
        <function-ref name="get" scoped="" ref="0x10980a848"/>
        <function-ref name="disableEvents" scoped="" ref="0x10980a9d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10980ab58"/>
        <function-ref name="getMode" scoped="" ref="0x10980ace0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10980ae68"/>
        <function-ref name="overflow" scoped="" ref="0x109809020"/>
        <function-ref name="setMode" scoped="" ref="0x1098091a8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x109809330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA2" ref="0x109816b40" loc="34:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA2" scoped="" ref="0x109816b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x109812020"/>
        <function-ref name="setEvent" scoped="" ref="0x1098121a8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x109812330"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x1098124b8"/>
        <function-ref name="fired" scoped="" ref="0x109812640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA1" ref="0x109821898" loc="30:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0x109821898"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x109821be8"/>
        <function-ref name="getControl" scoped="" ref="0x109821d70"/>
        <function-ref name="enableEvents" scoped="" ref="0x109820020"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x1098201a8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x109820330"/>
        <function-ref name="disableEvents" scoped="" ref="0x1098204b8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x109820640"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x1098207c8"/>
        <function-ref name="setControl" scoped="" ref="0x109820950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA0" ref="0x10982b668" loc="35:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA0" scoped="" ref="0x10982b668"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10982b9b8"/>
        <function-ref name="setSynchronous" scoped="" ref="0x10982bb40"/>
        <function-ref name="captured" scoped="" ref="0x10982bcc8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10982be50"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x109831020"/>
        <function-ref name="setEdge" scoped="" ref="0x1098311a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA0" ref="0x109817060" loc="32:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0x109817060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x1098173b0"/>
        <function-ref name="setEvent" scoped="" ref="0x109817538"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x1098176c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x109817848"/>
        <function-ref name="fired" scoped="" ref="0x1098179d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerB" ref="0x10982a520" loc="39:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerB" scoped="" ref="0x10982a520"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10982a870"/>
        <function-ref name="setClockSource" scoped="" ref="0x10982a9f8"/>
        <function-ref name="enableEvents" scoped="" ref="0x10982ab80"/>
        <function-ref name="get" scoped="" ref="0x10982ad08"/>
        <function-ref name="disableEvents" scoped="" ref="0x109829020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1098291a8"/>
        <function-ref name="getMode" scoped="" ref="0x109829330"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1098294b8"/>
        <function-ref name="overflow" scoped="" ref="0x109829640"/>
        <function-ref name="setMode" scoped="" ref="0x1098297c8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x109829950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB0" ref="0x109826020" loc="42:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB0" scoped="" ref="0x109826020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x109826370"/>
        <function-ref name="setSynchronous" scoped="" ref="0x1098264f8"/>
        <function-ref name="captured" scoped="" ref="0x109826680"/>
        <function-ref name="clearOverflow" scoped="" ref="0x109826808"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x109826990"/>
        <function-ref name="setEdge" scoped="" ref="0x109826b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB0" ref="0x109827120" loc="41:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB0" scoped="" ref="0x109827120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x109827570"/>
        <function-ref name="setEvent" scoped="" ref="0x1098276f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x109827880"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x109827a08"/>
        <function-ref name="fired" scoped="" ref="0x109827b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x109870c70" loc="42:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x109870c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x10986f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x109870658" loc="41:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x109870658"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x1098709a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x10986f2e8" loc="43:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x10986f2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x10986f638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x109870020" loc="40:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x109870020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x109099790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x109870390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x109852798" loc="39:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x109852798"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x109852ae8"/>
        <function-ref name="setClockSource" scoped="" ref="0x109852c70"/>
        <function-ref name="enableEvents" scoped="" ref="0x109852df8"/>
        <function-ref name="get" scoped="" ref="0x109871020"/>
        <function-ref name="disableEvents" scoped="" ref="0x1098711a8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x109871330"/>
        <function-ref name="getMode" scoped="" ref="0x1098714b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x109871640"/>
        <function-ref name="overflow" scoped="" ref="0x1098717c8"/>
        <function-ref name="setMode" scoped="" ref="0x109871950"/>
        <function-ref name="setInputDivider" scoped="" ref="0x109871ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x109868638" loc="42:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x109868638"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x109868988"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x109868020" loc="41:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x109868020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x109868370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x109868c50" loc="43:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x109868c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x109867020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x1098698a0" loc="40:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x1098698a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x109099790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x109869c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x10986b1e8" loc="39:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x10986b1e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10986b538"/>
        <function-ref name="setClockSource" scoped="" ref="0x10986b6c0"/>
        <function-ref name="enableEvents" scoped="" ref="0x10986b848"/>
        <function-ref name="get" scoped="" ref="0x10986b9d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x10986bb58"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10986bce0"/>
        <function-ref name="getMode" scoped="" ref="0x10986be68"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x109869020"/>
        <function-ref name="overflow" scoped="" ref="0x1098691a8"/>
        <function-ref name="setMode" scoped="" ref="0x109869330"/>
        <function-ref name="setInputDivider" scoped="" ref="0x1098694b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x1098a4c58" loc="35:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x1098a4c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x1098c5020"/>
        <function-ref name="setSynchronous" scoped="" ref="0x1098c51a8"/>
        <function-ref name="captured" scoped="" ref="0x1098c5330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1098c54b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1098c5640"/>
        <function-ref name="setEdge" scoped="" ref="0x1098c57c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x109864c80" loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x109864c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x1098a5020"/>
        <function-ref name="getControl" scoped="" ref="0x1098a51a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x1098a5330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x1098a54b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x1098a5640"/>
        <function-ref name="disableEvents" scoped="" ref="0x1098a57c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x1098a5950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x1098a5ad8"/>
        <function-ref name="setControl" scoped="" ref="0x1098a5c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x1098c3100" loc="37:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x1098c3100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x1098c3450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x1098a4020" loc="34:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x1098a4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x1098a4370"/>
        <function-ref name="setEvent" scoped="" ref="0x1098a44f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x1098a4680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x1098a4808"/>
        <function-ref name="fired" scoped="" ref="0x1098a4990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x1098c5a90" loc="36:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x1098c5a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1098c5de0"/>
        <function-ref name="setClockSource" scoped="" ref="0x1098c4020"/>
        <function-ref name="enableEvents" scoped="" ref="0x1098c41a8"/>
        <function-ref name="get" scoped="" ref="0x1098c4330"/>
        <function-ref name="disableEvents" scoped="" ref="0x1098c44b8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1098c4640"/>
        <function-ref name="getMode" scoped="" ref="0x1098c47c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1098c4950"/>
        <function-ref name="overflow" scoped="" ref="0x1098c4ad8"/>
        <function-ref name="setMode" scoped="" ref="0x1098c4c60"/>
        <function-ref name="setInputDivider" scoped="" ref="0x1098c4de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x1098bfc58" loc="35:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x1098bfc58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x1098be020"/>
        <function-ref name="setSynchronous" scoped="" ref="0x1098be1a8"/>
        <function-ref name="captured" scoped="" ref="0x1098be330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1098be4b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1098be640"/>
        <function-ref name="setEdge" scoped="" ref="0x1098be7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x1098c1c80" loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x1098c1c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x1098c0020"/>
        <function-ref name="getControl" scoped="" ref="0x1098c01a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x1098c0330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x1098c04b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x1098c0640"/>
        <function-ref name="disableEvents" scoped="" ref="0x1098c07c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x1098c0950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x1098c0ad8"/>
        <function-ref name="setControl" scoped="" ref="0x1098c0c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x1098bc100" loc="37:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x1098bc100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x1098bc450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x1098bf020" loc="34:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x1098bf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x1098bf370"/>
        <function-ref name="setEvent" scoped="" ref="0x1098bf4f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x1098bf680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x1098bf808"/>
        <function-ref name="fired" scoped="" ref="0x1098bf990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x1098bea90" loc="36:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x1098bea90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1098bede0"/>
        <function-ref name="setClockSource" scoped="" ref="0x1098bd020"/>
        <function-ref name="enableEvents" scoped="" ref="0x1098bd1a8"/>
        <function-ref name="get" scoped="" ref="0x1098bd330"/>
        <function-ref name="disableEvents" scoped="" ref="0x1098bd4b8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1098bd640"/>
        <function-ref name="getMode" scoped="" ref="0x1098bd7c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1098bd950"/>
        <function-ref name="overflow" scoped="" ref="0x1098bdad8"/>
        <function-ref name="setMode" scoped="" ref="0x1098bdc60"/>
        <function-ref name="setInputDivider" scoped="" ref="0x1098bdde8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x1098b7c58" loc="35:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x1098b7c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x1098b6020"/>
        <function-ref name="setSynchronous" scoped="" ref="0x1098b61a8"/>
        <function-ref name="captured" scoped="" ref="0x1098b6330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1098b64b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1098b6640"/>
        <function-ref name="setEdge" scoped="" ref="0x1098b67c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x1098b9c80" loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x1098b9c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x1098b8020"/>
        <function-ref name="getControl" scoped="" ref="0x1098b81a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x1098b8330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x1098b84b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x1098b8640"/>
        <function-ref name="disableEvents" scoped="" ref="0x1098b87c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x1098b8950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x1098b8ad8"/>
        <function-ref name="setControl" scoped="" ref="0x1098b8c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x1098d6100" loc="37:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x1098d6100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x1098d6450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x1098b7020" loc="34:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x1098b7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x1098b7370"/>
        <function-ref name="setEvent" scoped="" ref="0x1098b74f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x1098b7680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x1098b7808"/>
        <function-ref name="fired" scoped="" ref="0x1098b7990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x1098b6a90" loc="36:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x1098b6a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1098b6de0"/>
        <function-ref name="setClockSource" scoped="" ref="0x1098b5020"/>
        <function-ref name="enableEvents" scoped="" ref="0x1098b51a8"/>
        <function-ref name="get" scoped="" ref="0x1098b5330"/>
        <function-ref name="disableEvents" scoped="" ref="0x1098b54b8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1098b5640"/>
        <function-ref name="getMode" scoped="" ref="0x1098b57c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1098b5950"/>
        <function-ref name="overflow" scoped="" ref="0x1098b5ad8"/>
        <function-ref name="setMode" scoped="" ref="0x1098b5c60"/>
        <function-ref name="setInputDivider" scoped="" ref="0x1098b5de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x1098d2c58" loc="35:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x1098d2c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x1098d1020"/>
        <function-ref name="setSynchronous" scoped="" ref="0x1098d11a8"/>
        <function-ref name="captured" scoped="" ref="0x1098d1330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1098d14b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1098d1640"/>
        <function-ref name="setEdge" scoped="" ref="0x1098d17c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x1098d4c80" loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x1098d4c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x1098d3020"/>
        <function-ref name="getControl" scoped="" ref="0x1098d31a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x1098d3330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x1098d34b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x1098d3640"/>
        <function-ref name="disableEvents" scoped="" ref="0x1098d37c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x1098d3950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x1098d3ad8"/>
        <function-ref name="setControl" scoped="" ref="0x1098d3c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x1098cf100" loc="37:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x1098cf100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x1098cf450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x1098d2020" loc="34:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x1098d2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x1098d2370"/>
        <function-ref name="setEvent" scoped="" ref="0x1098d24f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x1098d2680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x1098d2808"/>
        <function-ref name="fired" scoped="" ref="0x1098d2990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x1098d1a90" loc="36:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x1098d1a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1098d1de0"/>
        <function-ref name="setClockSource" scoped="" ref="0x1098d0020"/>
        <function-ref name="enableEvents" scoped="" ref="0x1098d01a8"/>
        <function-ref name="get" scoped="" ref="0x1098d0330"/>
        <function-ref name="disableEvents" scoped="" ref="0x1098d04b8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1098d0640"/>
        <function-ref name="getMode" scoped="" ref="0x1098d07c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1098d0950"/>
        <function-ref name="overflow" scoped="" ref="0x1098d0ad8"/>
        <function-ref name="setMode" scoped="" ref="0x1098d0c60"/>
        <function-ref name="setInputDivider" scoped="" ref="0x1098d0de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA0" ref="0x1098cb4f8" loc="4:../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA0" scoped="" ref="0x1098cb4f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x1098cb848"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA1" ref="0x1098cbc40" loc="5:../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA1" scoped="" ref="0x1098cbc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x1098c9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB0" ref="0x1098c9418" loc="6:../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB0" scoped="" ref="0x1098c9418"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x1098c9768"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x1098c8080" loc="10:../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x1098c8080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x1098c83d0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x1098c8558"/>
        <function-ref name="led1On" scoped="" ref="0x1098c86e0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x1098c8868"/>
        <function-ref name="led2Toggle" scoped="" ref="0x1098c89f0"/>
        <function-ref name="get" scoped="" ref="0x1098c8b78"/>
        <function-ref name="led1Off" scoped="" ref="0x1098c8d00"/>
        <function-ref name="led2Off" scoped="" ref="0x1098c74b8"/>
        <function-ref name="set" scoped="" ref="0x1098c7020"/>
        <function-ref name="led0On" scoped="" ref="0x1098c71a8"/>
        <function-ref name="led2On" scoped="" ref="0x1098c7330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB1" ref="0x109a487c8" loc="13:../../tos/chips/cc2420/x-rtx/CC2420xRTxP.nc">
      <component-ref qname="CC2420xRTxP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB1" scoped="" ref="0x109a487c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x109a48b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x109a4a868" loc="10:../../tos/chips/cc2420/x-rtx/CC2420xRTxP.nc">
      <component-ref qname="CC2420xRTxP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x109a4a868"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x109a4abb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OppoRouting" ref="0x109a48080" loc="12:../../tos/chips/cc2420/x-rtx/CC2420xRTxP.nc">
      <component-ref qname="CC2420xRTxP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OppoRouting" scoped="" ref="0x109a48080"/></type-interface>
      <instance>
        <interfacedef-ref qname="OppoRouting"/>
      </instance>
      <interface-functions>
        <function-ref name="setLocalMetric" scoped="" ref="0x109a483d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x109a32b58" loc="7:../../tos/chips/cc2420/x-rtx/CC2420xRTxP.nc">
      <component-ref qname="CC2420xRTxP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x109a32b58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x109a31020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x109a48dd0" loc="15:../../tos/chips/cc2420/x-rtx/CC2420xRTxP.nc">
      <component-ref qname="CC2420xRTxP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x109a48dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x109a47170"/>
        <function-ref name="led0Toggle" scoped="" ref="0x109a472f8"/>
        <function-ref name="led1On" scoped="" ref="0x109a47480"/>
        <function-ref name="led1Toggle" scoped="" ref="0x109a47608"/>
        <function-ref name="led2Toggle" scoped="" ref="0x109a47790"/>
        <function-ref name="get" scoped="" ref="0x109a47918"/>
        <function-ref name="led1Off" scoped="" ref="0x109a47aa0"/>
        <function-ref name="led2Off" scoped="" ref="0x109a461a8"/>
        <function-ref name="set" scoped="" ref="0x109a47c28"/>
        <function-ref name="led0On" scoped="" ref="0x109a47db0"/>
        <function-ref name="led2On" scoped="" ref="0x109a46020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LplSend" ref="0x109a2c3d0" loc="8:../../tos/chips/cc2420/x-rtx/CC2420xRTxP.nc">
      <component-ref qname="CC2420xRTxP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LplSend" scoped="" ref="0x109a2c3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LplSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x109a2c720"/>
        <function-ref name="sendDone" scoped="" ref="0x109a2c8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LplTime" ref="0x109a49a10" loc="11:../../tos/chips/cc2420/x-rtx/CC2420xRTxP.nc">
      <component-ref qname="CC2420xRTxP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LplTime" scoped="" ref="0x109a49a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="LplTime"/>
      </instance>
      <interface-functions>
        <function-ref name="timeRadio" scoped="" ref="0x109a49d60"/>
        <function-ref name="timeCompensated" scoped="" ref="0x109a26020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LplReceive" ref="0x109a30020" loc="9:../../tos/chips/cc2420/x-rtx/CC2420xRTxP.nc">
      <component-ref qname="CC2420xRTxP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LplReceive" scoped="" ref="0x109a30020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LplReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="txDetect" scoped="" ref="0x109a30370"/>
        <function-ref name="rxInit" scoped="" ref="0x109a304f8"/>
        <function-ref name="receive" scoped="" ref="0x109a30680"/>
        <function-ref name="rxOn" scoped="" ref="0x109a30808"/>
        <function-ref name="rxBuffSet" scoped="" ref="0x109a30990"/>
        <function-ref name="rxEnable" scoped="" ref="0x109a30b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x109bab7d8" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x109bab7d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x109babb28"/>
        <function-ref name="led0Toggle" scoped="" ref="0x109babcb0"/>
        <function-ref name="led1On" scoped="" ref="0x109babe38"/>
        <function-ref name="led1Toggle" scoped="" ref="0x109ba8020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x109ba81a8"/>
        <function-ref name="get" scoped="" ref="0x109ba8330"/>
        <function-ref name="led1Off" scoped="" ref="0x109ba84b8"/>
        <function-ref name="led2Off" scoped="" ref="0x109ba8ad8"/>
        <function-ref name="set" scoped="" ref="0x109ba8640"/>
        <function-ref name="led0On" scoped="" ref="0x109ba87c8"/>
        <function-ref name="led2On" scoped="" ref="0x109ba8950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x109bc9348" loc="50:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x109bc9348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x109bc9698"/>
        <function-ref name="isInput" scoped="" ref="0x109bc9820"/>
        <function-ref name="toggle" scoped="" ref="0x109bc99a8"/>
        <function-ref name="isOutput" scoped="" ref="0x109bc9b30"/>
        <function-ref name="get" scoped="" ref="0x109bc9cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x109bc9e40"/>
        <function-ref name="set" scoped="" ref="0x109ba1020"/>
        <function-ref name="clr" scoped="" ref="0x109ba11a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x109ba79d0" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x109ba79d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x109ba7d20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x109ba14c0" loc="51:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x109ba14c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x109ba1810"/>
        <function-ref name="isInput" scoped="" ref="0x109ba1998"/>
        <function-ref name="toggle" scoped="" ref="0x109ba1b20"/>
        <function-ref name="isOutput" scoped="" ref="0x109ba1ca8"/>
        <function-ref name="get" scoped="" ref="0x109ba1e30"/>
        <function-ref name="makeOutput" scoped="" ref="0x109ba0020"/>
        <function-ref name="set" scoped="" ref="0x109ba01a8"/>
        <function-ref name="clr" scoped="" ref="0x109ba0330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x109ba3020" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x109ba3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x109ba3370"/>
        <function-ref name="led0Toggle" scoped="" ref="0x109ba34f8"/>
        <function-ref name="led1On" scoped="" ref="0x109ba3680"/>
        <function-ref name="led1Toggle" scoped="" ref="0x109ba3808"/>
        <function-ref name="led2Toggle" scoped="" ref="0x109ba3990"/>
        <function-ref name="get" scoped="" ref="0x109ba3b18"/>
        <function-ref name="led1Off" scoped="" ref="0x109ba3ca0"/>
        <function-ref name="led2Off" scoped="" ref="0x109ba2330"/>
        <function-ref name="set" scoped="" ref="0x109ba3e28"/>
        <function-ref name="led0On" scoped="" ref="0x109ba2020"/>
        <function-ref name="led2On" scoped="" ref="0x109ba21a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x109ba0648" loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x109ba0648"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x109ba0998"/>
        <function-ref name="isInput" scoped="" ref="0x109ba0b20"/>
        <function-ref name="toggle" scoped="" ref="0x109ba0ca8"/>
        <function-ref name="isOutput" scoped="" ref="0x109ba0e30"/>
        <function-ref name="get" scoped="" ref="0x109bc8020"/>
        <function-ref name="makeOutput" scoped="" ref="0x109bc81a8"/>
        <function-ref name="set" scoped="" ref="0x109bc8330"/>
        <function-ref name="clr" scoped="" ref="0x109bc84b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x109ba5ab0" loc="41:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x109ba5ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x109ba5e00"/>
        <function-ref name="isInput" scoped="" ref="0x109bdc020"/>
        <function-ref name="toggle" scoped="" ref="0x109bdc1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x109bdc330"/>
        <function-ref name="get" scoped="" ref="0x109bdc4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x109bdc640"/>
        <function-ref name="set" scoped="" ref="0x109bdc7c8"/>
        <function-ref name="clr" scoped="" ref="0x109bdc950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x109bdcca8" loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x109bdcca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x109bdb020"/>
        <function-ref name="isInput" scoped="" ref="0x109bdb1a8"/>
        <function-ref name="toggle" scoped="" ref="0x109bdb330"/>
        <function-ref name="isOutput" scoped="" ref="0x109bdb4b8"/>
        <function-ref name="get" scoped="" ref="0x109bdb640"/>
        <function-ref name="makeOutput" scoped="" ref="0x109bdb7c8"/>
        <function-ref name="set" scoped="" ref="0x109bdb950"/>
        <function-ref name="clr" scoped="" ref="0x109bdbad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x109bd9020" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x109bd9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x109bd9370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x109bdbe30" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x109bdbe30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x109bda1a8"/>
        <function-ref name="isInput" scoped="" ref="0x109bda330"/>
        <function-ref name="toggle" scoped="" ref="0x109bda4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x109bda640"/>
        <function-ref name="get" scoped="" ref="0x109bda7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x109bda950"/>
        <function-ref name="set" scoped="" ref="0x109bdaad8"/>
        <function-ref name="clr" scoped="" ref="0x109bdac60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x109bf2568" loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x109bf2568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x109bf28b8"/>
        <function-ref name="isInput" scoped="" ref="0x109bf2a40"/>
        <function-ref name="setResistor" scoped="" ref="0x109bf2bc8"/>
        <function-ref name="toggle" scoped="" ref="0x109bf2d50"/>
        <function-ref name="isOutput" scoped="" ref="0x109bf1020"/>
        <function-ref name="getResistor" scoped="" ref="0x109bf11a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x109bf1330"/>
        <function-ref name="get" scoped="" ref="0x109bf14b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x109bf1640"/>
        <function-ref name="getRaw" scoped="" ref="0x109bf17c8"/>
        <function-ref name="set" scoped="" ref="0x109bf1950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x109bf1ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x109bf1c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x109bf0020"/>
        <function-ref name="clr" scoped="" ref="0x109bf01a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x109c0d568" loc="66:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x109c0d568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x109c0d8b8"/>
        <function-ref name="isInput" scoped="" ref="0x109c0da40"/>
        <function-ref name="setResistor" scoped="" ref="0x109c0dbc8"/>
        <function-ref name="toggle" scoped="" ref="0x109c0dd50"/>
        <function-ref name="isOutput" scoped="" ref="0x109c0c020"/>
        <function-ref name="getResistor" scoped="" ref="0x109c0c1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x109c0c330"/>
        <function-ref name="get" scoped="" ref="0x109c0c4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x109c0c640"/>
        <function-ref name="getRaw" scoped="" ref="0x109c0c7c8"/>
        <function-ref name="set" scoped="" ref="0x109c0c950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x109c0cad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x109c0cc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x109c0b020"/>
        <function-ref name="clr" scoped="" ref="0x109c0b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SDA" ref="0x109c537d0" loc="145:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SDA" scoped="" ref="0x109c537d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x109c53b20"/>
        <function-ref name="isInput" scoped="" ref="0x109c53ca8"/>
        <function-ref name="setResistor" scoped="" ref="0x109c53e30"/>
        <function-ref name="toggle" scoped="" ref="0x109c52020"/>
        <function-ref name="isOutput" scoped="" ref="0x109c521a8"/>
        <function-ref name="getResistor" scoped="" ref="0x109c52330"/>
        <function-ref name="makeOutput" scoped="" ref="0x109c524b8"/>
        <function-ref name="get" scoped="" ref="0x109c52640"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x109c527c8"/>
        <function-ref name="getRaw" scoped="" ref="0x109c52950"/>
        <function-ref name="set" scoped="" ref="0x109c52ad8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x109c52c60"/>
        <function-ref name="isIOFunc" scoped="" ref="0x109c52de8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x109c51120"/>
        <function-ref name="clr" scoped="" ref="0x109c512a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC6" ref="0x109c5f558" loc="165:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC6" scoped="" ref="0x109c5f558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x109c5f8a8"/>
        <function-ref name="isInput" scoped="" ref="0x109c5fa30"/>
        <function-ref name="setResistor" scoped="" ref="0x109c5fbb8"/>
        <function-ref name="toggle" scoped="" ref="0x109c5fd40"/>
        <function-ref name="isOutput" scoped="" ref="0x109c5e020"/>
        <function-ref name="getResistor" scoped="" ref="0x109c5e1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x109c5e330"/>
        <function-ref name="get" scoped="" ref="0x109c5e4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x109c5e640"/>
        <function-ref name="getRaw" scoped="" ref="0x109c5e7c8"/>
        <function-ref name="set" scoped="" ref="0x109c5e950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x109c5ead8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x109c5ec60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x109c5d020"/>
        <function-ref name="clr" scoped="" ref="0x109c5d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI0" ref="0x109c51660" loc="146:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI0" scoped="" ref="0x109c51660"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x109c519b0"/>
        <function-ref name="isInput" scoped="" ref="0x109c51b38"/>
        <function-ref name="setResistor" scoped="" ref="0x109c51cc0"/>
        <function-ref name="toggle" scoped="" ref="0x109c51e48"/>
        <function-ref name="isOutput" scoped="" ref="0x109c50020"/>
        <function-ref name="getResistor" scoped="" ref="0x109c501a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x109c50330"/>
        <function-ref name="get" scoped="" ref="0x109c504b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x109c50640"/>
        <function-ref name="getRaw" scoped="" ref="0x109c507c8"/>
        <function-ref name="set" scoped="" ref="0x109c50950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x109c50ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x109c50c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x109c4f020"/>
        <function-ref name="clr" scoped="" ref="0x109c4f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port30" ref="0x109c09568" loc="71:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port30" scoped="" ref="0x109c09568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x109c098b8"/>
        <function-ref name="isInput" scoped="" ref="0x109c09a40"/>
        <function-ref name="setResistor" scoped="" ref="0x109c09bc8"/>
        <function-ref name="toggle" scoped="" ref="0x109c09d50"/>
        <function-ref name="isOutput" scoped="" ref="0x109c08020"/>
        <function-ref name="getResistor" scoped="" ref="0x109c081a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x109c08330"/>
        <function-ref name="get" scoped="" ref="0x109c084b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x109c08640"/>
        <function-ref name="getRaw" scoped="" ref="0x109c087c8"/>
        <function-ref name="set" scoped="" ref="0x109c08950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x109c08ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x109c08c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x109c07020"/>
        <function-ref name="clr" scoped="" ref="0x109c071a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port42" ref="0x109c24568" loc="84:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port42" scoped="" ref="0x109c24568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x109c248b8"/>
        <function-ref name="isInput" scoped="" ref="0x109c24a40"/>
        <function-ref name="setResistor" scoped="" ref="0x109c24bc8"/>
        <function-ref name="toggle" scoped="" ref="0x109c24d50"/>
        <function-ref name="isOutput" scoped="" ref="0x109c23020"/>
        <function-ref name="getResistor" scoped="" ref="0x109c231a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x109c23330"/>
        <function-ref name="get" scoped="" ref="0x109c234b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x109c23640"/>
        <function-ref name="getRaw" scoped="" ref="0x109c237c8"/>
        <function-ref name="set" scoped="" ref="0x109c23950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x109c23ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x109c23c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x109c22020"/>
        <function-ref name="clr" scoped="" ref="0x109c221a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port54" ref="0x109c40568" loc="97:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port54" scoped="" ref="0x109c40568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x109c408b8"/>
        <function-ref name="isInput" scoped="" ref="0x109c40a40"/>
        <function-ref name="setResistor" scoped="" ref="0x109c40bc8"/>
        <function-ref name="toggle" scoped="" ref="0x109c40d50"/>
        <function-ref name="isOutput" scoped="" ref="0x109c3f020"/>
        <function-ref name="getResistor" scoped="" ref="0x109c3f1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x109c3f330"/>
        <function-ref name="get" scoped="" ref="0x109c3f4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x109c3f640"/>
        <function-ref name="getRaw" scoped="" ref="0x109c3f7c8"/>
        <function-ref name="set" scoped="" ref="0x109c3f950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x109c3fad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x109c3fc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x109c3e020"/>
        <function-ref name="clr" scoped="" ref="0x109c3e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port64" ref="0x109c30568" loc="108:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0x109c30568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x109c308b8"/>
        <function-ref name="isInput" scoped="" ref="0x109c30a40"/>
        <function-ref name="setResistor" scoped="" ref="0x109c30bc8"/>
        <function-ref name="toggle" scoped="" ref="0x109c30d50"/>
        <function-ref name="isOutput" scoped="" ref="0x109c2f020"/>
        <function-ref name="getResistor" scoped="" ref="0x109c2f1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x109c2f330"/>
        <function-ref name="get" scoped="" ref="0x109c2f4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x109c2f640"/>
        <function-ref name="getRaw" scoped="" ref="0x109c2f7c8"/>
        <function-ref name="set" scoped="" ref="0x109c2f950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x109c2fad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x109c2fc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x109c2e020"/>
        <function-ref name="clr" scoped="" ref="0x109c2e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD0" ref="0x109c4b560" loc="149:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD0" scoped="" ref="0x109c4b560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x109c4b8b0"/>
        <function-ref name="isInput" scoped="" ref="0x109c4ba38"/>
        <function-ref name="setResistor" scoped="" ref="0x109c4bbc0"/>
        <function-ref name="toggle" scoped="" ref="0x109c4bd48"/>
        <function-ref name="isOutput" scoped="" ref="0x109c4a020"/>
        <function-ref name="getResistor" scoped="" ref="0x109c4a1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x109c4a330"/>
        <function-ref name="get" scoped="" ref="0x109c4a4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x109c4a640"/>
        <function-ref name="getRaw" scoped="" ref="0x109c4a7c8"/>
        <function-ref name="set" scoped="" ref="0x109c4a950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x109c4aad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x109c4ac60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x109c49020"/>
        <function-ref name="clr" scoped="" ref="0x109c491a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC0" ref="0x109c6b558" loc="159:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC0" scoped="" ref="0x109c6b558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x109c6b8a8"/>
        <function-ref name="isInput" scoped="" ref="0x109c6ba30"/>
        <function-ref name="setResistor" scoped="" ref="0x109c6bbb8"/>
        <function-ref name="toggle" scoped="" ref="0x109c6bd40"/>
        <function-ref name="isOutput" scoped="" ref="0x109c6a020"/>
        <function-ref name="getResistor" scoped="" ref="0x109c6a1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x109c6a330"/>
        <function-ref name="get" scoped="" ref="0x109c6a4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x109c6a640"/>
        <function-ref name="getRaw" scoped="" ref="0x109c6a7c8"/>
        <function-ref name="set" scoped="" ref="0x109c6a950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x109c6aad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x109c6ac60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x109c69020"/>
        <function-ref name="clr" scoped="" ref="0x109c691a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSIN" ref="0x109c86560" loc="171:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSIN" scoped="" ref="0x109c86560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x109c868b0"/>
        <function-ref name="isInput" scoped="" ref="0x109c86a38"/>
        <function-ref name="setResistor" scoped="" ref="0x109c86bc0"/>
        <function-ref name="toggle" scoped="" ref="0x109c86d48"/>
        <function-ref name="isOutput" scoped="" ref="0x109c85020"/>
        <function-ref name="getResistor" scoped="" ref="0x109c851a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x109c85330"/>
        <function-ref name="get" scoped="" ref="0x109c854b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x109c85640"/>
        <function-ref name="getRaw" scoped="" ref="0x109c857c8"/>
        <function-ref name="set" scoped="" ref="0x109c85950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x109c85ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x109c85c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x109c84020"/>
        <function-ref name="clr" scoped="" ref="0x109c841a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x109bec568" loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x109bec568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x109bec8b8"/>
        <function-ref name="isInput" scoped="" ref="0x109beca40"/>
        <function-ref name="setResistor" scoped="" ref="0x109becbc8"/>
        <function-ref name="toggle" scoped="" ref="0x109becd50"/>
        <function-ref name="isOutput" scoped="" ref="0x109beb020"/>
        <function-ref name="getResistor" scoped="" ref="0x109beb1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x109beb330"/>
        <function-ref name="get" scoped="" ref="0x109beb4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x109beb640"/>
        <function-ref name="getRaw" scoped="" ref="0x109beb7c8"/>
        <function-ref name="set" scoped="" ref="0x109beb950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x109bebad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x109bebc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x109bea020"/>
        <function-ref name="clr" scoped="" ref="0x109bea1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD0" ref="0x109c49560" loc="150:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD0" scoped="" ref="0x109c49560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x109c498b0"/>
        <function-ref name="isInput" scoped="" ref="0x109c49a38"/>
        <function-ref name="setResistor" scoped="" ref="0x109c49bc0"/>
        <function-ref name="toggle" scoped="" ref="0x109c49d48"/>
        <function-ref name="isOutput" scoped="" ref="0x109c48020"/>
        <function-ref name="getResistor" scoped="" ref="0x109c481a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x109c48330"/>
        <function-ref name="get" scoped="" ref="0x109c484b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x109c48640"/>
        <function-ref name="getRaw" scoped="" ref="0x109c487c8"/>
        <function-ref name="set" scoped="" ref="0x109c48950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x109c48ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x109c48c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x109c47020"/>
        <function-ref name="clr" scoped="" ref="0x109c471a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x109be8568" loc="61:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x109be8568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x109be88b8"/>
        <function-ref name="isInput" scoped="" ref="0x109be8a40"/>
        <function-ref name="setResistor" scoped="" ref="0x109be8bc8"/>
        <function-ref name="toggle" scoped="" ref="0x109be8d50"/>
        <function-ref name="isOutput" scoped="" ref="0x109be7020"/>
        <function-ref name="getResistor" scoped="" ref="0x109be71a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x109be7330"/>
        <function-ref name="get" scoped="" ref="0x109be74b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x109be7640"/>
        <function-ref name="getRaw" scoped="" ref="0x109be77c8"/>
        <function-ref name="set" scoped="" ref="0x109be7950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x109be7ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x109be7c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x109be6020"/>
        <function-ref name="clr" scoped="" ref="0x109be61a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port33" ref="0x109c03568" loc="74:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port33" scoped="" ref="0x109c03568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x109c038b8"/>
        <function-ref name="isInput" scoped="" ref="0x109c03a40"/>
        <function-ref name="setResistor" scoped="" ref="0x109c03bc8"/>
        <function-ref name="toggle" scoped="" ref="0x109c03d50"/>
        <function-ref name="isOutput" scoped="" ref="0x109c02020"/>
        <function-ref name="getResistor" scoped="" ref="0x109c021a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x109c02330"/>
        <function-ref name="get" scoped="" ref="0x109c024b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x109c02640"/>
        <function-ref name="getRaw" scoped="" ref="0x109c027c8"/>
        <function-ref name="set" scoped="" ref="0x109c02950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x109c02ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x109c02c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x109c01020"/>
        <function-ref name="clr" scoped="" ref="0x109c011a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port45" ref="0x109c1e568" loc="87:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port45" scoped="" ref="0x109c1e568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x109c1e8b8"/>
        <function-ref name="isInput" scoped="" ref="0x109c1ea40"/>
        <function-ref name="setResistor" scoped="" ref="0x109c1ebc8"/>
        <function-ref name="toggle" scoped="" ref="0x109c1ed50"/>
        <function-ref name="isOutput" scoped="" ref="0x109c1d020"/>
        <function-ref name="getResistor" scoped="" ref="0x109c1d1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x109c1d330"/>
        <function-ref name="get" scoped="" ref="0x109c1d4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x109c1d640"/>
        <function-ref name="getRaw" scoped="" ref="0x109c1d7c8"/>
        <function-ref name="set" scoped="" ref="0x109c1d950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x109c1dad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x109c1dc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x109c1c020"/>
        <function-ref name="clr" scoped="" ref="0x109c1c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port57" ref="0x109c3a568" loc="100:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port57" scoped="" ref="0x109c3a568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x109c3a8b8"/>
        <function-ref name="isInput" scoped="" ref="0x109c3aa40"/>
        <function-ref name="setResistor" scoped="" ref="0x109c3abc8"/>
        <function-ref name="toggle" scoped="" ref="0x109c3ad50"/>
        <function-ref name="isOutput" scoped="" ref="0x109c39020"/>
        <function-ref name="getResistor" scoped="" ref="0x109c391a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x109c39330"/>
        <function-ref name="get" scoped="" ref="0x109c394b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x109c39640"/>
        <function-ref name="getRaw" scoped="" ref="0x109c397c8"/>
        <function-ref name="set" scoped="" ref="0x109c39950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x109c39ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x109c39c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x109c38020"/>
        <function-ref name="clr" scoped="" ref="0x109c381a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port67" ref="0x109c59568" loc="111:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0x109c59568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x109c598b8"/>
        <function-ref name="isInput" scoped="" ref="0x109c59a40"/>
        <function-ref name="setResistor" scoped="" ref="0x109c59bc8"/>
        <function-ref name="toggle" scoped="" ref="0x109c59d50"/>
        <function-ref name="isOutput" scoped="" ref="0x109c58020"/>
        <function-ref name="getResistor" scoped="" ref="0x109c581a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x109c58330"/>
        <function-ref name="get" scoped="" ref="0x109c584b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x109c58640"/>
        <function-ref name="getRaw" scoped="" ref="0x109c587c8"/>
        <function-ref name="set" scoped="" ref="0x109c58950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x109c58ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x109c58c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x109c57020"/>
        <function-ref name="clr" scoped="" ref="0x109c571a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x109bf6668" loc="51:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x109bf6668"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x109bf69b8"/>
        <function-ref name="isInput" scoped="" ref="0x109bf6b40"/>
        <function-ref name="setResistor" scoped="" ref="0x109bf6cc8"/>
        <function-ref name="toggle" scoped="" ref="0x109bf6e50"/>
        <function-ref name="isOutput" scoped="" ref="0x109bf5020"/>
        <function-ref name="getResistor" scoped="" ref="0x109bf51a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x109bf5330"/>
        <function-ref name="get" scoped="" ref="0x109bf54b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x109bf5640"/>
        <function-ref name="getRaw" scoped="" ref="0x109bf57c8"/>
        <function-ref name="set" scoped="" ref="0x109bf5950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x109bf5ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x109bf5c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x109bf4020"/>
        <function-ref name="clr" scoped="" ref="0x109bf41a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x109c11568" loc="64:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x109c11568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x109c119b8"/>
        <function-ref name="isInput" scoped="" ref="0x109c11b40"/>
        <function-ref name="setResistor" scoped="" ref="0x109c11cc8"/>
        <function-ref name="toggle" scoped="" ref="0x109c11e50"/>
        <function-ref name="isOutput" scoped="" ref="0x109c10020"/>
        <function-ref name="getResistor" scoped="" ref="0x109c101a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x109c10330"/>
        <function-ref name="get" scoped="" ref="0x109c104b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x109c10640"/>
        <function-ref name="getRaw" scoped="" ref="0x109c107c8"/>
        <function-ref name="set" scoped="" ref="0x109c10950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x109c10ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x109c10c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x109c0f020"/>
        <function-ref name="clr" scoped="" ref="0x109c0f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port36" ref="0x109bfd568" loc="77:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port36" scoped="" ref="0x109bfd568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x109bfd8b8"/>
        <function-ref name="isInput" scoped="" ref="0x109bfda40"/>
        <function-ref name="setResistor" scoped="" ref="0x109bfdbc8"/>
        <function-ref name="toggle" scoped="" ref="0x109bfdd50"/>
        <function-ref name="isOutput" scoped="" ref="0x109bfc020"/>
        <function-ref name="getResistor" scoped="" ref="0x109bfc1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x109bfc330"/>
        <function-ref name="get" scoped="" ref="0x109bfc4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x109bfc640"/>
        <function-ref name="getRaw" scoped="" ref="0x109bfc7c8"/>
        <function-ref name="set" scoped="" ref="0x109bfc950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x109bfcad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x109bfcc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x109c2b020"/>
        <function-ref name="clr" scoped="" ref="0x109c2b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO0" ref="0x109c55970" loc="144:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO0" scoped="" ref="0x109c55970"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x109c55cc0"/>
        <function-ref name="isInput" scoped="" ref="0x109c55e48"/>
        <function-ref name="setResistor" scoped="" ref="0x109c54020"/>
        <function-ref name="toggle" scoped="" ref="0x109c541a8"/>
        <function-ref name="isOutput" scoped="" ref="0x109c54330"/>
        <function-ref name="getResistor" scoped="" ref="0x109c544b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x109c54640"/>
        <function-ref name="get" scoped="" ref="0x109c547c8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x109c54950"/>
        <function-ref name="getRaw" scoped="" ref="0x109c54ad8"/>
        <function-ref name="set" scoped="" ref="0x109c54c60"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x109c54de8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x109c53020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x109c532a8"/>
        <function-ref name="clr" scoped="" ref="0x109c53430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC3" ref="0x109c65558" loc="162:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC3" scoped="" ref="0x109c65558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x109c658a8"/>
        <function-ref name="isInput" scoped="" ref="0x109c65a30"/>
        <function-ref name="setResistor" scoped="" ref="0x109c65bb8"/>
        <function-ref name="toggle" scoped="" ref="0x109c65d40"/>
        <function-ref name="isOutput" scoped="" ref="0x109c64020"/>
        <function-ref name="getResistor" scoped="" ref="0x109c641a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x109c64330"/>
        <function-ref name="get" scoped="" ref="0x109c644b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x109c64640"/>
        <function-ref name="getRaw" scoped="" ref="0x109c647c8"/>
        <function-ref name="set" scoped="" ref="0x109c64950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x109c64ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x109c64c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x109c63020"/>
        <function-ref name="clr" scoped="" ref="0x109c631a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC1" ref="0x109c88558" loc="169:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC1" scoped="" ref="0x109c88558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x109c888a8"/>
        <function-ref name="isInput" scoped="" ref="0x109c88a30"/>
        <function-ref name="setResistor" scoped="" ref="0x109c88bb8"/>
        <function-ref name="toggle" scoped="" ref="0x109c88d40"/>
        <function-ref name="isOutput" scoped="" ref="0x109c87020"/>
        <function-ref name="getResistor" scoped="" ref="0x109c871a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x109c87330"/>
        <function-ref name="get" scoped="" ref="0x109c874b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x109c87640"/>
        <function-ref name="getRaw" scoped="" ref="0x109c877c8"/>
        <function-ref name="set" scoped="" ref="0x109c87950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x109c87ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x109c87c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x109c86020"/>
        <function-ref name="clr" scoped="" ref="0x109c861a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK1" ref="0x109c71560" loc="155:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK1" scoped="" ref="0x109c71560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x109c718b0"/>
        <function-ref name="isInput" scoped="" ref="0x109c71a38"/>
        <function-ref name="setResistor" scoped="" ref="0x109c71bc0"/>
        <function-ref name="toggle" scoped="" ref="0x109c71d48"/>
        <function-ref name="isOutput" scoped="" ref="0x109c70020"/>
        <function-ref name="getResistor" scoped="" ref="0x109c701a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x109c70330"/>
        <function-ref name="get" scoped="" ref="0x109c704b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x109c70640"/>
        <function-ref name="getRaw" scoped="" ref="0x109c707c8"/>
        <function-ref name="set" scoped="" ref="0x109c70950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x109c70ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x109c70c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x109c6f020"/>
        <function-ref name="clr" scoped="" ref="0x109c6f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port40" ref="0x109c28568" loc="82:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port40" scoped="" ref="0x109c28568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x109c28ab8"/>
        <function-ref name="isInput" scoped="" ref="0x109c28c40"/>
        <function-ref name="setResistor" scoped="" ref="0x109c28dc8"/>
        <function-ref name="toggle" scoped="" ref="0x109c27020"/>
        <function-ref name="isOutput" scoped="" ref="0x109c271a8"/>
        <function-ref name="getResistor" scoped="" ref="0x109c27330"/>
        <function-ref name="makeOutput" scoped="" ref="0x109c274b8"/>
        <function-ref name="get" scoped="" ref="0x109c27640"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x109c277c8"/>
        <function-ref name="getRaw" scoped="" ref="0x109c27950"/>
        <function-ref name="set" scoped="" ref="0x109c27ad8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x109c27c60"/>
        <function-ref name="isIOFunc" scoped="" ref="0x109c27de8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x109c26120"/>
        <function-ref name="clr" scoped="" ref="0x109c262a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port52" ref="0x109c14568" loc="95:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port52" scoped="" ref="0x109c14568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x109c148b8"/>
        <function-ref name="isInput" scoped="" ref="0x109c14a40"/>
        <function-ref name="setResistor" scoped="" ref="0x109c14bc8"/>
        <function-ref name="toggle" scoped="" ref="0x109c14d50"/>
        <function-ref name="isOutput" scoped="" ref="0x109c43020"/>
        <function-ref name="getResistor" scoped="" ref="0x109c431a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x109c43330"/>
        <function-ref name="get" scoped="" ref="0x109c434b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x109c43640"/>
        <function-ref name="getRaw" scoped="" ref="0x109c437c8"/>
        <function-ref name="set" scoped="" ref="0x109c43950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x109c43ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x109c43c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x109c42020"/>
        <function-ref name="clr" scoped="" ref="0x109c421a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port62" ref="0x109c34568" loc="106:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0x109c34568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x109c348b8"/>
        <function-ref name="isInput" scoped="" ref="0x109c34a40"/>
        <function-ref name="setResistor" scoped="" ref="0x109c34bc8"/>
        <function-ref name="toggle" scoped="" ref="0x109c34d50"/>
        <function-ref name="isOutput" scoped="" ref="0x109c33020"/>
        <function-ref name="getResistor" scoped="" ref="0x109c331a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x109c33330"/>
        <function-ref name="get" scoped="" ref="0x109c334b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x109c33640"/>
        <function-ref name="getRaw" scoped="" ref="0x109c337c8"/>
        <function-ref name="set" scoped="" ref="0x109c33950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x109c33ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x109c33c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x109c32020"/>
        <function-ref name="clr" scoped="" ref="0x109c321a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC4" ref="0x109c63558" loc="163:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC4" scoped="" ref="0x109c63558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x109c638a8"/>
        <function-ref name="isInput" scoped="" ref="0x109c63a30"/>
        <function-ref name="setResistor" scoped="" ref="0x109c63bb8"/>
        <function-ref name="toggle" scoped="" ref="0x109c63d40"/>
        <function-ref name="isOutput" scoped="" ref="0x109c62020"/>
        <function-ref name="getResistor" scoped="" ref="0x109c621a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x109c62330"/>
        <function-ref name="get" scoped="" ref="0x109c624b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x109c62640"/>
        <function-ref name="getRaw" scoped="" ref="0x109c627c8"/>
        <function-ref name="set" scoped="" ref="0x109c62950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x109c62ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x109c62c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x109c61020"/>
        <function-ref name="clr" scoped="" ref="0x109c611a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE1" ref="0x109c47558" loc="152:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE1" scoped="" ref="0x109c47558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x109c478a8"/>
        <function-ref name="isInput" scoped="" ref="0x109c47a30"/>
        <function-ref name="setResistor" scoped="" ref="0x109c47bb8"/>
        <function-ref name="toggle" scoped="" ref="0x109c47d40"/>
        <function-ref name="isOutput" scoped="" ref="0x109c46020"/>
        <function-ref name="getResistor" scoped="" ref="0x109c461a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x109c46330"/>
        <function-ref name="get" scoped="" ref="0x109c464b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x109c46640"/>
        <function-ref name="getRaw" scoped="" ref="0x109c467c8"/>
        <function-ref name="set" scoped="" ref="0x109c46950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x109c46ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x109c46c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x109c45020"/>
        <function-ref name="clr" scoped="" ref="0x109c451a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x109bf0568" loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x109bf0568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x109bf08b8"/>
        <function-ref name="isInput" scoped="" ref="0x109bf0a40"/>
        <function-ref name="setResistor" scoped="" ref="0x109bf0bc8"/>
        <function-ref name="toggle" scoped="" ref="0x109bf0d50"/>
        <function-ref name="isOutput" scoped="" ref="0x109bef020"/>
        <function-ref name="getResistor" scoped="" ref="0x109bef1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x109bef330"/>
        <function-ref name="get" scoped="" ref="0x109bef4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x109bef640"/>
        <function-ref name="getRaw" scoped="" ref="0x109bef7c8"/>
        <function-ref name="set" scoped="" ref="0x109bef950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x109befad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x109befc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x109bee020"/>
        <function-ref name="clr" scoped="" ref="0x109bee1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x109c0b568" loc="67:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x109c0b568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x109c0b8b8"/>
        <function-ref name="isInput" scoped="" ref="0x109c0ba40"/>
        <function-ref name="setResistor" scoped="" ref="0x109c0bbc8"/>
        <function-ref name="toggle" scoped="" ref="0x109c0bd50"/>
        <function-ref name="isOutput" scoped="" ref="0x109c0a020"/>
        <function-ref name="getResistor" scoped="" ref="0x109c0a1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x109c0a330"/>
        <function-ref name="get" scoped="" ref="0x109c0a4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x109c0a640"/>
        <function-ref name="getRaw" scoped="" ref="0x109c0a7c8"/>
        <function-ref name="set" scoped="" ref="0x109c0a950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x109c0aad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x109c0ac60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x109c09020"/>
        <function-ref name="clr" scoped="" ref="0x109c091a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port60" ref="0x109c38568" loc="104:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0x109c38568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x109c388b8"/>
        <function-ref name="isInput" scoped="" ref="0x109c38a40"/>
        <function-ref name="setResistor" scoped="" ref="0x109c38bc8"/>
        <function-ref name="toggle" scoped="" ref="0x109c38d50"/>
        <function-ref name="isOutput" scoped="" ref="0x109c37020"/>
        <function-ref name="getResistor" scoped="" ref="0x109c371a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x109c37330"/>
        <function-ref name="get" scoped="" ref="0x109c374b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x109c37640"/>
        <function-ref name="getRaw" scoped="" ref="0x109c377c8"/>
        <function-ref name="set" scoped="" ref="0x109c37950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x109c37ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x109c37c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x109c36020"/>
        <function-ref name="clr" scoped="" ref="0x109c361a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port31" ref="0x109c07568" loc="72:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port31" scoped="" ref="0x109c07568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x109c078b8"/>
        <function-ref name="isInput" scoped="" ref="0x109c07a40"/>
        <function-ref name="setResistor" scoped="" ref="0x109c07bc8"/>
        <function-ref name="toggle" scoped="" ref="0x109c07d50"/>
        <function-ref name="isOutput" scoped="" ref="0x109c06020"/>
        <function-ref name="getResistor" scoped="" ref="0x109c061a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x109c06330"/>
        <function-ref name="get" scoped="" ref="0x109c064b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x109c06640"/>
        <function-ref name="getRaw" scoped="" ref="0x109c067c8"/>
        <function-ref name="set" scoped="" ref="0x109c06950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x109c06ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x109c06c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x109c05020"/>
        <function-ref name="clr" scoped="" ref="0x109c051a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port43" ref="0x109c22568" loc="85:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port43" scoped="" ref="0x109c22568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x109c228b8"/>
        <function-ref name="isInput" scoped="" ref="0x109c22a40"/>
        <function-ref name="setResistor" scoped="" ref="0x109c22bc8"/>
        <function-ref name="toggle" scoped="" ref="0x109c22d50"/>
        <function-ref name="isOutput" scoped="" ref="0x109c21020"/>
        <function-ref name="getResistor" scoped="" ref="0x109c211a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x109c21330"/>
        <function-ref name="get" scoped="" ref="0x109c214b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x109c21640"/>
        <function-ref name="getRaw" scoped="" ref="0x109c217c8"/>
        <function-ref name="set" scoped="" ref="0x109c21950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x109c21ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x109c21c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x109c20020"/>
        <function-ref name="clr" scoped="" ref="0x109c201a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port55" ref="0x109c3e568" loc="98:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port55" scoped="" ref="0x109c3e568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x109c3e8b8"/>
        <function-ref name="isInput" scoped="" ref="0x109c3ea40"/>
        <function-ref name="setResistor" scoped="" ref="0x109c3ebc8"/>
        <function-ref name="toggle" scoped="" ref="0x109c3ed50"/>
        <function-ref name="isOutput" scoped="" ref="0x109c3d020"/>
        <function-ref name="getResistor" scoped="" ref="0x109c3d1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x109c3d330"/>
        <function-ref name="get" scoped="" ref="0x109c3d4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x109c3d640"/>
        <function-ref name="getRaw" scoped="" ref="0x109c3d7c8"/>
        <function-ref name="set" scoped="" ref="0x109c3d950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x109c3dad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x109c3dc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x109c3c020"/>
        <function-ref name="clr" scoped="" ref="0x109c3c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port65" ref="0x109c2e568" loc="109:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0x109c2e568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x109c2e8b8"/>
        <function-ref name="isInput" scoped="" ref="0x109c2ea40"/>
        <function-ref name="setResistor" scoped="" ref="0x109c2ebc8"/>
        <function-ref name="toggle" scoped="" ref="0x109c2ed50"/>
        <function-ref name="isOutput" scoped="" ref="0x109c2d020"/>
        <function-ref name="getResistor" scoped="" ref="0x109c2d1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x109c2d330"/>
        <function-ref name="get" scoped="" ref="0x109c2d4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x109c2d640"/>
        <function-ref name="getRaw" scoped="" ref="0x109c2d7c8"/>
        <function-ref name="set" scoped="" ref="0x109c2d950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x109c2dad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x109c2dc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x109c2c020"/>
        <function-ref name="clr" scoped="" ref="0x109c2c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI1" ref="0x109c73560" loc="154:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI1" scoped="" ref="0x109c73560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x109c738b0"/>
        <function-ref name="isInput" scoped="" ref="0x109c73a38"/>
        <function-ref name="setResistor" scoped="" ref="0x109c73bc0"/>
        <function-ref name="toggle" scoped="" ref="0x109c73d48"/>
        <function-ref name="isOutput" scoped="" ref="0x109c72020"/>
        <function-ref name="getResistor" scoped="" ref="0x109c721a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x109c72330"/>
        <function-ref name="get" scoped="" ref="0x109c724b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x109c72640"/>
        <function-ref name="getRaw" scoped="" ref="0x109c727c8"/>
        <function-ref name="set" scoped="" ref="0x109c72950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x109c72ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x109c72c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x109c71020"/>
        <function-ref name="clr" scoped="" ref="0x109c711a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x109bf9950" loc="49:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x109bf9950"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x109bf9ca0"/>
        <function-ref name="isInput" scoped="" ref="0x109bf9e28"/>
        <function-ref name="setResistor" scoped="" ref="0x109bd4020"/>
        <function-ref name="toggle" scoped="" ref="0x109bd41a8"/>
        <function-ref name="isOutput" scoped="" ref="0x109bd4330"/>
        <function-ref name="getResistor" scoped="" ref="0x109bd44b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x109bd4640"/>
        <function-ref name="get" scoped="" ref="0x109bd47c8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x109bd4950"/>
        <function-ref name="getRaw" scoped="" ref="0x109bd4ad8"/>
        <function-ref name="set" scoped="" ref="0x109bd4c60"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x109bd4de8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x109bd3020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x109bd32a8"/>
        <function-ref name="clr" scoped="" ref="0x109bd3430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x109be6568" loc="62:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x109be6568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x109be68b8"/>
        <function-ref name="isInput" scoped="" ref="0x109be6a40"/>
        <function-ref name="setResistor" scoped="" ref="0x109be6bc8"/>
        <function-ref name="toggle" scoped="" ref="0x109be6d50"/>
        <function-ref name="isOutput" scoped="" ref="0x109be5020"/>
        <function-ref name="getResistor" scoped="" ref="0x109be51a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x109be5330"/>
        <function-ref name="get" scoped="" ref="0x109be54b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x109be5640"/>
        <function-ref name="getRaw" scoped="" ref="0x109be57c8"/>
        <function-ref name="set" scoped="" ref="0x109be5950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x109be5ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x109be5c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x109c13020"/>
        <function-ref name="clr" scoped="" ref="0x109c131a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port34" ref="0x109c01568" loc="75:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port34" scoped="" ref="0x109c01568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x109c018b8"/>
        <function-ref name="isInput" scoped="" ref="0x109c01a40"/>
        <function-ref name="setResistor" scoped="" ref="0x109c01bc8"/>
        <function-ref name="toggle" scoped="" ref="0x109c01d50"/>
        <function-ref name="isOutput" scoped="" ref="0x109c00020"/>
        <function-ref name="getResistor" scoped="" ref="0x109c001a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x109c00330"/>
        <function-ref name="get" scoped="" ref="0x109c004b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x109c00640"/>
        <function-ref name="getRaw" scoped="" ref="0x109c007c8"/>
        <function-ref name="set" scoped="" ref="0x109c00950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x109c00ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x109c00c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x109bff020"/>
        <function-ref name="clr" scoped="" ref="0x109bff1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port46" ref="0x109c1c568" loc="88:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port46" scoped="" ref="0x109c1c568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x109c1c8b8"/>
        <function-ref name="isInput" scoped="" ref="0x109c1ca40"/>
        <function-ref name="setResistor" scoped="" ref="0x109c1cbc8"/>
        <function-ref name="toggle" scoped="" ref="0x109c1cd50"/>
        <function-ref name="isOutput" scoped="" ref="0x109c1b020"/>
        <function-ref name="getResistor" scoped="" ref="0x109c1b1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x109c1b330"/>
        <function-ref name="get" scoped="" ref="0x109c1b4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x109c1b640"/>
        <function-ref name="getRaw" scoped="" ref="0x109c1b7c8"/>
        <function-ref name="set" scoped="" ref="0x109c1b950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x109c1bad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x109c1bc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x109c1a020"/>
        <function-ref name="clr" scoped="" ref="0x109c1a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD1" ref="0x109c6f560" loc="156:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD1" scoped="" ref="0x109c6f560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x109c6f8b0"/>
        <function-ref name="isInput" scoped="" ref="0x109c6fa38"/>
        <function-ref name="setResistor" scoped="" ref="0x109c6fbc0"/>
        <function-ref name="toggle" scoped="" ref="0x109c6fd48"/>
        <function-ref name="isOutput" scoped="" ref="0x109c6e020"/>
        <function-ref name="getResistor" scoped="" ref="0x109c6e1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x109c6e330"/>
        <function-ref name="get" scoped="" ref="0x109c6e4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x109c6e640"/>
        <function-ref name="getRaw" scoped="" ref="0x109c6e7c8"/>
        <function-ref name="set" scoped="" ref="0x109c6e950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x109c6ead8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x109c6ec60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x109c6d020"/>
        <function-ref name="clr" scoped="" ref="0x109c6d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC1" ref="0x109c69558" loc="160:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC1" scoped="" ref="0x109c69558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x109c698a8"/>
        <function-ref name="isInput" scoped="" ref="0x109c69a30"/>
        <function-ref name="setResistor" scoped="" ref="0x109c69bb8"/>
        <function-ref name="toggle" scoped="" ref="0x109c69d40"/>
        <function-ref name="isOutput" scoped="" ref="0x109c68020"/>
        <function-ref name="getResistor" scoped="" ref="0x109c681a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x109c68330"/>
        <function-ref name="get" scoped="" ref="0x109c684b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x109c68640"/>
        <function-ref name="getRaw" scoped="" ref="0x109c687c8"/>
        <function-ref name="set" scoped="" ref="0x109c68950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x109c68ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x109c68c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x109c67020"/>
        <function-ref name="clr" scoped="" ref="0x109c671a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC7" ref="0x109c5d558" loc="166:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC7" scoped="" ref="0x109c5d558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x109c5d8a8"/>
        <function-ref name="isInput" scoped="" ref="0x109c5da30"/>
        <function-ref name="setResistor" scoped="" ref="0x109c5dbb8"/>
        <function-ref name="toggle" scoped="" ref="0x109c5dd40"/>
        <function-ref name="isOutput" scoped="" ref="0x109c8b020"/>
        <function-ref name="getResistor" scoped="" ref="0x109c8b1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x109c8b330"/>
        <function-ref name="get" scoped="" ref="0x109c8b4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x109c8b640"/>
        <function-ref name="getRaw" scoped="" ref="0x109c8b7c8"/>
        <function-ref name="set" scoped="" ref="0x109c8b950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x109c8bad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x109c8bc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x109c8a020"/>
        <function-ref name="clr" scoped="" ref="0x109c8a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port50" ref="0x109c18568" loc="93:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port50" scoped="" ref="0x109c18568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x109c188b8"/>
        <function-ref name="isInput" scoped="" ref="0x109c18a40"/>
        <function-ref name="setResistor" scoped="" ref="0x109c18bc8"/>
        <function-ref name="toggle" scoped="" ref="0x109c18d50"/>
        <function-ref name="isOutput" scoped="" ref="0x109c17020"/>
        <function-ref name="getResistor" scoped="" ref="0x109c171a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x109c17330"/>
        <function-ref name="get" scoped="" ref="0x109c174b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x109c17640"/>
        <function-ref name="getRaw" scoped="" ref="0x109c177c8"/>
        <function-ref name="set" scoped="" ref="0x109c17950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x109c17ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x109c17c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x109c16020"/>
        <function-ref name="clr" scoped="" ref="0x109c161a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD1" ref="0x109c6d560" loc="157:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD1" scoped="" ref="0x109c6d560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x109c6d8b0"/>
        <function-ref name="isInput" scoped="" ref="0x109c6da38"/>
        <function-ref name="setResistor" scoped="" ref="0x109c6dbc0"/>
        <function-ref name="toggle" scoped="" ref="0x109c6dd48"/>
        <function-ref name="isOutput" scoped="" ref="0x109c6c020"/>
        <function-ref name="getResistor" scoped="" ref="0x109c6c1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x109c6c330"/>
        <function-ref name="get" scoped="" ref="0x109c6c4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x109c6c640"/>
        <function-ref name="getRaw" scoped="" ref="0x109c6c7c8"/>
        <function-ref name="set" scoped="" ref="0x109c6c950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x109c6cad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x109c6cc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x109c6b020"/>
        <function-ref name="clr" scoped="" ref="0x109c6b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x109bf4568" loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x109bf4568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x109bf48b8"/>
        <function-ref name="isInput" scoped="" ref="0x109bf4a40"/>
        <function-ref name="setResistor" scoped="" ref="0x109bf4bc8"/>
        <function-ref name="toggle" scoped="" ref="0x109bf4d50"/>
        <function-ref name="isOutput" scoped="" ref="0x109bf3020"/>
        <function-ref name="getResistor" scoped="" ref="0x109bf31a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x109bf3330"/>
        <function-ref name="get" scoped="" ref="0x109bf34b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x109bf3640"/>
        <function-ref name="getRaw" scoped="" ref="0x109bf37c8"/>
        <function-ref name="set" scoped="" ref="0x109bf3950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x109bf3ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x109bf3c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x109bf2020"/>
        <function-ref name="clr" scoped="" ref="0x109bf21a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x109c0f568" loc="65:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x109c0f568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x109c0f8b8"/>
        <function-ref name="isInput" scoped="" ref="0x109c0fa40"/>
        <function-ref name="setResistor" scoped="" ref="0x109c0fbc8"/>
        <function-ref name="toggle" scoped="" ref="0x109c0fd50"/>
        <function-ref name="isOutput" scoped="" ref="0x109c0e020"/>
        <function-ref name="getResistor" scoped="" ref="0x109c0e1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x109c0e330"/>
        <function-ref name="get" scoped="" ref="0x109c0e4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x109c0e640"/>
        <function-ref name="getRaw" scoped="" ref="0x109c0e7c8"/>
        <function-ref name="set" scoped="" ref="0x109c0e950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x109c0ead8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x109c0ec60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x109c0d020"/>
        <function-ref name="clr" scoped="" ref="0x109c0d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port37" ref="0x109c2b568" loc="78:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port37" scoped="" ref="0x109c2b568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x109c2b8b8"/>
        <function-ref name="isInput" scoped="" ref="0x109c2ba40"/>
        <function-ref name="setResistor" scoped="" ref="0x109c2bbc8"/>
        <function-ref name="toggle" scoped="" ref="0x109c2bd50"/>
        <function-ref name="isOutput" scoped="" ref="0x109c29020"/>
        <function-ref name="getResistor" scoped="" ref="0x109c291a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x109c29330"/>
        <function-ref name="get" scoped="" ref="0x109c294b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x109c29640"/>
        <function-ref name="getRaw" scoped="" ref="0x109c297c8"/>
        <function-ref name="set" scoped="" ref="0x109c29950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x109c29ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x109c29c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x109c28020"/>
        <function-ref name="clr" scoped="" ref="0x109c281a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO1" ref="0x109c45560" loc="153:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO1" scoped="" ref="0x109c45560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x109c458b0"/>
        <function-ref name="isInput" scoped="" ref="0x109c45a38"/>
        <function-ref name="setResistor" scoped="" ref="0x109c45bc0"/>
        <function-ref name="toggle" scoped="" ref="0x109c45d48"/>
        <function-ref name="isOutput" scoped="" ref="0x109c44020"/>
        <function-ref name="getResistor" scoped="" ref="0x109c441a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x109c44330"/>
        <function-ref name="get" scoped="" ref="0x109c444b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x109c44640"/>
        <function-ref name="getRaw" scoped="" ref="0x109c447c8"/>
        <function-ref name="set" scoped="" ref="0x109c44950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x109c44ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x109c44c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x109c73020"/>
        <function-ref name="clr" scoped="" ref="0x109c731a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC5" ref="0x109c61558" loc="164:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC5" scoped="" ref="0x109c61558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x109c618a8"/>
        <function-ref name="isInput" scoped="" ref="0x109c61a30"/>
        <function-ref name="setResistor" scoped="" ref="0x109c61bb8"/>
        <function-ref name="toggle" scoped="" ref="0x109c61d40"/>
        <function-ref name="isOutput" scoped="" ref="0x109c60020"/>
        <function-ref name="getResistor" scoped="" ref="0x109c601a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x109c60330"/>
        <function-ref name="get" scoped="" ref="0x109c604b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x109c60640"/>
        <function-ref name="getRaw" scoped="" ref="0x109c607c8"/>
        <function-ref name="set" scoped="" ref="0x109c60950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x109c60ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x109c60c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x109c5f020"/>
        <function-ref name="clr" scoped="" ref="0x109c5f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port41" ref="0x109c26668" loc="83:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port41" scoped="" ref="0x109c26668"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x109c269b8"/>
        <function-ref name="isInput" scoped="" ref="0x109c26b40"/>
        <function-ref name="setResistor" scoped="" ref="0x109c26cc8"/>
        <function-ref name="toggle" scoped="" ref="0x109c26e50"/>
        <function-ref name="isOutput" scoped="" ref="0x109c25020"/>
        <function-ref name="getResistor" scoped="" ref="0x109c251a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x109c25330"/>
        <function-ref name="get" scoped="" ref="0x109c254b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x109c25640"/>
        <function-ref name="getRaw" scoped="" ref="0x109c257c8"/>
        <function-ref name="set" scoped="" ref="0x109c25950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x109c25ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x109c25c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x109c24020"/>
        <function-ref name="clr" scoped="" ref="0x109c241a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port53" ref="0x109c42568" loc="96:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port53" scoped="" ref="0x109c42568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x109c428b8"/>
        <function-ref name="isInput" scoped="" ref="0x109c42a40"/>
        <function-ref name="setResistor" scoped="" ref="0x109c42bc8"/>
        <function-ref name="toggle" scoped="" ref="0x109c42d50"/>
        <function-ref name="isOutput" scoped="" ref="0x109c41020"/>
        <function-ref name="getResistor" scoped="" ref="0x109c411a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x109c41330"/>
        <function-ref name="get" scoped="" ref="0x109c414b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x109c41640"/>
        <function-ref name="getRaw" scoped="" ref="0x109c417c8"/>
        <function-ref name="set" scoped="" ref="0x109c41950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x109c41ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x109c41c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x109c40020"/>
        <function-ref name="clr" scoped="" ref="0x109c401a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port63" ref="0x109c32568" loc="107:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0x109c32568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x109c328b8"/>
        <function-ref name="isInput" scoped="" ref="0x109c32a40"/>
        <function-ref name="setResistor" scoped="" ref="0x109c32bc8"/>
        <function-ref name="toggle" scoped="" ref="0x109c32d50"/>
        <function-ref name="isOutput" scoped="" ref="0x109c31020"/>
        <function-ref name="getResistor" scoped="" ref="0x109c311a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x109c31330"/>
        <function-ref name="get" scoped="" ref="0x109c314b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x109c31640"/>
        <function-ref name="getRaw" scoped="" ref="0x109c317c8"/>
        <function-ref name="set" scoped="" ref="0x109c31950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x109c31ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x109c31c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x109c30020"/>
        <function-ref name="clr" scoped="" ref="0x109c301a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x109bee568" loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x109bee568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x109bee8b8"/>
        <function-ref name="isInput" scoped="" ref="0x109beea40"/>
        <function-ref name="setResistor" scoped="" ref="0x109beebc8"/>
        <function-ref name="toggle" scoped="" ref="0x109beed50"/>
        <function-ref name="isOutput" scoped="" ref="0x109bed020"/>
        <function-ref name="getResistor" scoped="" ref="0x109bed1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x109bed330"/>
        <function-ref name="get" scoped="" ref="0x109bed4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x109bed640"/>
        <function-ref name="getRaw" scoped="" ref="0x109bed7c8"/>
        <function-ref name="set" scoped="" ref="0x109bed950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x109bedad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x109bedc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x109bec020"/>
        <function-ref name="clr" scoped="" ref="0x109bec1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port61" ref="0x109c36568" loc="105:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0x109c36568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x109c368b8"/>
        <function-ref name="isInput" scoped="" ref="0x109c36a40"/>
        <function-ref name="setResistor" scoped="" ref="0x109c36bc8"/>
        <function-ref name="toggle" scoped="" ref="0x109c36d50"/>
        <function-ref name="isOutput" scoped="" ref="0x109c35020"/>
        <function-ref name="getResistor" scoped="" ref="0x109c351a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x109c35330"/>
        <function-ref name="get" scoped="" ref="0x109c354b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x109c35640"/>
        <function-ref name="getRaw" scoped="" ref="0x109c357c8"/>
        <function-ref name="set" scoped="" ref="0x109c35950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x109c35ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x109c35c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x109c34020"/>
        <function-ref name="clr" scoped="" ref="0x109c341a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x109bea568" loc="60:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x109bea568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x109bea8b8"/>
        <function-ref name="isInput" scoped="" ref="0x109beaa40"/>
        <function-ref name="setResistor" scoped="" ref="0x109beabc8"/>
        <function-ref name="toggle" scoped="" ref="0x109bead50"/>
        <function-ref name="isOutput" scoped="" ref="0x109be9020"/>
        <function-ref name="getResistor" scoped="" ref="0x109be91a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x109be9330"/>
        <function-ref name="get" scoped="" ref="0x109be94b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x109be9640"/>
        <function-ref name="getRaw" scoped="" ref="0x109be97c8"/>
        <function-ref name="set" scoped="" ref="0x109be9950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x109be9ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x109be9c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x109be8020"/>
        <function-ref name="clr" scoped="" ref="0x109be81a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port32" ref="0x109c05568" loc="73:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port32" scoped="" ref="0x109c05568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x109c058b8"/>
        <function-ref name="isInput" scoped="" ref="0x109c05a40"/>
        <function-ref name="setResistor" scoped="" ref="0x109c05bc8"/>
        <function-ref name="toggle" scoped="" ref="0x109c05d50"/>
        <function-ref name="isOutput" scoped="" ref="0x109c04020"/>
        <function-ref name="getResistor" scoped="" ref="0x109c041a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x109c04330"/>
        <function-ref name="get" scoped="" ref="0x109c044b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x109c04640"/>
        <function-ref name="getRaw" scoped="" ref="0x109c047c8"/>
        <function-ref name="set" scoped="" ref="0x109c04950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x109c04ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x109c04c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x109c03020"/>
        <function-ref name="clr" scoped="" ref="0x109c031a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port44" ref="0x109c20568" loc="86:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port44" scoped="" ref="0x109c20568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x109c208b8"/>
        <function-ref name="isInput" scoped="" ref="0x109c20a40"/>
        <function-ref name="setResistor" scoped="" ref="0x109c20bc8"/>
        <function-ref name="toggle" scoped="" ref="0x109c20d50"/>
        <function-ref name="isOutput" scoped="" ref="0x109c1f020"/>
        <function-ref name="getResistor" scoped="" ref="0x109c1f1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x109c1f330"/>
        <function-ref name="get" scoped="" ref="0x109c1f4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x109c1f640"/>
        <function-ref name="getRaw" scoped="" ref="0x109c1f7c8"/>
        <function-ref name="set" scoped="" ref="0x109c1f950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x109c1fad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x109c1fc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x109c1e020"/>
        <function-ref name="clr" scoped="" ref="0x109c1e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port56" ref="0x109c3c568" loc="99:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port56" scoped="" ref="0x109c3c568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x109c3c8b8"/>
        <function-ref name="isInput" scoped="" ref="0x109c3ca40"/>
        <function-ref name="setResistor" scoped="" ref="0x109c3cbc8"/>
        <function-ref name="toggle" scoped="" ref="0x109c3cd50"/>
        <function-ref name="isOutput" scoped="" ref="0x109c3b020"/>
        <function-ref name="getResistor" scoped="" ref="0x109c3b1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x109c3b330"/>
        <function-ref name="get" scoped="" ref="0x109c3b4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x109c3b640"/>
        <function-ref name="getRaw" scoped="" ref="0x109c3b7c8"/>
        <function-ref name="set" scoped="" ref="0x109c3b950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x109c3bad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x109c3bc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x109c3a020"/>
        <function-ref name="clr" scoped="" ref="0x109c3a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port66" ref="0x109c2c568" loc="110:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0x109c2c568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x109c2c8b8"/>
        <function-ref name="isInput" scoped="" ref="0x109c2ca40"/>
        <function-ref name="setResistor" scoped="" ref="0x109c2cbc8"/>
        <function-ref name="toggle" scoped="" ref="0x109c2cd50"/>
        <function-ref name="isOutput" scoped="" ref="0x109c5a020"/>
        <function-ref name="getResistor" scoped="" ref="0x109c5a1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x109c5a330"/>
        <function-ref name="get" scoped="" ref="0x109c5a4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x109c5a640"/>
        <function-ref name="getRaw" scoped="" ref="0x109c5a7c8"/>
        <function-ref name="set" scoped="" ref="0x109c5a950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x109c5aad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x109c5ac60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x109c59020"/>
        <function-ref name="clr" scoped="" ref="0x109c591a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x109bd37f0" loc="50:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x109bd37f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x109bd3b40"/>
        <function-ref name="isInput" scoped="" ref="0x109bd3cc8"/>
        <function-ref name="setResistor" scoped="" ref="0x109bd3e50"/>
        <function-ref name="toggle" scoped="" ref="0x109bf7020"/>
        <function-ref name="isOutput" scoped="" ref="0x109bf71a8"/>
        <function-ref name="getResistor" scoped="" ref="0x109bf7330"/>
        <function-ref name="makeOutput" scoped="" ref="0x109bf74b8"/>
        <function-ref name="get" scoped="" ref="0x109bf7640"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x109bf77c8"/>
        <function-ref name="getRaw" scoped="" ref="0x109bf7950"/>
        <function-ref name="set" scoped="" ref="0x109bf7ad8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x109bf7c60"/>
        <function-ref name="isIOFunc" scoped="" ref="0x109bf7de8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x109bf6120"/>
        <function-ref name="clr" scoped="" ref="0x109bf62a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x109c13568" loc="63:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x109c13568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x109c138b8"/>
        <function-ref name="isInput" scoped="" ref="0x109c13a40"/>
        <function-ref name="setResistor" scoped="" ref="0x109c13bc8"/>
        <function-ref name="toggle" scoped="" ref="0x109c13d50"/>
        <function-ref name="isOutput" scoped="" ref="0x109c12020"/>
        <function-ref name="getResistor" scoped="" ref="0x109c121a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x109c12330"/>
        <function-ref name="get" scoped="" ref="0x109c124b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x109c12640"/>
        <function-ref name="getRaw" scoped="" ref="0x109c127c8"/>
        <function-ref name="set" scoped="" ref="0x109c12950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x109c12ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x109c12c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x109c11020"/>
        <function-ref name="clr" scoped="" ref="0x109c111a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port35" ref="0x109bff568" loc="76:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port35" scoped="" ref="0x109bff568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x109bff8b8"/>
        <function-ref name="isInput" scoped="" ref="0x109bffa40"/>
        <function-ref name="setResistor" scoped="" ref="0x109bffbc8"/>
        <function-ref name="toggle" scoped="" ref="0x109bffd50"/>
        <function-ref name="isOutput" scoped="" ref="0x109bfe020"/>
        <function-ref name="getResistor" scoped="" ref="0x109bfe1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x109bfe330"/>
        <function-ref name="get" scoped="" ref="0x109bfe4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x109bfe640"/>
        <function-ref name="getRaw" scoped="" ref="0x109bfe7c8"/>
        <function-ref name="set" scoped="" ref="0x109bfe950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x109bfead8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x109bfec60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x109bfd020"/>
        <function-ref name="clr" scoped="" ref="0x109bfd1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port47" ref="0x109c1a568" loc="89:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port47" scoped="" ref="0x109c1a568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x109c1a8b8"/>
        <function-ref name="isInput" scoped="" ref="0x109c1aa40"/>
        <function-ref name="setResistor" scoped="" ref="0x109c1abc8"/>
        <function-ref name="toggle" scoped="" ref="0x109c1ad50"/>
        <function-ref name="isOutput" scoped="" ref="0x109c19020"/>
        <function-ref name="getResistor" scoped="" ref="0x109c191a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x109c19330"/>
        <function-ref name="get" scoped="" ref="0x109c194b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x109c19640"/>
        <function-ref name="getRaw" scoped="" ref="0x109c197c8"/>
        <function-ref name="set" scoped="" ref="0x109c19950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x109c19ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x109c19c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x109c18020"/>
        <function-ref name="clr" scoped="" ref="0x109c181a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCL" ref="0x109c4d548" loc="148:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCL" scoped="" ref="0x109c4d548"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x109c4d898"/>
        <function-ref name="isInput" scoped="" ref="0x109c4da20"/>
        <function-ref name="setResistor" scoped="" ref="0x109c4dba8"/>
        <function-ref name="toggle" scoped="" ref="0x109c4dd30"/>
        <function-ref name="isOutput" scoped="" ref="0x109c4c020"/>
        <function-ref name="getResistor" scoped="" ref="0x109c4c1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x109c4c330"/>
        <function-ref name="get" scoped="" ref="0x109c4c4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x109c4c640"/>
        <function-ref name="getRaw" scoped="" ref="0x109c4c7c8"/>
        <function-ref name="set" scoped="" ref="0x109c4c950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x109c4cad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x109c4cc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x109c4b020"/>
        <function-ref name="clr" scoped="" ref="0x109c4b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC2" ref="0x109c67558" loc="161:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC2" scoped="" ref="0x109c67558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x109c678a8"/>
        <function-ref name="isInput" scoped="" ref="0x109c67a30"/>
        <function-ref name="setResistor" scoped="" ref="0x109c67bb8"/>
        <function-ref name="toggle" scoped="" ref="0x109c67d40"/>
        <function-ref name="isOutput" scoped="" ref="0x109c66020"/>
        <function-ref name="getResistor" scoped="" ref="0x109c661a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x109c66330"/>
        <function-ref name="get" scoped="" ref="0x109c664b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x109c66640"/>
        <function-ref name="getRaw" scoped="" ref="0x109c667c8"/>
        <function-ref name="set" scoped="" ref="0x109c66950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x109c66ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x109c66c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x109c65020"/>
        <function-ref name="clr" scoped="" ref="0x109c651a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK0" ref="0x109c4f560" loc="147:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK0" scoped="" ref="0x109c4f560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x109c4f8b0"/>
        <function-ref name="isInput" scoped="" ref="0x109c4fa38"/>
        <function-ref name="setResistor" scoped="" ref="0x109c4fbc0"/>
        <function-ref name="toggle" scoped="" ref="0x109c4fd48"/>
        <function-ref name="isOutput" scoped="" ref="0x109c4e020"/>
        <function-ref name="getResistor" scoped="" ref="0x109c4e1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x109c4e330"/>
        <function-ref name="get" scoped="" ref="0x109c4e4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x109c4e640"/>
        <function-ref name="getRaw" scoped="" ref="0x109c4e7c8"/>
        <function-ref name="set" scoped="" ref="0x109c4e950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x109c4ead8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x109c4ec60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x109c4d020"/>
        <function-ref name="clr" scoped="" ref="0x109c4d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port51" ref="0x109c16568" loc="94:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port51" scoped="" ref="0x109c16568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x109c168b8"/>
        <function-ref name="isInput" scoped="" ref="0x109c16a40"/>
        <function-ref name="setResistor" scoped="" ref="0x109c16bc8"/>
        <function-ref name="toggle" scoped="" ref="0x109c16d50"/>
        <function-ref name="isOutput" scoped="" ref="0x109c15020"/>
        <function-ref name="getResistor" scoped="" ref="0x109c151a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x109c15330"/>
        <function-ref name="get" scoped="" ref="0x109c154b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x109c15640"/>
        <function-ref name="getRaw" scoped="" ref="0x109c157c8"/>
        <function-ref name="set" scoped="" ref="0x109c15950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x109c15ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x109c15c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x109c14020"/>
        <function-ref name="clr" scoped="" ref="0x109c141a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC0" ref="0x109c8a558" loc="168:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC0" scoped="" ref="0x109c8a558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x109c8a8a8"/>
        <function-ref name="isInput" scoped="" ref="0x109c8aa30"/>
        <function-ref name="setResistor" scoped="" ref="0x109c8abb8"/>
        <function-ref name="toggle" scoped="" ref="0x109c8ad40"/>
        <function-ref name="isOutput" scoped="" ref="0x109c89020"/>
        <function-ref name="getResistor" scoped="" ref="0x109c891a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x109c89330"/>
        <function-ref name="get" scoped="" ref="0x109c894b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x109c89640"/>
        <function-ref name="getRaw" scoped="" ref="0x109c897c8"/>
        <function-ref name="set" scoped="" ref="0x109c89950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x109c89ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x109c89c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x109c88020"/>
        <function-ref name="clr" scoped="" ref="0x109c881a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSOUT" ref="0x109c84568" loc="172:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSOUT" scoped="" ref="0x109c84568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x109c848b8"/>
        <function-ref name="isInput" scoped="" ref="0x109c84a40"/>
        <function-ref name="setResistor" scoped="" ref="0x109c84bc8"/>
        <function-ref name="toggle" scoped="" ref="0x109c84d50"/>
        <function-ref name="isOutput" scoped="" ref="0x109c83020"/>
        <function-ref name="getResistor" scoped="" ref="0x109c831a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x109c83330"/>
        <function-ref name="get" scoped="" ref="0x109c834b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x109c83640"/>
        <function-ref name="getRaw" scoped="" ref="0x109c837c8"/>
        <function-ref name="set" scoped="" ref="0x109c83950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x109c83ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x109c83c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x109c82020"/>
        <function-ref name="clr" scoped="" ref="0x109c821a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE0" ref="0x109c575b8" loc="143:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE0" scoped="" ref="0x109c575b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x109c57d08"/>
        <function-ref name="isInput" scoped="" ref="0x109c56020"/>
        <function-ref name="setResistor" scoped="" ref="0x109c561a8"/>
        <function-ref name="toggle" scoped="" ref="0x109c56330"/>
        <function-ref name="isOutput" scoped="" ref="0x109c564b8"/>
        <function-ref name="getResistor" scoped="" ref="0x109c56640"/>
        <function-ref name="makeOutput" scoped="" ref="0x109c567c8"/>
        <function-ref name="get" scoped="" ref="0x109c56950"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x109c56ad8"/>
        <function-ref name="getRaw" scoped="" ref="0x109c56c60"/>
        <function-ref name="set" scoped="" ref="0x109c56de8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x109c55020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x109c551a8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x109c55430"/>
        <function-ref name="clr" scoped="" ref="0x109c555b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x109c80e18" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P10"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x109c80e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x109cbd1a8"/>
        <function-ref name="isInput" scoped="" ref="0x109cbd330"/>
        <function-ref name="setResistor" scoped="" ref="0x109cbd4b8"/>
        <function-ref name="toggle" scoped="" ref="0x109cbd640"/>
        <function-ref name="isOutput" scoped="" ref="0x109cbd7c8"/>
        <function-ref name="getResistor" scoped="" ref="0x109cbd950"/>
        <function-ref name="makeOutput" scoped="" ref="0x109cbdad8"/>
        <function-ref name="get" scoped="" ref="0x109cbdc60"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x109cbdde8"/>
        <function-ref name="getRaw" scoped="" ref="0x109cbc020"/>
        <function-ref name="set" scoped="" ref="0x109cbc1a8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x109cbc330"/>
        <function-ref name="isIOFunc" scoped="" ref="0x109cbc4b8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x109cbc740"/>
        <function-ref name="clr" scoped="" ref="0x109cbc8c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x109cb9478" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P11"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x109cb9478"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x109cb97c8"/>
        <function-ref name="isInput" scoped="" ref="0x109cb9950"/>
        <function-ref name="setResistor" scoped="" ref="0x109cb9ad8"/>
        <function-ref name="toggle" scoped="" ref="0x109cb9c60"/>
        <function-ref name="isOutput" scoped="" ref="0x109cb9de8"/>
        <function-ref name="getResistor" scoped="" ref="0x109cb8020"/>
        <function-ref name="makeOutput" scoped="" ref="0x109cb81a8"/>
        <function-ref name="get" scoped="" ref="0x109cb8330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x109cb84b8"/>
        <function-ref name="getRaw" scoped="" ref="0x109cb8640"/>
        <function-ref name="set" scoped="" ref="0x109cb87c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x109cb8950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x109cb8ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x109cb8d60"/>
        <function-ref name="clr" scoped="" ref="0x109cb7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x109cb5ca0" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P12"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x109cb5ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x109cb4020"/>
        <function-ref name="isInput" scoped="" ref="0x109cb41a8"/>
        <function-ref name="setResistor" scoped="" ref="0x109cb4330"/>
        <function-ref name="toggle" scoped="" ref="0x109cb44b8"/>
        <function-ref name="isOutput" scoped="" ref="0x109cb4640"/>
        <function-ref name="getResistor" scoped="" ref="0x109cb47c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x109cb4950"/>
        <function-ref name="get" scoped="" ref="0x109cb4ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x109cb4c60"/>
        <function-ref name="getRaw" scoped="" ref="0x109cb4de8"/>
        <function-ref name="set" scoped="" ref="0x109cb3020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x109cb31a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x109cb3330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x109cb35b8"/>
        <function-ref name="clr" scoped="" ref="0x109cb3740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x109cb03d8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P13"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x109cb03d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x109cb0728"/>
        <function-ref name="isInput" scoped="" ref="0x109cb08b0"/>
        <function-ref name="setResistor" scoped="" ref="0x109cb0a38"/>
        <function-ref name="toggle" scoped="" ref="0x109cb0bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x109cb0d48"/>
        <function-ref name="getResistor" scoped="" ref="0x109caf020"/>
        <function-ref name="makeOutput" scoped="" ref="0x109caf1a8"/>
        <function-ref name="get" scoped="" ref="0x109caf330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x109caf4b8"/>
        <function-ref name="getRaw" scoped="" ref="0x109caf640"/>
        <function-ref name="set" scoped="" ref="0x109caf7c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x109caf950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x109cafad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x109cafd60"/>
        <function-ref name="clr" scoped="" ref="0x109cae020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x109cacca0" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P14"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x109cacca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x109cab020"/>
        <function-ref name="isInput" scoped="" ref="0x109cab1a8"/>
        <function-ref name="setResistor" scoped="" ref="0x109cab330"/>
        <function-ref name="toggle" scoped="" ref="0x109cab4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x109cab640"/>
        <function-ref name="getResistor" scoped="" ref="0x109cab7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x109cab950"/>
        <function-ref name="get" scoped="" ref="0x109cabad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x109cabc60"/>
        <function-ref name="getRaw" scoped="" ref="0x109cabde8"/>
        <function-ref name="set" scoped="" ref="0x109caa020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x109caa1a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x109caa330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x109caa5b8"/>
        <function-ref name="clr" scoped="" ref="0x109caa740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x109ca73d8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P15"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x109ca73d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x109ca7728"/>
        <function-ref name="isInput" scoped="" ref="0x109ca78b0"/>
        <function-ref name="setResistor" scoped="" ref="0x109ca7a38"/>
        <function-ref name="toggle" scoped="" ref="0x109ca7bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x109ca7d48"/>
        <function-ref name="getResistor" scoped="" ref="0x109ca5020"/>
        <function-ref name="makeOutput" scoped="" ref="0x109ca51a8"/>
        <function-ref name="get" scoped="" ref="0x109ca5330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x109ca54b8"/>
        <function-ref name="getRaw" scoped="" ref="0x109ca5640"/>
        <function-ref name="set" scoped="" ref="0x109ca57c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x109ca5950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x109ca5ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x109ca5d60"/>
        <function-ref name="clr" scoped="" ref="0x109cd6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x109cd4ca0" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P16"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x109cd4ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x109cd3020"/>
        <function-ref name="isInput" scoped="" ref="0x109cd31a8"/>
        <function-ref name="setResistor" scoped="" ref="0x109cd3330"/>
        <function-ref name="toggle" scoped="" ref="0x109cd34b8"/>
        <function-ref name="isOutput" scoped="" ref="0x109cd3640"/>
        <function-ref name="getResistor" scoped="" ref="0x109cd37c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x109cd3950"/>
        <function-ref name="get" scoped="" ref="0x109cd3ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x109cd3c60"/>
        <function-ref name="getRaw" scoped="" ref="0x109cd3de8"/>
        <function-ref name="set" scoped="" ref="0x109cd2020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x109cd21a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x109cd2330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x109cd25b8"/>
        <function-ref name="clr" scoped="" ref="0x109cd2740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x109ccf3d8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P17"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x109ccf3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x109ccf728"/>
        <function-ref name="isInput" scoped="" ref="0x109ccf8b0"/>
        <function-ref name="setResistor" scoped="" ref="0x109ccfa38"/>
        <function-ref name="toggle" scoped="" ref="0x109ccfbc0"/>
        <function-ref name="isOutput" scoped="" ref="0x109ccfd48"/>
        <function-ref name="getResistor" scoped="" ref="0x109cce020"/>
        <function-ref name="makeOutput" scoped="" ref="0x109cce1a8"/>
        <function-ref name="get" scoped="" ref="0x109cce330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x109cce4b8"/>
        <function-ref name="getRaw" scoped="" ref="0x109cce640"/>
        <function-ref name="set" scoped="" ref="0x109cce7c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x109cce950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x109ccead8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x109cced60"/>
        <function-ref name="clr" scoped="" ref="0x109ccd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x109ccbca0" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P20"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x109ccbca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x109cca020"/>
        <function-ref name="isInput" scoped="" ref="0x109cca1a8"/>
        <function-ref name="setResistor" scoped="" ref="0x109cca330"/>
        <function-ref name="toggle" scoped="" ref="0x109cca4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x109cca640"/>
        <function-ref name="getResistor" scoped="" ref="0x109cca7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x109cca950"/>
        <function-ref name="get" scoped="" ref="0x109ccaad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x109ccac60"/>
        <function-ref name="getRaw" scoped="" ref="0x109ccade8"/>
        <function-ref name="set" scoped="" ref="0x109cc9020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x109cc91a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x109cc9330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x109cc95b8"/>
        <function-ref name="clr" scoped="" ref="0x109cc9740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x109cc63d8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P21"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x109cc63d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x109cc6728"/>
        <function-ref name="isInput" scoped="" ref="0x109cc68b0"/>
        <function-ref name="setResistor" scoped="" ref="0x109cc6a38"/>
        <function-ref name="toggle" scoped="" ref="0x109cc6bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x109cc6d48"/>
        <function-ref name="getResistor" scoped="" ref="0x109cc5020"/>
        <function-ref name="makeOutput" scoped="" ref="0x109cc51a8"/>
        <function-ref name="get" scoped="" ref="0x109cc5330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x109cc54b8"/>
        <function-ref name="getRaw" scoped="" ref="0x109cc5640"/>
        <function-ref name="set" scoped="" ref="0x109cc57c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x109cc5950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x109cc5ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x109cc5d60"/>
        <function-ref name="clr" scoped="" ref="0x109cc4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x109cc2ca0" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P22"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x109cc2ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x109cc1020"/>
        <function-ref name="isInput" scoped="" ref="0x109cc11a8"/>
        <function-ref name="setResistor" scoped="" ref="0x109cc1330"/>
        <function-ref name="toggle" scoped="" ref="0x109cc14b8"/>
        <function-ref name="isOutput" scoped="" ref="0x109cc1640"/>
        <function-ref name="getResistor" scoped="" ref="0x109cc17c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x109cc1950"/>
        <function-ref name="get" scoped="" ref="0x109cc1ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x109cc1c60"/>
        <function-ref name="getRaw" scoped="" ref="0x109cc1de8"/>
        <function-ref name="set" scoped="" ref="0x109cc0020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x109cc01a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x109cc0330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x109cc05b8"/>
        <function-ref name="clr" scoped="" ref="0x109cc0740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x109cef3d8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P23"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x109cef3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x109cef728"/>
        <function-ref name="isInput" scoped="" ref="0x109cef8b0"/>
        <function-ref name="setResistor" scoped="" ref="0x109cefa38"/>
        <function-ref name="toggle" scoped="" ref="0x109cefbc0"/>
        <function-ref name="isOutput" scoped="" ref="0x109cefd48"/>
        <function-ref name="getResistor" scoped="" ref="0x109cee020"/>
        <function-ref name="makeOutput" scoped="" ref="0x109cee1a8"/>
        <function-ref name="get" scoped="" ref="0x109cee330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x109cee4b8"/>
        <function-ref name="getRaw" scoped="" ref="0x109cee640"/>
        <function-ref name="set" scoped="" ref="0x109cee7c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x109cee950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x109ceead8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x109ceed60"/>
        <function-ref name="clr" scoped="" ref="0x109ced020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x109cebd08" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P24"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x109cebd08"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x109cea0a0"/>
        <function-ref name="isInput" scoped="" ref="0x109cea228"/>
        <function-ref name="setResistor" scoped="" ref="0x109cea3b0"/>
        <function-ref name="toggle" scoped="" ref="0x109cea538"/>
        <function-ref name="isOutput" scoped="" ref="0x109cea6c0"/>
        <function-ref name="getResistor" scoped="" ref="0x109cea848"/>
        <function-ref name="makeOutput" scoped="" ref="0x109cea9d0"/>
        <function-ref name="get" scoped="" ref="0x109ceab58"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x109ceace0"/>
        <function-ref name="getRaw" scoped="" ref="0x109ceae68"/>
        <function-ref name="set" scoped="" ref="0x109ce9020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x109ce91a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x109ce9330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x109ce95b8"/>
        <function-ref name="clr" scoped="" ref="0x109ce9740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x109ce53d8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P25"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x109ce53d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x109ce5728"/>
        <function-ref name="isInput" scoped="" ref="0x109ce58b0"/>
        <function-ref name="setResistor" scoped="" ref="0x109ce5a38"/>
        <function-ref name="toggle" scoped="" ref="0x109ce5bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x109ce5d48"/>
        <function-ref name="getResistor" scoped="" ref="0x109ce4020"/>
        <function-ref name="makeOutput" scoped="" ref="0x109ce41a8"/>
        <function-ref name="get" scoped="" ref="0x109ce4330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x109ce44b8"/>
        <function-ref name="getRaw" scoped="" ref="0x109ce4640"/>
        <function-ref name="set" scoped="" ref="0x109ce47c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x109ce4950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x109ce4ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x109ce4d60"/>
        <function-ref name="clr" scoped="" ref="0x109ce3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x109ce1ca0" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P26"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x109ce1ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x109ce0020"/>
        <function-ref name="isInput" scoped="" ref="0x109ce01a8"/>
        <function-ref name="setResistor" scoped="" ref="0x109ce0330"/>
        <function-ref name="toggle" scoped="" ref="0x109ce04b8"/>
        <function-ref name="isOutput" scoped="" ref="0x109ce0640"/>
        <function-ref name="getResistor" scoped="" ref="0x109ce07c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x109ce0950"/>
        <function-ref name="get" scoped="" ref="0x109ce0ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x109ce0c60"/>
        <function-ref name="getRaw" scoped="" ref="0x109ce0de8"/>
        <function-ref name="set" scoped="" ref="0x109cdf020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x109cdf1a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x109cdf330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x109cdf5b8"/>
        <function-ref name="clr" scoped="" ref="0x109cdf740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x109cdc3d8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P27"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x109cdc3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x109cdc728"/>
        <function-ref name="isInput" scoped="" ref="0x109cdc8b0"/>
        <function-ref name="setResistor" scoped="" ref="0x109cdca38"/>
        <function-ref name="toggle" scoped="" ref="0x109cdcbc0"/>
        <function-ref name="isOutput" scoped="" ref="0x109cdcd48"/>
        <function-ref name="getResistor" scoped="" ref="0x109cdb020"/>
        <function-ref name="makeOutput" scoped="" ref="0x109cdb1a8"/>
        <function-ref name="get" scoped="" ref="0x109cdb330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x109cdb4b8"/>
        <function-ref name="getRaw" scoped="" ref="0x109cdb640"/>
        <function-ref name="set" scoped="" ref="0x109cdb7c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x109cdb950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x109cdbad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x109cdbd60"/>
        <function-ref name="clr" scoped="" ref="0x109cda020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x109cd8ca0" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P30"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x109cd8ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x109cd7020"/>
        <function-ref name="isInput" scoped="" ref="0x109cd71a8"/>
        <function-ref name="setResistor" scoped="" ref="0x109cd7330"/>
        <function-ref name="toggle" scoped="" ref="0x109cd74b8"/>
        <function-ref name="isOutput" scoped="" ref="0x109cd7640"/>
        <function-ref name="getResistor" scoped="" ref="0x109cd77c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x109cd7950"/>
        <function-ref name="get" scoped="" ref="0x109cd7ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x109cd7c60"/>
        <function-ref name="getRaw" scoped="" ref="0x109cd7de8"/>
        <function-ref name="set" scoped="" ref="0x109d08020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x109d081a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x109d08330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x109d085b8"/>
        <function-ref name="clr" scoped="" ref="0x109d08740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x109d053d8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P31"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x109d053d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x109d05728"/>
        <function-ref name="isInput" scoped="" ref="0x109d058b0"/>
        <function-ref name="setResistor" scoped="" ref="0x109d05a38"/>
        <function-ref name="toggle" scoped="" ref="0x109d05bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x109d05d48"/>
        <function-ref name="getResistor" scoped="" ref="0x109d04020"/>
        <function-ref name="makeOutput" scoped="" ref="0x109d041a8"/>
        <function-ref name="get" scoped="" ref="0x109d04330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x109d044b8"/>
        <function-ref name="getRaw" scoped="" ref="0x109d04640"/>
        <function-ref name="set" scoped="" ref="0x109d047c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x109d04950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x109d04ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x109d04d60"/>
        <function-ref name="clr" scoped="" ref="0x109d03020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x109d01ca0" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P32"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x109d01ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x109d00020"/>
        <function-ref name="isInput" scoped="" ref="0x109d001a8"/>
        <function-ref name="setResistor" scoped="" ref="0x109d00330"/>
        <function-ref name="toggle" scoped="" ref="0x109d004b8"/>
        <function-ref name="isOutput" scoped="" ref="0x109d00640"/>
        <function-ref name="getResistor" scoped="" ref="0x109d007c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x109d00950"/>
        <function-ref name="get" scoped="" ref="0x109d00ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x109d00c60"/>
        <function-ref name="getRaw" scoped="" ref="0x109d00de8"/>
        <function-ref name="set" scoped="" ref="0x109cff020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x109cff1a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x109cff330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x109cff5b8"/>
        <function-ref name="clr" scoped="" ref="0x109cff740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x109cfc3d8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P33"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x109cfc3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x109cfc728"/>
        <function-ref name="isInput" scoped="" ref="0x109cfc8b0"/>
        <function-ref name="setResistor" scoped="" ref="0x109cfca38"/>
        <function-ref name="toggle" scoped="" ref="0x109cfcbc0"/>
        <function-ref name="isOutput" scoped="" ref="0x109cfcd48"/>
        <function-ref name="getResistor" scoped="" ref="0x109cfb020"/>
        <function-ref name="makeOutput" scoped="" ref="0x109cfb1a8"/>
        <function-ref name="get" scoped="" ref="0x109cfb330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x109cfb4b8"/>
        <function-ref name="getRaw" scoped="" ref="0x109cfb640"/>
        <function-ref name="set" scoped="" ref="0x109cfb7c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x109cfb950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x109cfbad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x109cfbd60"/>
        <function-ref name="clr" scoped="" ref="0x109cfa020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x109cf8ca0" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P34"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x109cf8ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x109cf6020"/>
        <function-ref name="isInput" scoped="" ref="0x109cf61a8"/>
        <function-ref name="setResistor" scoped="" ref="0x109cf6330"/>
        <function-ref name="toggle" scoped="" ref="0x109cf64b8"/>
        <function-ref name="isOutput" scoped="" ref="0x109cf6640"/>
        <function-ref name="getResistor" scoped="" ref="0x109cf67c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x109cf6950"/>
        <function-ref name="get" scoped="" ref="0x109cf6ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x109cf6c60"/>
        <function-ref name="getRaw" scoped="" ref="0x109cf6de8"/>
        <function-ref name="set" scoped="" ref="0x109cf5020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x109cf51a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x109cf5330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x109cf55b8"/>
        <function-ref name="clr" scoped="" ref="0x109cf5740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x109cf23d8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P35"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x109cf23d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x109cf2728"/>
        <function-ref name="isInput" scoped="" ref="0x109cf28b0"/>
        <function-ref name="setResistor" scoped="" ref="0x109cf2a38"/>
        <function-ref name="toggle" scoped="" ref="0x109cf2bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x109cf2d48"/>
        <function-ref name="getResistor" scoped="" ref="0x109cf1020"/>
        <function-ref name="makeOutput" scoped="" ref="0x109cf11a8"/>
        <function-ref name="get" scoped="" ref="0x109cf1330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x109cf14b8"/>
        <function-ref name="getRaw" scoped="" ref="0x109cf1640"/>
        <function-ref name="set" scoped="" ref="0x109cf17c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x109cf1950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x109cf1ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x109cf1d60"/>
        <function-ref name="clr" scoped="" ref="0x109cf0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x109d21ca0" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P36"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x109d21ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x109d20020"/>
        <function-ref name="isInput" scoped="" ref="0x109d201a8"/>
        <function-ref name="setResistor" scoped="" ref="0x109d20330"/>
        <function-ref name="toggle" scoped="" ref="0x109d204b8"/>
        <function-ref name="isOutput" scoped="" ref="0x109d20640"/>
        <function-ref name="getResistor" scoped="" ref="0x109d207c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x109d20950"/>
        <function-ref name="get" scoped="" ref="0x109d20ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x109d20c60"/>
        <function-ref name="getRaw" scoped="" ref="0x109d20de8"/>
        <function-ref name="set" scoped="" ref="0x109d1f020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x109d1f1a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x109d1f330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x109d1f5b8"/>
        <function-ref name="clr" scoped="" ref="0x109d1f740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x109d1c3d8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P37"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x109d1c3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x109d1c728"/>
        <function-ref name="isInput" scoped="" ref="0x109d1c8b0"/>
        <function-ref name="setResistor" scoped="" ref="0x109d1ca38"/>
        <function-ref name="toggle" scoped="" ref="0x109d1cbc0"/>
        <function-ref name="isOutput" scoped="" ref="0x109d1cd48"/>
        <function-ref name="getResistor" scoped="" ref="0x109d1b020"/>
        <function-ref name="makeOutput" scoped="" ref="0x109d1b1a8"/>
        <function-ref name="get" scoped="" ref="0x109d1b330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x109d1b4b8"/>
        <function-ref name="getRaw" scoped="" ref="0x109d1b640"/>
        <function-ref name="set" scoped="" ref="0x109d1b7c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x109d1b950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x109d1bad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x109d1bd60"/>
        <function-ref name="clr" scoped="" ref="0x109d1a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x109d18dd8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P40"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x109d18dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x109d17170"/>
        <function-ref name="isInput" scoped="" ref="0x109d172f8"/>
        <function-ref name="setResistor" scoped="" ref="0x109d17480"/>
        <function-ref name="toggle" scoped="" ref="0x109d17608"/>
        <function-ref name="isOutput" scoped="" ref="0x109d17790"/>
        <function-ref name="getResistor" scoped="" ref="0x109d17918"/>
        <function-ref name="makeOutput" scoped="" ref="0x109d17aa0"/>
        <function-ref name="get" scoped="" ref="0x109d17c28"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x109d17db0"/>
        <function-ref name="getRaw" scoped="" ref="0x109d16020"/>
        <function-ref name="set" scoped="" ref="0x109d161a8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x109d16330"/>
        <function-ref name="isIOFunc" scoped="" ref="0x109d164b8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x109d16740"/>
        <function-ref name="clr" scoped="" ref="0x109d168c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x109d13478" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P41"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x109d13478"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x109d137c8"/>
        <function-ref name="isInput" scoped="" ref="0x109d13950"/>
        <function-ref name="setResistor" scoped="" ref="0x109d13ad8"/>
        <function-ref name="toggle" scoped="" ref="0x109d13c60"/>
        <function-ref name="isOutput" scoped="" ref="0x109d13de8"/>
        <function-ref name="getResistor" scoped="" ref="0x109d12020"/>
        <function-ref name="makeOutput" scoped="" ref="0x109d121a8"/>
        <function-ref name="get" scoped="" ref="0x109d12330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x109d124b8"/>
        <function-ref name="getRaw" scoped="" ref="0x109d12640"/>
        <function-ref name="set" scoped="" ref="0x109d127c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x109d12950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x109d12ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x109d12d60"/>
        <function-ref name="clr" scoped="" ref="0x109d11020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x109d0fca0" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P42"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x109d0fca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x109d0e020"/>
        <function-ref name="isInput" scoped="" ref="0x109d0e1a8"/>
        <function-ref name="setResistor" scoped="" ref="0x109d0e330"/>
        <function-ref name="toggle" scoped="" ref="0x109d0e4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x109d0e640"/>
        <function-ref name="getResistor" scoped="" ref="0x109d0e7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x109d0e950"/>
        <function-ref name="get" scoped="" ref="0x109d0ead8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x109d0ec60"/>
        <function-ref name="getRaw" scoped="" ref="0x109d0ede8"/>
        <function-ref name="set" scoped="" ref="0x109d0d020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x109d0d1a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x109d0d330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x109d0d5b8"/>
        <function-ref name="clr" scoped="" ref="0x109d0d740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x109d0a3d8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P43"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x109d0a3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x109d0a728"/>
        <function-ref name="isInput" scoped="" ref="0x109d0a8b0"/>
        <function-ref name="setResistor" scoped="" ref="0x109d0aa38"/>
        <function-ref name="toggle" scoped="" ref="0x109d0abc0"/>
        <function-ref name="isOutput" scoped="" ref="0x109d0ad48"/>
        <function-ref name="getResistor" scoped="" ref="0x109d09020"/>
        <function-ref name="makeOutput" scoped="" ref="0x109d091a8"/>
        <function-ref name="get" scoped="" ref="0x109d09330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x109d094b8"/>
        <function-ref name="getRaw" scoped="" ref="0x109d09640"/>
        <function-ref name="set" scoped="" ref="0x109d097c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x109d09950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x109d09ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x109d09d60"/>
        <function-ref name="clr" scoped="" ref="0x109d3c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x109d3aca0" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P44"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x109d3aca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x109d38020"/>
        <function-ref name="isInput" scoped="" ref="0x109d381a8"/>
        <function-ref name="setResistor" scoped="" ref="0x109d38330"/>
        <function-ref name="toggle" scoped="" ref="0x109d384b8"/>
        <function-ref name="isOutput" scoped="" ref="0x109d38640"/>
        <function-ref name="getResistor" scoped="" ref="0x109d387c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x109d38950"/>
        <function-ref name="get" scoped="" ref="0x109d38ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x109d38c60"/>
        <function-ref name="getRaw" scoped="" ref="0x109d38de8"/>
        <function-ref name="set" scoped="" ref="0x109d37020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x109d371a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x109d37330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x109d375b8"/>
        <function-ref name="clr" scoped="" ref="0x109d37740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x109d343d8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P45"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x109d343d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x109d34728"/>
        <function-ref name="isInput" scoped="" ref="0x109d348b0"/>
        <function-ref name="setResistor" scoped="" ref="0x109d34a38"/>
        <function-ref name="toggle" scoped="" ref="0x109d34bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x109d34d48"/>
        <function-ref name="getResistor" scoped="" ref="0x109d33020"/>
        <function-ref name="makeOutput" scoped="" ref="0x109d331a8"/>
        <function-ref name="get" scoped="" ref="0x109d33330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x109d334b8"/>
        <function-ref name="getRaw" scoped="" ref="0x109d33640"/>
        <function-ref name="set" scoped="" ref="0x109d337c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x109d33950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x109d33ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x109d33d60"/>
        <function-ref name="clr" scoped="" ref="0x109d32020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x109d30ca0" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P46"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x109d30ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x109d2f020"/>
        <function-ref name="isInput" scoped="" ref="0x109d2f1a8"/>
        <function-ref name="setResistor" scoped="" ref="0x109d2f330"/>
        <function-ref name="toggle" scoped="" ref="0x109d2f4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x109d2f640"/>
        <function-ref name="getResistor" scoped="" ref="0x109d2f7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x109d2f950"/>
        <function-ref name="get" scoped="" ref="0x109d2fad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x109d2fc60"/>
        <function-ref name="getRaw" scoped="" ref="0x109d2fde8"/>
        <function-ref name="set" scoped="" ref="0x109d2e020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x109d2e1a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x109d2e330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x109d2e5b8"/>
        <function-ref name="clr" scoped="" ref="0x109d2e740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x109d2b3d8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P47"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x109d2b3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x109d2b728"/>
        <function-ref name="isInput" scoped="" ref="0x109d2b8b0"/>
        <function-ref name="setResistor" scoped="" ref="0x109d2ba38"/>
        <function-ref name="toggle" scoped="" ref="0x109d2bbc0"/>
        <function-ref name="isOutput" scoped="" ref="0x109d2bd48"/>
        <function-ref name="getResistor" scoped="" ref="0x109d2a020"/>
        <function-ref name="makeOutput" scoped="" ref="0x109d2a1a8"/>
        <function-ref name="get" scoped="" ref="0x109d2a330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x109d2a4b8"/>
        <function-ref name="getRaw" scoped="" ref="0x109d2a640"/>
        <function-ref name="set" scoped="" ref="0x109d2a7c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x109d2a950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x109d2aad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x109d2ad60"/>
        <function-ref name="clr" scoped="" ref="0x109d29020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x109d27ca0" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P50"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x109d27ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x109d26020"/>
        <function-ref name="isInput" scoped="" ref="0x109d261a8"/>
        <function-ref name="setResistor" scoped="" ref="0x109d26330"/>
        <function-ref name="toggle" scoped="" ref="0x109d264b8"/>
        <function-ref name="isOutput" scoped="" ref="0x109d26640"/>
        <function-ref name="getResistor" scoped="" ref="0x109d267c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x109d26950"/>
        <function-ref name="get" scoped="" ref="0x109d26ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x109d26c60"/>
        <function-ref name="getRaw" scoped="" ref="0x109d26de8"/>
        <function-ref name="set" scoped="" ref="0x109d25020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x109d251a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x109d25330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x109d255b8"/>
        <function-ref name="clr" scoped="" ref="0x109d25740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x109d563d8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P51"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x109d563d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x109d56728"/>
        <function-ref name="isInput" scoped="" ref="0x109d568b0"/>
        <function-ref name="setResistor" scoped="" ref="0x109d56a38"/>
        <function-ref name="toggle" scoped="" ref="0x109d56bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x109d56d48"/>
        <function-ref name="getResistor" scoped="" ref="0x109d55020"/>
        <function-ref name="makeOutput" scoped="" ref="0x109d551a8"/>
        <function-ref name="get" scoped="" ref="0x109d55330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x109d554b8"/>
        <function-ref name="getRaw" scoped="" ref="0x109d55640"/>
        <function-ref name="set" scoped="" ref="0x109d557c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x109d55950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x109d55ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x109d55d60"/>
        <function-ref name="clr" scoped="" ref="0x109d54020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x109d52ca0" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P52"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x109d52ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x109d51020"/>
        <function-ref name="isInput" scoped="" ref="0x109d511a8"/>
        <function-ref name="setResistor" scoped="" ref="0x109d51330"/>
        <function-ref name="toggle" scoped="" ref="0x109d514b8"/>
        <function-ref name="isOutput" scoped="" ref="0x109d51640"/>
        <function-ref name="getResistor" scoped="" ref="0x109d517c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x109d51950"/>
        <function-ref name="get" scoped="" ref="0x109d51ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x109d51c60"/>
        <function-ref name="getRaw" scoped="" ref="0x109d51de8"/>
        <function-ref name="set" scoped="" ref="0x109d50020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x109d501a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x109d50330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x109d505b8"/>
        <function-ref name="clr" scoped="" ref="0x109d50740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x109d4d3d8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P53"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x109d4d3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x109d4d728"/>
        <function-ref name="isInput" scoped="" ref="0x109d4d8b0"/>
        <function-ref name="setResistor" scoped="" ref="0x109d4da38"/>
        <function-ref name="toggle" scoped="" ref="0x109d4dbc0"/>
        <function-ref name="isOutput" scoped="" ref="0x109d4dd48"/>
        <function-ref name="getResistor" scoped="" ref="0x109d4c020"/>
        <function-ref name="makeOutput" scoped="" ref="0x109d4c1a8"/>
        <function-ref name="get" scoped="" ref="0x109d4c330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x109d4c4b8"/>
        <function-ref name="getRaw" scoped="" ref="0x109d4c640"/>
        <function-ref name="set" scoped="" ref="0x109d4c7c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x109d4c950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x109d4cad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x109d4cd60"/>
        <function-ref name="clr" scoped="" ref="0x109d4b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x109d48ca0" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P54"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x109d48ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x109d47020"/>
        <function-ref name="isInput" scoped="" ref="0x109d471a8"/>
        <function-ref name="setResistor" scoped="" ref="0x109d47330"/>
        <function-ref name="toggle" scoped="" ref="0x109d474b8"/>
        <function-ref name="isOutput" scoped="" ref="0x109d47640"/>
        <function-ref name="getResistor" scoped="" ref="0x109d477c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x109d47950"/>
        <function-ref name="get" scoped="" ref="0x109d47ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x109d47c60"/>
        <function-ref name="getRaw" scoped="" ref="0x109d47de8"/>
        <function-ref name="set" scoped="" ref="0x109d46020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x109d461a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x109d46330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x109d465b8"/>
        <function-ref name="clr" scoped="" ref="0x109d46740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x109d433d8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P55"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x109d433d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x109d43728"/>
        <function-ref name="isInput" scoped="" ref="0x109d438b0"/>
        <function-ref name="setResistor" scoped="" ref="0x109d43a38"/>
        <function-ref name="toggle" scoped="" ref="0x109d43bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x109d43d48"/>
        <function-ref name="getResistor" scoped="" ref="0x109d42020"/>
        <function-ref name="makeOutput" scoped="" ref="0x109d421a8"/>
        <function-ref name="get" scoped="" ref="0x109d42330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x109d424b8"/>
        <function-ref name="getRaw" scoped="" ref="0x109d42640"/>
        <function-ref name="set" scoped="" ref="0x109d427c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x109d42950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x109d42ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x109d42d60"/>
        <function-ref name="clr" scoped="" ref="0x109d41020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x109d3fca0" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P56"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x109d3fca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x109d3e020"/>
        <function-ref name="isInput" scoped="" ref="0x109d3e1a8"/>
        <function-ref name="setResistor" scoped="" ref="0x109d3e330"/>
        <function-ref name="toggle" scoped="" ref="0x109d3e4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x109d3e640"/>
        <function-ref name="getResistor" scoped="" ref="0x109d3e7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x109d3e950"/>
        <function-ref name="get" scoped="" ref="0x109d3ead8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x109d3ec60"/>
        <function-ref name="getRaw" scoped="" ref="0x109d3ede8"/>
        <function-ref name="set" scoped="" ref="0x109d3d020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x109d3d1a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x109d3d330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x109d3d5b8"/>
        <function-ref name="clr" scoped="" ref="0x109d3d740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x109d6e3d8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P57"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x109d6e3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x109d6e728"/>
        <function-ref name="isInput" scoped="" ref="0x109d6e8b0"/>
        <function-ref name="setResistor" scoped="" ref="0x109d6ea38"/>
        <function-ref name="toggle" scoped="" ref="0x109d6ebc0"/>
        <function-ref name="isOutput" scoped="" ref="0x109d6ed48"/>
        <function-ref name="getResistor" scoped="" ref="0x109d6d020"/>
        <function-ref name="makeOutput" scoped="" ref="0x109d6d1a8"/>
        <function-ref name="get" scoped="" ref="0x109d6d330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x109d6d4b8"/>
        <function-ref name="getRaw" scoped="" ref="0x109d6d640"/>
        <function-ref name="set" scoped="" ref="0x109d6d7c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x109d6d950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x109d6dad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x109d6dd60"/>
        <function-ref name="clr" scoped="" ref="0x109d6c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x109d6aca0" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P60"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x109d6aca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x109d69020"/>
        <function-ref name="isInput" scoped="" ref="0x109d691a8"/>
        <function-ref name="setResistor" scoped="" ref="0x109d69330"/>
        <function-ref name="toggle" scoped="" ref="0x109d694b8"/>
        <function-ref name="isOutput" scoped="" ref="0x109d69640"/>
        <function-ref name="getResistor" scoped="" ref="0x109d697c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x109d69950"/>
        <function-ref name="get" scoped="" ref="0x109d69ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x109d69c60"/>
        <function-ref name="getRaw" scoped="" ref="0x109d69de8"/>
        <function-ref name="set" scoped="" ref="0x109d68020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x109d681a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x109d68330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x109d685b8"/>
        <function-ref name="clr" scoped="" ref="0x109d68740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x109d653d8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P61"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x109d653d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x109d65728"/>
        <function-ref name="isInput" scoped="" ref="0x109d658b0"/>
        <function-ref name="setResistor" scoped="" ref="0x109d65a38"/>
        <function-ref name="toggle" scoped="" ref="0x109d65bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x109d65d48"/>
        <function-ref name="getResistor" scoped="" ref="0x109d64020"/>
        <function-ref name="makeOutput" scoped="" ref="0x109d641a8"/>
        <function-ref name="get" scoped="" ref="0x109d64330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x109d644b8"/>
        <function-ref name="getRaw" scoped="" ref="0x109d64640"/>
        <function-ref name="set" scoped="" ref="0x109d647c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x109d64950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x109d64ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x109d64d60"/>
        <function-ref name="clr" scoped="" ref="0x109d63020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x109d61ca0" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P62"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x109d61ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x109d60020"/>
        <function-ref name="isInput" scoped="" ref="0x109d601a8"/>
        <function-ref name="setResistor" scoped="" ref="0x109d60330"/>
        <function-ref name="toggle" scoped="" ref="0x109d604b8"/>
        <function-ref name="isOutput" scoped="" ref="0x109d60640"/>
        <function-ref name="getResistor" scoped="" ref="0x109d607c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x109d60950"/>
        <function-ref name="get" scoped="" ref="0x109d60ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x109d60c60"/>
        <function-ref name="getRaw" scoped="" ref="0x109d60de8"/>
        <function-ref name="set" scoped="" ref="0x109d5f020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x109d5f1a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x109d5f330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x109d5f5b8"/>
        <function-ref name="clr" scoped="" ref="0x109d5f740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x109d5c3d8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P63"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x109d5c3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x109d5c728"/>
        <function-ref name="isInput" scoped="" ref="0x109d5c8b0"/>
        <function-ref name="setResistor" scoped="" ref="0x109d5ca38"/>
        <function-ref name="toggle" scoped="" ref="0x109d5cbc0"/>
        <function-ref name="isOutput" scoped="" ref="0x109d5cd48"/>
        <function-ref name="getResistor" scoped="" ref="0x109d5a020"/>
        <function-ref name="makeOutput" scoped="" ref="0x109d5a1a8"/>
        <function-ref name="get" scoped="" ref="0x109d5a330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x109d5a4b8"/>
        <function-ref name="getRaw" scoped="" ref="0x109d5a640"/>
        <function-ref name="set" scoped="" ref="0x109d5a7c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x109d5a950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x109d5aad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x109d5ad60"/>
        <function-ref name="clr" scoped="" ref="0x109d59020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x109d57ca0" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P64"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x109d57ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x109d8a020"/>
        <function-ref name="isInput" scoped="" ref="0x109d8a1a8"/>
        <function-ref name="setResistor" scoped="" ref="0x109d8a330"/>
        <function-ref name="toggle" scoped="" ref="0x109d8a4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x109d8a640"/>
        <function-ref name="getResistor" scoped="" ref="0x109d8a7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x109d8a950"/>
        <function-ref name="get" scoped="" ref="0x109d8aad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x109d8ac60"/>
        <function-ref name="getRaw" scoped="" ref="0x109d8ade8"/>
        <function-ref name="set" scoped="" ref="0x109d89020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x109d891a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x109d89330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x109d895b8"/>
        <function-ref name="clr" scoped="" ref="0x109d89740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x109d863d8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P65"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x109d863d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x109d86728"/>
        <function-ref name="isInput" scoped="" ref="0x109d868b0"/>
        <function-ref name="setResistor" scoped="" ref="0x109d86a38"/>
        <function-ref name="toggle" scoped="" ref="0x109d86bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x109d86d48"/>
        <function-ref name="getResistor" scoped="" ref="0x109d85020"/>
        <function-ref name="makeOutput" scoped="" ref="0x109d851a8"/>
        <function-ref name="get" scoped="" ref="0x109d85330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x109d854b8"/>
        <function-ref name="getRaw" scoped="" ref="0x109d85640"/>
        <function-ref name="set" scoped="" ref="0x109d857c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x109d85950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x109d85ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x109d85d60"/>
        <function-ref name="clr" scoped="" ref="0x109d84020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x109d82ca0" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P66"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x109d82ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x109d81020"/>
        <function-ref name="isInput" scoped="" ref="0x109d811a8"/>
        <function-ref name="setResistor" scoped="" ref="0x109d81330"/>
        <function-ref name="toggle" scoped="" ref="0x109d814b8"/>
        <function-ref name="isOutput" scoped="" ref="0x109d81640"/>
        <function-ref name="getResistor" scoped="" ref="0x109d817c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x109d81950"/>
        <function-ref name="get" scoped="" ref="0x109d81ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x109d81c60"/>
        <function-ref name="getRaw" scoped="" ref="0x109d81de8"/>
        <function-ref name="set" scoped="" ref="0x109d80020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x109d801a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x109d80330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x109d805b8"/>
        <function-ref name="clr" scoped="" ref="0x109d80740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x109d7d3d8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P67"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x109d7d3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x109d7d728"/>
        <function-ref name="isInput" scoped="" ref="0x109d7d8b0"/>
        <function-ref name="setResistor" scoped="" ref="0x109d7da38"/>
        <function-ref name="toggle" scoped="" ref="0x109d7dbc0"/>
        <function-ref name="isOutput" scoped="" ref="0x109d7dd48"/>
        <function-ref name="getResistor" scoped="" ref="0x109d7c020"/>
        <function-ref name="makeOutput" scoped="" ref="0x109d7c1a8"/>
        <function-ref name="get" scoped="" ref="0x109d7c330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x109d7c4b8"/>
        <function-ref name="getRaw" scoped="" ref="0x109d7c640"/>
        <function-ref name="set" scoped="" ref="0x109d7c7c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x109d7c950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x109d7cad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x109d7cd60"/>
        <function-ref name="clr" scoped="" ref="0x109d7b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x109de4da0" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x109de4da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x109e09170"/>
        <function-ref name="isInput" scoped="" ref="0x109e092f8"/>
        <function-ref name="setResistor" scoped="" ref="0x109e09480"/>
        <function-ref name="toggle" scoped="" ref="0x109e09608"/>
        <function-ref name="isOutput" scoped="" ref="0x109e09790"/>
        <function-ref name="getResistor" scoped="" ref="0x109e09918"/>
        <function-ref name="makeOutput" scoped="" ref="0x109e09aa0"/>
        <function-ref name="get" scoped="" ref="0x109e09c28"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x109e09db0"/>
        <function-ref name="getRaw" scoped="" ref="0x109e08020"/>
        <function-ref name="set" scoped="" ref="0x109e081a8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x109e08330"/>
        <function-ref name="isIOFunc" scoped="" ref="0x109e084b8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x109e08740"/>
        <function-ref name="clr" scoped="" ref="0x109e088c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x109de6c30" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x109de6c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x109de4020"/>
        <function-ref name="isInput" scoped="" ref="0x109de41a8"/>
        <function-ref name="toggle" scoped="" ref="0x109de4330"/>
        <function-ref name="isOutput" scoped="" ref="0x109de44b8"/>
        <function-ref name="get" scoped="" ref="0x109de4640"/>
        <function-ref name="makeOutput" scoped="" ref="0x109de47c8"/>
        <function-ref name="set" scoped="" ref="0x109de4950"/>
        <function-ref name="clr" scoped="" ref="0x109de4ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x109e055f8" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x109e055f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x109e05948"/>
        <function-ref name="isInput" scoped="" ref="0x109e05ad0"/>
        <function-ref name="setResistor" scoped="" ref="0x109e05c58"/>
        <function-ref name="toggle" scoped="" ref="0x109e05de0"/>
        <function-ref name="isOutput" scoped="" ref="0x109e04020"/>
        <function-ref name="getResistor" scoped="" ref="0x109e041a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x109e04330"/>
        <function-ref name="get" scoped="" ref="0x109e044b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x109e04640"/>
        <function-ref name="getRaw" scoped="" ref="0x109e047c8"/>
        <function-ref name="set" scoped="" ref="0x109e04950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x109e04ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x109e04c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x109e03020"/>
        <function-ref name="clr" scoped="" ref="0x109e031a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x109e06448" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x109e06448"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x109e06798"/>
        <function-ref name="isInput" scoped="" ref="0x109e06920"/>
        <function-ref name="toggle" scoped="" ref="0x109e06aa8"/>
        <function-ref name="isOutput" scoped="" ref="0x109e06c30"/>
        <function-ref name="get" scoped="" ref="0x109e06db8"/>
        <function-ref name="makeOutput" scoped="" ref="0x109e05020"/>
        <function-ref name="set" scoped="" ref="0x109e051a8"/>
        <function-ref name="clr" scoped="" ref="0x109e05330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x109e00e20" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x109e00e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x109dff1a8"/>
        <function-ref name="isInput" scoped="" ref="0x109dff330"/>
        <function-ref name="setResistor" scoped="" ref="0x109dff4b8"/>
        <function-ref name="toggle" scoped="" ref="0x109dff640"/>
        <function-ref name="isOutput" scoped="" ref="0x109dff7c8"/>
        <function-ref name="getResistor" scoped="" ref="0x109dff950"/>
        <function-ref name="makeOutput" scoped="" ref="0x109dffad8"/>
        <function-ref name="get" scoped="" ref="0x109dffc60"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x109dffde8"/>
        <function-ref name="getRaw" scoped="" ref="0x109dfe020"/>
        <function-ref name="set" scoped="" ref="0x109dfe1a8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x109dfe330"/>
        <function-ref name="isIOFunc" scoped="" ref="0x109dfe4b8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x109dfe740"/>
        <function-ref name="clr" scoped="" ref="0x109dfe8c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x109e02cd0" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x109e02cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x109e000a0"/>
        <function-ref name="isInput" scoped="" ref="0x109e00228"/>
        <function-ref name="toggle" scoped="" ref="0x109e003b0"/>
        <function-ref name="isOutput" scoped="" ref="0x109e00538"/>
        <function-ref name="get" scoped="" ref="0x109e006c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x109e00848"/>
        <function-ref name="set" scoped="" ref="0x109e009d0"/>
        <function-ref name="clr" scoped="" ref="0x109e00b58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x109549020" loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x109549020"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x109549370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x1093963e0" loc="51:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x1093963e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x109396730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x109615838" loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerState" scoped="" ref="0x109615838"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x109615b88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430ClockInit" ref="0x1097aa6c8" loc="39:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosb/MoteClockP.nc">
      <component-ref qname="MoteClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x1097aa6c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x109e20640"/>
        <function-ref name="initTimerB" scoped="" ref="0x1097aaba0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x1097aad28"/>
        <function-ref name="initTimerA" scoped="" ref="0x109e20020"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x1097aaa18"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x109e201a8"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x109e20330"/>
        <function-ref name="initClocks" scoped="" ref="0x109e204b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x109e14140" loc="60:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x109e14140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x109e14490"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x1097959b0" loc="57:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x1097959b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x109795d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x109e159f8" loc="59:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PlatformInit" scoped="" ref="0x109e159f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x109e15d48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x109e15020" loc="58:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x109e15020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x109e15370"/>
        <function-ref name="taskLoop" scoped="" ref="0x109e154f8"/>
        <function-ref name="runNextTask" scoped="" ref="0x109e15680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x109322ca0" loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x109322ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x109099790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x1092e1020"/>
        <function-ref name="runTask" scoped="" ref="0x1092e11a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x10931b390" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x10931b390"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10931b6e0"/>
        <function-ref name="taskLoop" scoped="" ref="0x10931b868"/>
        <function-ref name="runNextTask" scoped="" ref="0x10931b9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x109756020" loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x109756020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x109099790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x109756370"/>
        <function-ref name="runTask" scoped="" ref="0x1097564f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x1097534e0" loc="57:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x1097534e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x109753830"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x1097580c0" loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x1097580c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x109758410"/>
        <function-ref name="taskLoop" scoped="" ref="0x109758598"/>
        <function-ref name="runNextTask" scoped="" ref="0x109758720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMControl" ref="0x109e57968" loc="55:RadioCountToLedsC.nc">
      <component-ref qname="RadioCountToLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMControl" scoped="" ref="0x109e57968"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x109e57cb8"/>
        <function-ref name="stop" scoped="" ref="0x109e57e40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x109e3fbc8" loc="50:RadioCountToLedsC.nc">
      <component-ref qname="RadioCountToLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x109e3fbc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x109e3e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x109e31178" loc="52:RadioCountToLedsC.nc">
      <component-ref qname="RadioCountToLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x109e31178"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x109e314c8"/>
        <function-ref name="getPayload" scoped="" ref="0x109e31650"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x109e317d8"/>
        <function-ref name="cancel" scoped="" ref="0x109e31960"/>
        <function-ref name="sendDone" scoped="" ref="0x109e31ae8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime" ref="0x109e5c108" loc="54:RadioCountToLedsC.nc">
      <component-ref qname="RadioCountToLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x109e5c108"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x109e42a18"/>
            <typename><typedef-ref name="TMilli" ref="0x109e42d70"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x109e5cc88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x109e58020" loc="56:RadioCountToLedsC.nc">
      <component-ref qname="RadioCountToLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x109e58020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x109e58370"/>
        <function-ref name="payloadLength" scoped="" ref="0x109e584f8"/>
        <function-ref name="getPayload" scoped="" ref="0x109e58680"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x109e58808"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x109e58990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LplxPacket" ref="0x109e492c8" loc="57:RadioCountToLedsC.nc">
      <component-ref qname="RadioCountToLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LplxPacket" scoped="" ref="0x109e492c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LplxPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setOppoRouting" scoped="" ref="0x109e49618"/>
        <function-ref name="setPacketBulk" scoped="" ref="0x109e497a0"/>
        <function-ref name="getPacketBulk" scoped="" ref="0x109e49928"/>
        <function-ref name="setPacketCI" scoped="" ref="0x109e49ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x109e3e2b0" loc="51:RadioCountToLedsC.nc">
      <component-ref qname="RadioCountToLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x109e3e2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x109e3e600"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MilliTimer" ref="0x109e295a0" loc="53:RadioCountToLedsC.nc">
      <component-ref qname="RadioCountToLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MilliTimer" scoped="" ref="0x109e295a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x109e42a18"/>
            <typename><typedef-ref name="TMilli" ref="0x109e42d70"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x109e5f8f0"/>
        <function-ref name="fired" scoped="" ref="0x109e28020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x109e28d10"/>
        <function-ref name="isOneShot" scoped="" ref="0x109e288c0"/>
        <function-ref name="getdt" scoped="" ref="0x109e5e1c0"/>
        <function-ref name="gett0" scoped="" ref="0x109e5fd40"/>
        <function-ref name="isRunning" scoped="" ref="0x109e28470"/>
        <function-ref name="startPeriodic" scoped="" ref="0x109e3b118"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x109e5f320"/>
        <function-ref name="startOneShot" scoped="" ref="0x109e3b5b8"/>
        <function-ref name="stop" scoped="" ref="0x109e3ba58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x109e40678" loc="49:RadioCountToLedsC.nc">
      <component-ref qname="RadioCountToLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x109e40678"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x109e409c8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x109e40b50"/>
        <function-ref name="led1On" scoped="" ref="0x109e40cd8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x109e40e60"/>
        <function-ref name="led2Toggle" scoped="" ref="0x109e3f020"/>
        <function-ref name="get" scoped="" ref="0x109e3f1a8"/>
        <function-ref name="led1Off" scoped="" ref="0x109e3f330"/>
        <function-ref name="led2Off" scoped="" ref="0x109e3f950"/>
        <function-ref name="set" scoped="" ref="0x109e3f4b8"/>
        <function-ref name="led0On" scoped="" ref="0x109e3f640"/>
        <function-ref name="led2On" scoped="" ref="0x109e3f7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x10a210080" loc="49:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="RadioCountToLedsAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x10a210080"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x10a2103d0"/>
        <function-ref name="getPayload" scoped="" ref="0x10a210558"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x10a2106e0"/>
        <function-ref name="cancel" scoped="" ref="0x10a210868"/>
        <function-ref name="sendDone" scoped="" ref="0x10a2109f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x10a210c38" loc="50:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="RadioCountToLedsAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x10a210c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10a20f020"/>
        <function-ref name="payloadLength" scoped="" ref="0x10a20f1a8"/>
        <function-ref name="getPayload" scoped="" ref="0x10a20f330"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x10a20f4b8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x10a20f640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x10a20f888" loc="51:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="RadioCountToLedsAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x10a20f888"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x10a20fbd8"/>
        <function-ref name="source" scoped="" ref="0x10a20fd60"/>
        <function-ref name="address" scoped="" ref="0x10a20e020"/>
        <function-ref name="destination" scoped="" ref="0x10a20e1a8"/>
        <function-ref name="setSource" scoped="" ref="0x10a20e330"/>
        <function-ref name="setDestination" scoped="" ref="0x10a20e4b8"/>
        <function-ref name="type" scoped="" ref="0x10a20e640"/>
        <function-ref name="setType" scoped="" ref="0x10a20e7c8"/>
        <function-ref name="isForMe" scoped="" ref="0x10a20e950"/>
        <function-ref name="setGroup" scoped="" ref="0x10a20ead8"/>
        <function-ref name="localGroup" scoped="" ref="0x10a20ec60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x10a20d020" loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="RadioCountToLedsAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x10a20d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x10a20d370"/>
        <function-ref name="noAck" scoped="" ref="0x10a20d4f8"/>
        <function-ref name="wasAcked" scoped="" ref="0x10a20d680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x10a5ee020" loc="49:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="RadioCountToLedsAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x10a5ee020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x10a5ee370"/>
        <function-ref name="getPayload" scoped="" ref="0x10a5ee4f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x10a5ee680"/>
        <function-ref name="cancel" scoped="" ref="0x10a5ee808"/>
        <function-ref name="sendDone" scoped="" ref="0x10a5ee990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x10a5eebd8" loc="50:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="RadioCountToLedsAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x10a5eebd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10a5ed020"/>
        <function-ref name="payloadLength" scoped="" ref="0x10a5ed1a8"/>
        <function-ref name="getPayload" scoped="" ref="0x10a5ed330"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x10a5ed4b8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x10a5ed640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x10a5ed888" loc="51:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="RadioCountToLedsAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x10a5ed888"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x10a5edbd8"/>
        <function-ref name="source" scoped="" ref="0x10a5edd60"/>
        <function-ref name="address" scoped="" ref="0x10a5ec020"/>
        <function-ref name="destination" scoped="" ref="0x10a5ec1a8"/>
        <function-ref name="setSource" scoped="" ref="0x10a5ec330"/>
        <function-ref name="setDestination" scoped="" ref="0x10a5ec4b8"/>
        <function-ref name="type" scoped="" ref="0x10a5ec640"/>
        <function-ref name="setType" scoped="" ref="0x10a5ec7c8"/>
        <function-ref name="isForMe" scoped="" ref="0x10a5ec950"/>
        <function-ref name="setGroup" scoped="" ref="0x10a5ecad8"/>
        <function-ref name="localGroup" scoped="" ref="0x10a5ecc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x10a5eb020" loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="RadioCountToLedsAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x10a5eb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x10a5eb370"/>
        <function-ref name="noAck" scoped="" ref="0x10a5eb4f8"/>
        <function-ref name="wasAcked" scoped="" ref="0x10a5eb680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x10a5e2710" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="RadioCountToLedsAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x10a5e2710"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x10a5e2a60"/>
        <function-ref name="getPayload" scoped="" ref="0x10a5e2be8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x10a5e2d70"/>
        <function-ref name="cancel" scoped="" ref="0x10a5e1020"/>
        <function-ref name="sendDone" scoped="" ref="0x10a5e11a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x10a5e1450" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="RadioCountToLedsAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x10a5e1450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x10a5e17a0"/>
        <function-ref name="getPayload" scoped="" ref="0x10a5e1928"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x10a5e1ab0"/>
        <function-ref name="cancel" scoped="" ref="0x10a5e1c38"/>
        <function-ref name="sendDone" scoped="" ref="0x10a5e1dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x10a5df060" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="RadioCountToLedsAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x10a5df060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x10a5df3b0"/>
        <function-ref name="source" scoped="" ref="0x10a5df538"/>
        <function-ref name="address" scoped="" ref="0x10a5df6c0"/>
        <function-ref name="destination" scoped="" ref="0x10a5df848"/>
        <function-ref name="setSource" scoped="" ref="0x10a5df9d0"/>
        <function-ref name="setDestination" scoped="" ref="0x10a5dfb58"/>
        <function-ref name="type" scoped="" ref="0x10a5dfce0"/>
        <function-ref name="setType" scoped="" ref="0x10a5dfe68"/>
        <function-ref name="isForMe" scoped="" ref="0x10a5de020"/>
        <function-ref name="setGroup" scoped="" ref="0x10a5de1a8"/>
        <function-ref name="localGroup" scoped="" ref="0x10a5de330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x109e9f020" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x109e9f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x109099790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x109e9f370"/>
        <function-ref name="getPayload" scoped="" ref="0x109e9f4f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x109e9f680"/>
        <function-ref name="cancel" scoped="" ref="0x109e9f808"/>
        <function-ref name="sendDone" scoped="" ref="0x109e9f990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x109f04060" loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x109f04060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x1098d83b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x109f043d0"/>
        <function-ref name="getPayload" scoped="" ref="0x109f04558"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x109f046e0"/>
        <function-ref name="cancel" scoped="" ref="0x109f04868"/>
        <function-ref name="sendDone" scoped="" ref="0x109f049f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x109f052c8" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x109f052c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x109099790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x109f05638"/>
        <function-ref name="getPayload" scoped="" ref="0x109f057c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x109f05948"/>
        <function-ref name="cancel" scoped="" ref="0x109f05ad0"/>
        <function-ref name="sendDone" scoped="" ref="0x109f05c58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x109f02268" loc="50:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x109f02268"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x109f025b8"/>
        <function-ref name="payloadLength" scoped="" ref="0x109f02740"/>
        <function-ref name="getPayload" scoped="" ref="0x109f028c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x109f02a50"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x109f02bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x109f01020" loc="169:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="errorTask" scoped="" ref="0x109f01020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x109f01370"/>
        <function-ref name="runTask" scoped="" ref="0x109f014f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x109f017c0" loc="126:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CancelTask" scoped="" ref="0x109f017c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x109f01b10"/>
        <function-ref name="runTask" scoped="" ref="0x109f01c98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x109f04c38" loc="49:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x109f04c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x109f03020"/>
        <function-ref name="source" scoped="" ref="0x109f031a8"/>
        <function-ref name="address" scoped="" ref="0x109f03330"/>
        <function-ref name="destination" scoped="" ref="0x109f034b8"/>
        <function-ref name="setSource" scoped="" ref="0x109f03640"/>
        <function-ref name="setDestination" scoped="" ref="0x109f037c8"/>
        <function-ref name="type" scoped="" ref="0x109f03950"/>
        <function-ref name="setType" scoped="" ref="0x109f03ad8"/>
        <function-ref name="isForMe" scoped="" ref="0x109f03c60"/>
        <function-ref name="setGroup" scoped="" ref="0x109f03de8"/>
        <function-ref name="localGroup" scoped="" ref="0x109f02020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LplxPacket" ref="0x109ef7c00" loc="13:../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LplxPacket" scoped="" ref="0x109ef7c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="LplxPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setOppoRouting" scoped="" ref="0x109ef6020"/>
        <function-ref name="setPacketBulk" scoped="" ref="0x109ef61a8"/>
        <function-ref name="getPacketBulk" scoped="" ref="0x109ef6330"/>
        <function-ref name="setPacketCI" scoped="" ref="0x109ef64b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x109efc5b0" loc="7:../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x109efc5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x1098d83b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x109efc900"/>
        <function-ref name="getPayload" scoped="" ref="0x109efca88"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x109efcc10"/>
        <function-ref name="cancel" scoped="" ref="0x109efcd98"/>
        <function-ref name="sendDone" scoped="" ref="0x109efb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x109ef9348" loc="9:../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x109ef9348"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x1098d83b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x109ef9698"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x109ef9920" loc="11:../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x109ef9920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x109ef9c70"/>
        <function-ref name="payloadLength" scoped="" ref="0x109ef9df8"/>
        <function-ref name="getPayload" scoped="" ref="0x109ef8020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x109ef81a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x109ef8330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x109efb7a0" loc="8:../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x109efb7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x1098d83b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x109efbaf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x109ef67e0" loc="14:../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x109ef67e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x109ef6b30"/>
        <function-ref name="noAck" scoped="" ref="0x109ef6cb8"/>
        <function-ref name="wasAcked" scoped="" ref="0x109ef6e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x109eff918" loc="5:../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x109eff918"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x109effc68"/>
        <function-ref name="stop" scoped="" ref="0x109effdf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x109ef85d0" loc="12:../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x109ef85d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x109ef8920"/>
        <function-ref name="source" scoped="" ref="0x109ef8aa8"/>
        <function-ref name="address" scoped="" ref="0x109ef8c30"/>
        <function-ref name="destination" scoped="" ref="0x109ef8db8"/>
        <function-ref name="setSource" scoped="" ref="0x109ef7020"/>
        <function-ref name="setDestination" scoped="" ref="0x109ef71a8"/>
        <function-ref name="type" scoped="" ref="0x109ef7330"/>
        <function-ref name="setType" scoped="" ref="0x109ef74b8"/>
        <function-ref name="isForMe" scoped="" ref="0x109ef7640"/>
        <function-ref name="setGroup" scoped="" ref="0x109ef77c8"/>
        <function-ref name="localGroup" scoped="" ref="0x109ef7950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LplxPacket" ref="0x109ef22d0" loc="12:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LplxPacket" scoped="" ref="0x109ef22d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LplxPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setOppoRouting" scoped="" ref="0x109ef2620"/>
        <function-ref name="setPacketBulk" scoped="" ref="0x109ef27a8"/>
        <function-ref name="getPacketBulk" scoped="" ref="0x109ef2930"/>
        <function-ref name="setPacketCI" scoped="" ref="0x109ef2ab8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x109f252e0" loc="22:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x109f252e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x1098d83b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x109f25630"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x109f257b8"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x109f25940"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x109f25ac8"/>
        <function-ref name="setCca" scoped="" ref="0x109f25c50"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x109f25dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x109ef0430" loc="14:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x109ef0430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x109ef0780"/>
        <function-ref name="payloadLength" scoped="" ref="0x109ef0908"/>
        <function-ref name="getPayload" scoped="" ref="0x109ef0a90"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x109ef0c18"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x109ef0da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioControl" ref="0x109ef5b00" loc="11:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioControl" scoped="" ref="0x109ef5b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x109ef5e50"/>
        <function-ref name="stop" scoped="" ref="0x109ef2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x109f295b0" loc="19:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x109f295b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x1098d83b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x109f29900"/>
        <function-ref name="getPayload" scoped="" ref="0x109f29a88"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x109f29c10"/>
        <function-ref name="cancel" scoped="" ref="0x109f29d98"/>
        <function-ref name="sendDone" scoped="" ref="0x109f28020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OppoRouting" ref="0x109f2aab8" loc="17:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OppoRouting" scoped="" ref="0x109f2aab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="OppoRouting"/>
      </instance>
      <interface-functions>
        <function-ref name="setLocalMetric" scoped="" ref="0x109f2ae08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x109f26348" loc="21:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x109f26348"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x1098d83b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x109f26698"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x109f287a0" loc="20:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x109f287a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x1098d83b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x109f28af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x109f1c1c8" loc="23:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x109f1c1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x1098d83b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x109f1c518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x109f2a1a0" loc="15:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x109f2a1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x109f2a4f0"/>
        <function-ref name="noAck" scoped="" ref="0x109f2a678"/>
        <function-ref name="wasAcked" scoped="" ref="0x109f2a800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x109ef2d58" loc="13:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x109ef2d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x109ef10d8"/>
        <function-ref name="source" scoped="" ref="0x109ef1260"/>
        <function-ref name="address" scoped="" ref="0x109ef13e8"/>
        <function-ref name="destination" scoped="" ref="0x109ef1570"/>
        <function-ref name="setSource" scoped="" ref="0x109ef16f8"/>
        <function-ref name="setDestination" scoped="" ref="0x109ef1880"/>
        <function-ref name="type" scoped="" ref="0x109ef1a08"/>
        <function-ref name="setType" scoped="" ref="0x109ef1b90"/>
        <function-ref name="isForMe" scoped="" ref="0x109ef1d18"/>
        <function-ref name="setGroup" scoped="" ref="0x109ef0020"/>
        <function-ref name="localGroup" scoped="" ref="0x109ef01a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x109f119b8" loc="16:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x109f119b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x109f11d08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x109f13d10" loc="14:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x109f13d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x109f120a0"/>
        <function-ref name="getPayload" scoped="" ref="0x109f12228"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x109f123b0"/>
        <function-ref name="cancel" scoped="" ref="0x109f12538"/>
        <function-ref name="sendDone" scoped="" ref="0x109f126c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LplxPacket" ref="0x109f10660" loc="18:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LplxPacket" scoped="" ref="0x109f10660"/></type-interface>
      <instance>
        <interfacedef-ref qname="LplxPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setOppoRouting" scoped="" ref="0x109f109b0"/>
        <function-ref name="setPacketBulk" scoped="" ref="0x109f10b38"/>
        <function-ref name="getPacketBulk" scoped="" ref="0x109f10cc0"/>
        <function-ref name="setPacketCI" scoped="" ref="0x109f10e48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x109f14e50" loc="10:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x109f14e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x1098d83b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x109f131e8"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x109f13370"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x109f134f8"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x109f13680"/>
        <function-ref name="setCca" scoped="" ref="0x109f13808"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x109f13990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x109f14348" loc="9:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x109f14348"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x1098d83b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x109f14698"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x109f47740" loc="20:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x109f47740"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x109f47a90"/>
        <function-ref name="payloadLength" scoped="" ref="0x109f47c18"/>
        <function-ref name="getPayload" scoped="" ref="0x109f47da0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x109f46020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x109f461a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x109f189c0" loc="6:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x109f189c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x1098d83b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x109f18d10"/>
        <function-ref name="getPayload" scoped="" ref="0x109f17020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x109f171a8"/>
        <function-ref name="cancel" scoped="" ref="0x109f17330"/>
        <function-ref name="sendDone" scoped="" ref="0x109f174b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x109f15818" loc="8:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x109f15818"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x1098d83b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x109f15b68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x109f17c38" loc="7:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x109f17c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x1098d83b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x109f15020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BulkSend" ref="0x109f11020" loc="15:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BulkSend" scoped="" ref="0x109f11020"/></type-interface>
      <instance>
        <interfacedef-ref qname="BulkSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x109f11370"/>
        <function-ref name="cancel" scoped="" ref="0x109f114f8"/>
        <function-ref name="sendDone" scoped="" ref="0x109f11680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x109f46420" loc="21:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x109f46420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x109f46870"/>
        <function-ref name="led0Toggle" scoped="" ref="0x109f469f8"/>
        <function-ref name="led1On" scoped="" ref="0x109f46b80"/>
        <function-ref name="led1Toggle" scoped="" ref="0x109f46d08"/>
        <function-ref name="led2Toggle" scoped="" ref="0x109f45020"/>
        <function-ref name="get" scoped="" ref="0x109f451a8"/>
        <function-ref name="led1Off" scoped="" ref="0x109f45330"/>
        <function-ref name="led2Off" scoped="" ref="0x109f45950"/>
        <function-ref name="set" scoped="" ref="0x109f454b8"/>
        <function-ref name="led0On" scoped="" ref="0x109f45640"/>
        <function-ref name="led2On" scoped="" ref="0x109f457c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x109f48118" loc="19:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x109f48118"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x109f48468"/>
        <function-ref name="source" scoped="" ref="0x109f485f0"/>
        <function-ref name="address" scoped="" ref="0x109f48778"/>
        <function-ref name="destination" scoped="" ref="0x109f48900"/>
        <function-ref name="setSource" scoped="" ref="0x109f48a88"/>
        <function-ref name="setDestination" scoped="" ref="0x109f48c10"/>
        <function-ref name="type" scoped="" ref="0x109f48d98"/>
        <function-ref name="setType" scoped="" ref="0x109f47020"/>
        <function-ref name="isForMe" scoped="" ref="0x109f471a8"/>
        <function-ref name="setGroup" scoped="" ref="0x109f47330"/>
        <function-ref name="localGroup" scoped="" ref="0x109f474b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSnoop" ref="0x109f10060" loc="17:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSnoop" scoped="" ref="0x109f10060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x109f103b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x109f4b020" loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x109f4b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x109f4b370"/>
        <function-ref name="changed" scoped="" ref="0x109f4b4f8"/>
        <function-ref name="amGroup" scoped="" ref="0x109f4b680"/>
        <function-ref name="setAddress" scoped="" ref="0x109f4b808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioTimerUpdate" ref="0x109f6ac30" loc="8:../../tos/chips/cc2420/x-lpl/CC2420xLplC.nc">
      <component-ref qname="CC2420xLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioTimerUpdate" scoped="" ref="0x109f6ac30"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioTimerUpdate"/>
      </instance>
      <interface-functions>
        <function-ref name="counterUpdate" scoped="" ref="0x109f6c020"/>
        <function-ref name="triggerUpdate" scoped="" ref="0x109f6c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioControl" ref="0x109f702b8" loc="2:../../tos/chips/cc2420/x-lpl/CC2420xLplC.nc">
      <component-ref qname="CC2420xLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioControl" scoped="" ref="0x109f702b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x109f70608"/>
        <function-ref name="stop" scoped="" ref="0x109f70790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x109f70a48" loc="3:../../tos/chips/cc2420/x-lpl/CC2420xLplC.nc">
      <component-ref qname="CC2420xLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x109f70a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x109f70d98"/>
        <function-ref name="getPayload" scoped="" ref="0x109f6f020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x109f6f1a8"/>
        <function-ref name="cancel" scoped="" ref="0x109f6f330"/>
        <function-ref name="sendDone" scoped="" ref="0x109f6f4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x109f6e7a0" loc="6:../../tos/chips/cc2420/x-lpl/CC2420xLplC.nc">
      <component-ref qname="CC2420xLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x109f6e7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x109f6eaf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OppoRouting" ref="0x109f6ede8" loc="7:../../tos/chips/cc2420/x-lpl/CC2420xLplC.nc">
      <component-ref qname="CC2420xLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OppoRouting" scoped="" ref="0x109f6ede8"/></type-interface>
      <instance>
        <interfacedef-ref qname="OppoRouting"/>
      </instance>
      <interface-functions>
        <function-ref name="setLocalMetric" scoped="" ref="0x109f6d170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x109f6e108" loc="5:../../tos/chips/cc2420/x-lpl/CC2420xLplC.nc">
      <component-ref qname="CC2420xLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x109f6e108"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x109f6e458"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BulkSend" ref="0x109f6f798" loc="4:../../tos/chips/cc2420/x-lpl/CC2420xLplC.nc">
      <component-ref qname="CC2420xLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BulkSend" scoped="" ref="0x109f6f798"/></type-interface>
      <instance>
        <interfacedef-ref qname="BulkSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x109f6fae8"/>
        <function-ref name="cancel" scoped="" ref="0x109f6fc70"/>
        <function-ref name="sendDone" scoped="" ref="0x109f6fdf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x109fa0500" loc="16:../../tos/chips/cc2420/x-lpl/CC2420xLplP.nc">
      <component-ref qname="CC2420xLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x109fa0500"/></type-interface>
      <instance>
        <interfacedef-ref qname="LplSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x109fa0850"/>
        <function-ref name="sendDone" scoped="" ref="0x109fa09d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x109fa0d70" loc="17:../../tos/chips/cc2420/x-lpl/CC2420xLplP.nc">
      <component-ref qname="CC2420xLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x109fa0d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="LplReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="txDetect" scoped="" ref="0x109f9f0f0"/>
        <function-ref name="rxInit" scoped="" ref="0x109f9f278"/>
        <function-ref name="receive" scoped="" ref="0x109f9f400"/>
        <function-ref name="rxOn" scoped="" ref="0x109f9f588"/>
        <function-ref name="rxBuffSet" scoped="" ref="0x109f9f710"/>
        <function-ref name="rxEnable" scoped="" ref="0x109f9f898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioTimerUpdate" ref="0x109fa1c80" loc="14:../../tos/chips/cc2420/x-lpl/CC2420xLplP.nc">
      <component-ref qname="CC2420xLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioTimerUpdate" scoped="" ref="0x109fa1c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioTimerUpdate"/>
      </instance>
      <interface-functions>
        <function-ref name="counterUpdate" scoped="" ref="0x109fa0020"/>
        <function-ref name="triggerUpdate" scoped="" ref="0x109fa01a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioControl" ref="0x109fa3720" loc="10:../../tos/chips/cc2420/x-lpl/CC2420xLplP.nc">
      <component-ref qname="CC2420xLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioControl" scoped="" ref="0x109fa3720"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x109fa3a70"/>
        <function-ref name="stop" scoped="" ref="0x109fa3bf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x109fa2020" loc="11:../../tos/chips/cc2420/x-lpl/CC2420xLplP.nc">
      <component-ref qname="CC2420xLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x109fa2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x109fa2370"/>
        <function-ref name="getPayload" scoped="" ref="0x109fa24f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x109fa2680"/>
        <function-ref name="cancel" scoped="" ref="0x109fa2808"/>
        <function-ref name="sendDone" scoped="" ref="0x109fa2990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x109f96ae8" loc="20:../../tos/chips/cc2420/x-lpl/CC2420xLplP.nc">
      <component-ref qname="CC2420xLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x109f96ae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x109f96e38"/>
        <function-ref name="rand32" scoped="" ref="0x109f98020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x109fa3020" loc="9:../../tos/chips/cc2420/x-lpl/CC2420xLplP.nc">
      <component-ref qname="CC2420xLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x109fa3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x109fa3370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x109fa1600" loc="13:../../tos/chips/cc2420/x-lpl/CC2420xLplP.nc">
      <component-ref qname="CC2420xLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x109fa1600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x109fa1950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BulkSend" ref="0x109fa2c70" loc="12:../../tos/chips/cc2420/x-lpl/CC2420xLplP.nc">
      <component-ref qname="CC2420xLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BulkSend" scoped="" ref="0x109fa2c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="BulkSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x109fa1020"/>
        <function-ref name="cancel" scoped="" ref="0x109fa11a8"/>
        <function-ref name="sendDone" scoped="" ref="0x109fa1330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SleepTimer" ref="0x109f9e658" loc="19:../../tos/chips/cc2420/x-lpl/CC2420xLplP.nc">
      <component-ref qname="CC2420xLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SleepTimer" scoped="" ref="0x109f9e658"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x109e42a18"/>
            <typename><typedef-ref name="TMilli" ref="0x109e42d70"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x109f9a8f0"/>
        <function-ref name="fired" scoped="" ref="0x109f9c020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x109f9cd10"/>
        <function-ref name="isOneShot" scoped="" ref="0x109f9c8c0"/>
        <function-ref name="getdt" scoped="" ref="0x109f991c0"/>
        <function-ref name="gett0" scoped="" ref="0x109f9ad40"/>
        <function-ref name="isRunning" scoped="" ref="0x109f9c470"/>
        <function-ref name="startPeriodic" scoped="" ref="0x109f9d1e8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x109f9a320"/>
        <function-ref name="startOneShot" scoped="" ref="0x109f9d688"/>
        <function-ref name="stop" scoped="" ref="0x109f9db28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x109f982d8" loc="22:../../tos/chips/cc2420/x-lpl/CC2420xLplP.nc">
      <component-ref qname="CC2420xLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x109f982d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x109f98628"/>
        <function-ref name="led0Toggle" scoped="" ref="0x109f987b0"/>
        <function-ref name="led1On" scoped="" ref="0x109f98938"/>
        <function-ref name="led1Toggle" scoped="" ref="0x109f98ac0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x109f98c48"/>
        <function-ref name="get" scoped="" ref="0x109f98dd0"/>
        <function-ref name="led1Off" scoped="" ref="0x109f97020"/>
        <function-ref name="led2Off" scoped="" ref="0x109f97640"/>
        <function-ref name="set" scoped="" ref="0x109f971a8"/>
        <function-ref name="led0On" scoped="" ref="0x109f97330"/>
        <function-ref name="led2On" scoped="" ref="0x109f974b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LplTime" ref="0x109f9fb68" loc="18:../../tos/chips/cc2420/x-lpl/CC2420xLplP.nc">
      <component-ref qname="CC2420xLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LplTime" scoped="" ref="0x109f9fb68"/></type-interface>
      <instance>
        <interfacedef-ref qname="LplTime"/>
      </instance>
      <interface-functions>
        <function-ref name="timeRadio" scoped="" ref="0x109f9e020"/>
        <function-ref name="timeCompensated" scoped="" ref="0x109f9e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x109fc9e80" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="CC2420xLplC.SleepTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x109fc9e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x109e42a18"/>
            <typename><typedef-ref name="TMilli" ref="0x109e42d70"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x10a172238"/>
        <function-ref name="fired" scoped="" ref="0x10a175910"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x10a174648"/>
        <function-ref name="isOneShot" scoped="" ref="0x10a1741f8"/>
        <function-ref name="getdt" scoped="" ref="0x10a172ad8"/>
        <function-ref name="gett0" scoped="" ref="0x10a172688"/>
        <function-ref name="isRunning" scoped="" ref="0x10a175d60"/>
        <function-ref name="startPeriodic" scoped="" ref="0x10a1769f0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x10a174c18"/>
        <function-ref name="startOneShot" scoped="" ref="0x10a175020"/>
        <function-ref name="stop" scoped="" ref="0x10a1754c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x109ffd1c8" loc="49:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x109ffd1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x109e42a18"/>
            <typename><typedef-ref name="TMilli" ref="0x109e42d70"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x109099790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x109ffa5f0"/>
        <function-ref name="fired" scoped="" ref="0x109ffcaf0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x109ffb8c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x109ffb470"/>
        <function-ref name="getdt" scoped="" ref="0x109ff9020"/>
        <function-ref name="gett0" scoped="" ref="0x109ffaa40"/>
        <function-ref name="isRunning" scoped="" ref="0x109ffb020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x109ffdd10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x109ffa020"/>
        <function-ref name="startOneShot" scoped="" ref="0x109ffc200"/>
        <function-ref name="stop" scoped="" ref="0x109ffc6a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x109ff5b18" loc="35:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x109ff5b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x109e42a18"/>
            <typename><typedef-ref name="TMilli" ref="0x109e42d70"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x109099790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x109ff1d98"/>
        <function-ref name="fired" scoped="" ref="0x109ff34d8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x109ff11f8"/>
        <function-ref name="isOneShot" scoped="" ref="0x109ff3d78"/>
        <function-ref name="getdt" scoped="" ref="0x109ff0688"/>
        <function-ref name="gett0" scoped="" ref="0x109ff0238"/>
        <function-ref name="isRunning" scoped="" ref="0x109ff3928"/>
        <function-ref name="startPeriodic" scoped="" ref="0x109ff46f0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x109ff17c8"/>
        <function-ref name="startOneShot" scoped="" ref="0x109ff4b90"/>
        <function-ref name="stop" scoped="" ref="0x109ff3088"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x109ff0c48" loc="36:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x109ff0c48"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x109e42a18"/>
            <typename><typedef-ref name="TMilli" ref="0x109e42d70"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x109fee820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x109ff9dc8" loc="34:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x109ff9dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x109ff5170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x10a103990" loc="33:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x10a103990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x109e42a18"/>
            <typename><typedef-ref name="TMilli" ref="0x109e42d70"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10909a020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x10a100020"/>
        <function-ref name="fired" scoped="" ref="0x10a1010c0"/>
        <function-ref name="startAt" scoped="" ref="0x10a1019d0"/>
        <function-ref name="isRunning" scoped="" ref="0x10a101548"/>
        <function-ref name="getAlarm" scoped="" ref="0x10a1004a8"/>
        <function-ref name="start" scoped="" ref="0x10a102730"/>
        <function-ref name="stop" scoped="" ref="0x10a102c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x10a1031a8" loc="32:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x10a1031a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10a1034f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x10a63b848" loc="33:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x10a63b848"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x109e411d8"/>
            <typename><typedef-ref name="T32khz" ref="0x109e41530"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x109099b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x10a637020"/>
        <function-ref name="fired" scoped="" ref="0x10a638020"/>
        <function-ref name="startAt" scoped="" ref="0x10a638930"/>
        <function-ref name="isRunning" scoped="" ref="0x10a6384a8"/>
        <function-ref name="getAlarm" scoped="" ref="0x10a6374a8"/>
        <function-ref name="start" scoped="" ref="0x10a6395e0"/>
        <function-ref name="stop" scoped="" ref="0x10a639ab8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x10a63b060" loc="32:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x10a63b060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10a63b3b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x10a679740" loc="30:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x10a679740"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10a679a90"/>
        <function-ref name="setEvent" scoped="" ref="0x10a679c18"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x10a679da0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x10a678020"/>
        <function-ref name="fired" scoped="" ref="0x10a6781a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x10a67de60" loc="28:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x10a67de60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10a67b1e8"/>
        <function-ref name="setClockSource" scoped="" ref="0x10a67b370"/>
        <function-ref name="enableEvents" scoped="" ref="0x10a67b4f8"/>
        <function-ref name="get" scoped="" ref="0x10a67b680"/>
        <function-ref name="disableEvents" scoped="" ref="0x10a67b808"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10a67b990"/>
        <function-ref name="getMode" scoped="" ref="0x10a67bb18"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10a67bca0"/>
        <function-ref name="overflow" scoped="" ref="0x10a67be28"/>
        <function-ref name="setMode" scoped="" ref="0x10a67a020"/>
        <function-ref name="setInputDivider" scoped="" ref="0x10a67a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x10a67a430" loc="29:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x10a67a430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x10a67a780"/>
        <function-ref name="getControl" scoped="" ref="0x10a67a908"/>
        <function-ref name="enableEvents" scoped="" ref="0x10a67aa90"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x10a67ac18"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x10a67ada0"/>
        <function-ref name="disableEvents" scoped="" ref="0x10a679020"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x10a6791a8"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x10a679330"/>
        <function-ref name="setControl" scoped="" ref="0x10a6794b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x10a00b9a8" loc="10:../../tos/chips/msp430/timer/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x10a00b9a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x109099790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10a00bcf8"/>
        <function-ref name="setEvent" scoped="" ref="0x10a00be80"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x10a00a030"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x10a00a1b8"/>
        <function-ref name="fired" scoped="" ref="0x10a00a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x10a00f5b0" loc="8:../../tos/chips/msp430/timer/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x10a00f5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x109099790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10a00f900"/>
        <function-ref name="setClockSource" scoped="" ref="0x10a00fa88"/>
        <function-ref name="enableEvents" scoped="" ref="0x10a00fc10"/>
        <function-ref name="get" scoped="" ref="0x10a00fd98"/>
        <function-ref name="disableEvents" scoped="" ref="0x10a00e020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10a00e1a8"/>
        <function-ref name="getMode" scoped="" ref="0x10a00e330"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10a00e4b8"/>
        <function-ref name="overflow" scoped="" ref="0x10a00e640"/>
        <function-ref name="setMode" scoped="" ref="0x10a00e7c8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x10a00e950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x10a00c1c8" loc="9:../../tos/chips/msp430/timer/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x10a00c1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x109099790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x10a00c518"/>
        <function-ref name="getControl" scoped="" ref="0x10a00c6a0"/>
        <function-ref name="enableEvents" scoped="" ref="0x10a00c828"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x10a00c9b0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x10a00cb38"/>
        <function-ref name="disableEvents" scoped="" ref="0x10a00ccc0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x10a00ce48"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x10a00b020"/>
        <function-ref name="setControl" scoped="" ref="0x10a00b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x10a66f020" loc="38:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x10a66f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10a66f370"/>
        <function-ref name="setEvent" scoped="" ref="0x10a66f4f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x10a66f680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x10a66f808"/>
        <function-ref name="fired" scoped="" ref="0x10a66f990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x10a6725a8" loc="36:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x10a6725a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10a6728f8"/>
        <function-ref name="setClockSource" scoped="" ref="0x10a672a80"/>
        <function-ref name="enableEvents" scoped="" ref="0x10a672c08"/>
        <function-ref name="get" scoped="" ref="0x10a672d90"/>
        <function-ref name="disableEvents" scoped="" ref="0x10a671020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10a6711a8"/>
        <function-ref name="getMode" scoped="" ref="0x10a671330"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10a6714b8"/>
        <function-ref name="overflow" scoped="" ref="0x10a671640"/>
        <function-ref name="setMode" scoped="" ref="0x10a6717c8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x10a671950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x10a676648" loc="35:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x10a676648"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x109e411d8"/>
            <typename><typedef-ref name="T32khz" ref="0x109e41530"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x109099b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x10a673cc0"/>
        <function-ref name="fired" scoped="" ref="0x10a675d50"/>
        <function-ref name="startAt" scoped="" ref="0x10a6736b8"/>
        <function-ref name="isRunning" scoped="" ref="0x10a673230"/>
        <function-ref name="getAlarm" scoped="" ref="0x10a672190"/>
        <function-ref name="start" scoped="" ref="0x10a6753f0"/>
        <function-ref name="stop" scoped="" ref="0x10a6758c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x10a677d90" loc="34:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x10a677d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10a676170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x10a671bd8" loc="37:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x10a671bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x10a670020"/>
        <function-ref name="getControl" scoped="" ref="0x10a6701a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x10a670330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x10a6704b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x10a670640"/>
        <function-ref name="disableEvents" scoped="" ref="0x10a6707c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x10a670950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x10a670ad8"/>
        <function-ref name="setControl" scoped="" ref="0x10a670c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x10a66fc18" loc="39:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x10a66fc18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x10a66e020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x10a66e1a8"/>
        <function-ref name="led1On" scoped="" ref="0x10a66e330"/>
        <function-ref name="led1Toggle" scoped="" ref="0x10a66e4b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x10a66e640"/>
        <function-ref name="get" scoped="" ref="0x10a66e7c8"/>
        <function-ref name="led1Off" scoped="" ref="0x10a66e950"/>
        <function-ref name="led0On" scoped="" ref="0x10a66d020"/>
        <function-ref name="set" scoped="" ref="0x10a66ec60"/>
        <function-ref name="led2On" scoped="" ref="0x10a66ead8"/>
        <function-ref name="led2Off" scoped="" ref="0x10a66ede8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x10a07ed70" loc="32:../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x10a07ed70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x109e42a18"/>
            <typename><typedef-ref name="TMilli" ref="0x109e42d70"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10909a020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x10a042af8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10a07d4a8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10a07d020"/>
        <function-ref name="overflow" scoped="" ref="0x10a07d930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Counter32khz" ref="0x10a07cb88" loc="32:../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <component-ref qname="Msp430Counter32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Counter32khz" scoped="" ref="0x10a07cb88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x109e411d8"/>
            <typename><typedef-ref name="T32khz" ref="0x109e41530"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x109099b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x10a079930"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10a078270"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10a079db8"/>
        <function-ref name="overflow" scoped="" ref="0x10a0786f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x10a067020" loc="34:../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x10a067020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10a067370"/>
        <function-ref name="setClockSource" scoped="" ref="0x10a0674f8"/>
        <function-ref name="enableEvents" scoped="" ref="0x10a067680"/>
        <function-ref name="get" scoped="" ref="0x10a067808"/>
        <function-ref name="disableEvents" scoped="" ref="0x10a067990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10a067b18"/>
        <function-ref name="getMode" scoped="" ref="0x10a067ca0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10a067e28"/>
        <function-ref name="overflow" scoped="" ref="0x10a066020"/>
        <function-ref name="setMode" scoped="" ref="0x10a0661a8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x10a066330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x10a074020" loc="33:../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x10a074020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x109e411d8"/>
            <typename><typedef-ref name="T32khz" ref="0x109e41530"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x109099b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x10a074d70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10a0686b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10a068230"/>
        <function-ref name="overflow" scoped="" ref="0x10a068b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioTimerUpdate" ref="0x10a0bc020" loc="65:../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioTimerUpdate" scoped="" ref="0x10a0bc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioTimerUpdate"/>
      </instance>
      <interface-functions>
        <function-ref name="counterUpdate" scoped="" ref="0x10a0bc370"/>
        <function-ref name="triggerUpdate" scoped="" ref="0x10a0bc4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x10a0bf020" loc="64:../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x10a0bf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x109e411d8"/>
            <typename><typedef-ref name="T32khz" ref="0x109e41530"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x109099b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x10a0bfd70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10a0bd6b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10a0bd230"/>
        <function-ref name="overflow" scoped="" ref="0x10a0bdb40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x10a062d48" loc="63:../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x10a062d48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x109e42a18"/>
            <typename><typedef-ref name="TMilli" ref="0x109e42d70"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10909a020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x10a0c1ac0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10a0c04a8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10a0c0020"/>
        <function-ref name="overflow" scoped="" ref="0x10a0c0930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x10a635830" loc="61:../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x10a635830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x109e42a18"/>
            <typename><typedef-ref name="TMilli" ref="0x109e42d70"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10909a020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x10a689020"/>
        <function-ref name="fired" scoped="" ref="0x10a68b020"/>
        <function-ref name="startAt" scoped="" ref="0x10a68b930"/>
        <function-ref name="isRunning" scoped="" ref="0x10a68b4a8"/>
        <function-ref name="getAlarm" scoped="" ref="0x10a6894a8"/>
        <function-ref name="start" scoped="" ref="0x10a68c5e0"/>
        <function-ref name="stop" scoped="" ref="0x10a68cab8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x10a687ce8" loc="73:../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x10a687ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x109e411d8"/>
            <typename><typedef-ref name="T32khz" ref="0x109e41530"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x109099b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x10a683410"/>
        <function-ref name="fired" scoped="" ref="0x10a6844a8"/>
        <function-ref name="startAt" scoped="" ref="0x10a684db8"/>
        <function-ref name="isRunning" scoped="" ref="0x10a684930"/>
        <function-ref name="getAlarm" scoped="" ref="0x10a683898"/>
        <function-ref name="start" scoped="" ref="0x10a686ac0"/>
        <function-ref name="stop" scoped="" ref="0x10a684020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x10a689ad0" loc="68:../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x10a689ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x109e42a18"/>
            <typename><typedef-ref name="TMilli" ref="0x109e42d70"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10909a020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x10a688860"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10a6871f8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10a688ce8"/>
        <function-ref name="overflow" scoped="" ref="0x10a687680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x10a683cb0" loc="74:../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x10a683cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x10a6820a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x10a682228"/>
        <function-ref name="led1On" scoped="" ref="0x10a6823b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x10a682538"/>
        <function-ref name="led2Toggle" scoped="" ref="0x10a6826c0"/>
        <function-ref name="get" scoped="" ref="0x10a682848"/>
        <function-ref name="led1Off" scoped="" ref="0x10a6829d0"/>
        <function-ref name="led0On" scoped="" ref="0x10a681020"/>
        <function-ref name="set" scoped="" ref="0x10a682ce0"/>
        <function-ref name="led2On" scoped="" ref="0x10a682b58"/>
        <function-ref name="led2Off" scoped="" ref="0x10a682e68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x10a113cf0" loc="76:../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="fired" scoped="" ref="0x10a113cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x10a1120a0"/>
        <function-ref name="runTask" scoped="" ref="0x10a112228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x10a117d70" loc="49:../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x10a117d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x109e42a18"/>
            <typename><typedef-ref name="TMilli" ref="0x109e42d70"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10909a020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x10a113410"/>
        <function-ref name="fired" scoped="" ref="0x10a1144a8"/>
        <function-ref name="startAt" scoped="" ref="0x10a114db8"/>
        <function-ref name="isRunning" scoped="" ref="0x10a114930"/>
        <function-ref name="getAlarm" scoped="" ref="0x10a113898"/>
        <function-ref name="start" scoped="" ref="0x10a116af8"/>
        <function-ref name="stop" scoped="" ref="0x10a114020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x10a0fcc38" loc="48:../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x10a0fcc38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x109e42a18"/>
            <typename><typedef-ref name="TMilli" ref="0x109e42d70"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x10a118e78"/>
        <function-ref name="fired" scoped="" ref="0x10a1195a8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x10a1182d8"/>
        <function-ref name="isOneShot" scoped="" ref="0x10a119e48"/>
        <function-ref name="getdt" scoped="" ref="0x10a117748"/>
        <function-ref name="gett0" scoped="" ref="0x10a1172f8"/>
        <function-ref name="isRunning" scoped="" ref="0x10a1199f8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x10a11b7e8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x10a1188a8"/>
        <function-ref name="startOneShot" scoped="" ref="0x10a11bc88"/>
        <function-ref name="stop" scoped="" ref="0x10a119158"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x10a18cbd8" loc="72:../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="updateFromTimer" scoped="" ref="0x10a18cbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x10a18a020"/>
        <function-ref name="runTask" scoped="" ref="0x10a18a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x10a14d208" loc="49:../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x10a14d208"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x109e42a18"/>
            <typename><typedef-ref name="TMilli" ref="0x109e42d70"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x10a1495f0"/>
        <function-ref name="fired" scoped="" ref="0x10a14bb28"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x10a14a8c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x10a14a470"/>
        <function-ref name="getdt" scoped="" ref="0x10a18c020"/>
        <function-ref name="gett0" scoped="" ref="0x10a149a40"/>
        <function-ref name="isRunning" scoped="" ref="0x10a14a020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x10a14dd50"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x10a149020"/>
        <function-ref name="startOneShot" scoped="" ref="0x10a14b238"/>
        <function-ref name="stop" scoped="" ref="0x10a14b6d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioTimerUpdate" ref="0x10a18c438" loc="50:../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioTimerUpdate" scoped="" ref="0x10a18c438"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioTimerUpdate"/>
      </instance>
      <interface-functions>
        <function-ref name="counterUpdate" scoped="" ref="0x10a18c788"/>
        <function-ref name="triggerUpdate" scoped="" ref="0x10a18c910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x10a153020" loc="48:../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x10a153020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x109e42a18"/>
            <typename><typedef-ref name="TMilli" ref="0x109e42d70"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x109099790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x10a14e358"/>
        <function-ref name="fired" scoped="" ref="0x10a1519b8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x10a150748"/>
        <function-ref name="isOneShot" scoped="" ref="0x10a1502d8"/>
        <function-ref name="getdt" scoped="" ref="0x10a14ec38"/>
        <function-ref name="gett0" scoped="" ref="0x10a14e7c8"/>
        <function-ref name="isRunning" scoped="" ref="0x10a151e28"/>
        <function-ref name="startPeriodic" scoped="" ref="0x10a153b88"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x10a150d38"/>
        <function-ref name="startOneShot" scoped="" ref="0x10a151088"/>
        <function-ref name="stop" scoped="" ref="0x10a151548"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x10a186440" loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x10a186440"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x109e42a18"/>
            <typename><typedef-ref name="TMilli" ref="0x109e42d70"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x10a17d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x10a17d648" loc="49:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x10a17d648"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x109e42a18"/>
            <typename><typedef-ref name="TMilli" ref="0x109e42d70"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10909a020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x10a17c3f0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10a17cd00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10a17c878"/>
        <function-ref name="overflow" scoped="" ref="0x10a17b1f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x10a1af208" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x10a1af208"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x10a1af558"/>
        <function-ref name="rand32" scoped="" ref="0x10a1af6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x10a16d1a0" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x10a16d1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x109099b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10a16dce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x10a1703e8" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x10a1703e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10a170738"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x10a1aa080" loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x10a1aa080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x10a1aa3d0"/>
        <function-ref name="rand32" scoped="" ref="0x10a1aa558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x10a1ab020" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x10a1ab020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x109099b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10a1abb68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x10a1ac6a0" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x10a1ac6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10a1ac9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LplxPacket" ref="0x10a19b918" loc="4:../../tos/chips/cc2420/x-packet/CC2420xPacketP.nc">
      <component-ref qname="CC2420xPacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LplxPacket" scoped="" ref="0x10a19b918"/></type-interface>
      <instance>
        <interfacedef-ref qname="LplxPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setOppoRouting" scoped="" ref="0x10a19bc68"/>
        <function-ref name="setPacketBulk" scoped="" ref="0x10a19bdf0"/>
        <function-ref name="getPacketBulk" scoped="" ref="0x10a198020"/>
        <function-ref name="setPacketCI" scoped="" ref="0x10a1981a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x10a197a90" loc="6:../../tos/chips/cc2420/x-packet/CC2420xPacketP.nc">
      <component-ref qname="CC2420xPacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x10a197a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10a197de0"/>
        <function-ref name="payloadLength" scoped="" ref="0x10a196020"/>
        <function-ref name="getPayload" scoped="" ref="0x10a1961a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x10a196330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x10a1964b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x10a198488" loc="5:../../tos/chips/cc2420/x-packet/CC2420xPacketP.nc">
      <component-ref qname="CC2420xPacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x10a198488"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x10a1987d8"/>
        <function-ref name="source" scoped="" ref="0x10a198960"/>
        <function-ref name="address" scoped="" ref="0x10a198ae8"/>
        <function-ref name="destination" scoped="" ref="0x10a198c70"/>
        <function-ref name="setSource" scoped="" ref="0x10a198df8"/>
        <function-ref name="setDestination" scoped="" ref="0x10a197020"/>
        <function-ref name="type" scoped="" ref="0x10a1971a8"/>
        <function-ref name="setType" scoped="" ref="0x10a197330"/>
        <function-ref name="isForMe" scoped="" ref="0x10a1974b8"/>
        <function-ref name="setGroup" scoped="" ref="0x10a197640"/>
        <function-ref name="localGroup" scoped="" ref="0x10a1977c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x10a196890" loc="7:../../tos/chips/cc2420/x-packet/CC2420xPacketP.nc">
      <component-ref qname="CC2420xPacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x10a196890"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x10a196be0"/>
        <function-ref name="noAck" scoped="" ref="0x10a196d68"/>
        <function-ref name="wasAcked" scoped="" ref="0x10a195020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x10a204760" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="RadioCountToLedsAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x10a204760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10a204ab0"/>
        <function-ref name="payloadLength" scoped="" ref="0x10a204c38"/>
        <function-ref name="getPayload" scoped="" ref="0x10a204dc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x10a203020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x10a2031a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x10a2041c8" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="RadioCountToLedsAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x10a2041c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x10a204518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x10a2033f0" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="RadioCountToLedsAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x10a2033f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x10a203740"/>
        <function-ref name="source" scoped="" ref="0x10a2038c8"/>
        <function-ref name="address" scoped="" ref="0x10a203a50"/>
        <function-ref name="destination" scoped="" ref="0x10a203bd8"/>
        <function-ref name="setSource" scoped="" ref="0x10a203d60"/>
        <function-ref name="setDestination" scoped="" ref="0x10a202020"/>
        <function-ref name="type" scoped="" ref="0x10a2021a8"/>
        <function-ref name="setType" scoped="" ref="0x10a202330"/>
        <function-ref name="isForMe" scoped="" ref="0x10a2024b8"/>
        <function-ref name="setGroup" scoped="" ref="0x10a202640"/>
        <function-ref name="localGroup" scoped="" ref="0x10a2027c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x10a2001c8" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="RadioCountToLedsAppC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x10a2001c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x109e42a18"/>
            <typename><typedef-ref name="TMilli" ref="0x109e42d70"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x10a1fc5f0"/>
        <function-ref name="fired" scoped="" ref="0x10a1ffaf0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x10a1fe8c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x10a1fe470"/>
        <function-ref name="getdt" scoped="" ref="0x10a1fb020"/>
        <function-ref name="gett0" scoped="" ref="0x10a1fca40"/>
        <function-ref name="isRunning" scoped="" ref="0x10a1fe020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x10a200d10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x10a1fc020"/>
        <function-ref name="startOneShot" scoped="" ref="0x10a1ff200"/>
        <function-ref name="stop" scoped="" ref="0x10a1ff6a0"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Init.nc">
      <documentation loc="34:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x1097931d8" loc="62:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Init.nc">
        <documentation loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x109317780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Boot.nc">
      <documentation loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x10977be08" loc="60:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Boot.nc">
        <documentation loc="51:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430ClockInit" loc="27:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
      <documentation loc="22:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="defaultInitTimerB" ref="0x1097bf020" loc="37:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerB" ref="0x1097c23e0" loc="32:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitTimerA" ref="0x1097c1920" loc="36:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerA" ref="0x1097c3d20" loc="31:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultSetupDcoCalibrate" ref="0x1097c2af0" loc="34:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="setupDcoCalibrate" ref="0x1097c3020" loc="29:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initClocks" ref="0x1097c36a0" loc="30:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitClocks" ref="0x1097c1258" loc="35:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x10946db08" loc="62:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x1093ccae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerControl" loc="29:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
      <documentation loc="22:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="setControlAsCapture" ref="0x10981dae0" loc="44:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <documentation loc="38:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
          <short> &#10; Sets the timer in capture mode.</short>
          <long> &#10; Sets the timer in capture mode.&#10; @param cm configures the capture to occur on none, rising, falling or rising_and_falling edges&#10; Msp430Timer.h has convenience definitions:&#10; MSP430TIMER_CM_NONE, MSP430TIMER_CM_RISING, MSP430TIMER_CM_FALLING, MSP430TIMER_CM_BOTH&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x109099790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x10981d870" loc="44:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x109099790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControl" ref="0x10981f110" loc="31:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x1097b8978"/>
            <typename><typedef-ref name="msp430_compare_control_t" ref="0x1097b7438"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x10981b328" loc="46:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="areEventsEnabled" ref="0x10981a178" loc="48:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1093131d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlAsCompare" ref="0x10981d178" loc="36:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x10981ba00" loc="47:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x10981f848" loc="32:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1093131d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearPendingInterrupt" ref="0x10981e020" loc="33:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x10981e9f0" loc="35:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x1097b8978"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x1097b7438"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x10981e780" loc="35:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x1097b8978"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x1097b7438"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Capture" loc="28:../../tos/chips/msp430/timer/Msp430Capture.nc">
      <documentation loc="22:../../tos/chips/msp430/timer/Msp430Capture.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x10982f328" loc="33:../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="30:../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Reads the value of the last capture event in TxCCRx&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x109099b20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSynchronous" ref="0x10982c6e8" loc="68:../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="59:../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set whether the capture should occur synchronously or asynchronously.</short>
          <long>&#10; Set whether the capture should occur synchronously or asynchronously.&#10; TinyOS default is synchronous captures.&#10; WARNING: if the capture signal is asynchronous to the timer clock,&#10;          it could case a race condition (see Timer documentation&#10;          in MSP430F1xx user guide)&#10; @param synchronous TRUE to synchronize the timer capture with the&#10;        next timer clock instead of occurring asynchronously.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x1093131d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="synchronous" ref="0x10982c478" loc="68:../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x1093131d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x10982b290" loc="75:../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="70:../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Signalled when an event is captured.</short>
          <long>&#10; Signalled when an event is captured.&#10;&#10; @param time The time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x109099b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x10982b020" loc="75:../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x109099b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x10982ecf8" loc="57:../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="54:../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Clear the capture overflow flag for when multiple captures occur&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x10982e568" loc="52:../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="47:../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Determine if a capture overflow is pending.</short>
          <long>&#10; Determine if a capture overflow is pending.&#10;&#10; @return TRUE if the capture register has overflowed&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1093131d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEdge" ref="0x10982fc50" loc="45:../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="35:../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set the edge that the capture should occur&#10;&#10; </short>
          <long>&#10; Set the edge that the capture should occur&#10;&#10; @param cm Capture Mode for edge capture.&#10; enums exist for:&#10;   MSP430TIMER_CM_NONE is no capture.&#10;   MSP430TIMER_CM_RISING is rising edge capture.&#10;   MSP430TIMER_CM_FALLING is a falling edge capture.&#10;   MSP430TIMER_CM_BOTH captures on both rising and falling edges.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x109099790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x10982f9e0" loc="45:../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x109099790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Compare" loc="27:../../tos/chips/msp430/timer/Msp430Compare.nc">
      <documentation loc="22:../../tos/chips/msp430/timer/Msp430Compare.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x1098189f8" loc="29:../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x109099b20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEvent" ref="0x109815338" loc="30:../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x109099b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x1098150c8" loc="30:../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x109099b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromPrev" ref="0x109815c98" loc="31:../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x109099b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x109815a28" loc="31:../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x109099b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromNow" ref="0x109813648" loc="32:../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x109099b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x1098133d8" loc="32:../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x109099b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x109813cd0" loc="34:../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Timer" loc="32:../../tos/chips/msp430/timer/Msp430Timer.nc">
      <documentation loc="22:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x109805ae8" loc="41:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x109803338" loc="44:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x109099b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="clockSource" ref="0x1098030c8" loc="44:../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x109099b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x109804258" loc="42:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x109808020" loc="34:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x109099b20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x109804930" loc="43:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x109808e28" loc="36:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x109805460" loc="40:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x109808750" loc="35:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1093131d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x109807500" loc="37:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMode" ref="0x109807da0" loc="39:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x109807b30" loc="39:../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInputDivider" ref="0x109803cd0" loc="45:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x109099b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="inputDivider" ref="0x109803a60" loc="45:../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x109099b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerEvent" loc="26:../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
      <documentation loc="22:../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x10983dda0" loc="28:../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <interfacedef-ref qname="Msp430TimerEvent"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Leds.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x1098e5550" loc="61:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="58:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x1098e5c88" loc="67:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="63:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x1098e4420" loc="72:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="69:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x1098e32a8" loc="83:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="79:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x1098e18b0" loc="100:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="96:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x1098e0070" loc="117:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="103:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x109099790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x1098e4b38" loc="77:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="74:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x1098e0b70" loc="134:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="120:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x109099790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x1098e0900" loc="134:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x109099790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x1098e6df8" loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x1098e3a18" loc="89:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="86:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x1098e1178" loc="94:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="91:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Receive.nc">
      <documentation loc="34:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x109a25160" loc="78:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Receive.nc">
        <documentation loc="58:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10993e540"/>
              <typename><typedef-ref name="message_t" ref="0x10993daa8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10993e540"/>
                <typename><typedef-ref name="message_t" ref="0x10993daa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x109099790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x109a2f820" loc="78:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10993e540"/>
                <typename><typedef-ref name="message_t" ref="0x10993daa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x109a2fb48" loc="78:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x109a2fe58" loc="78:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x109099790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="OppoRouting" loc="1:../../tos/chips/cc2420/interfaces/OppoRouting.nc">
      <function command="" provided="0" name="setLocalMetric" ref="0x109a26d98" loc="2:../../tos/chips/cc2420/interfaces/OppoRouting.nc">
        <interfacedef-ref qname="OppoRouting"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x109099b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="metric" ref="0x109a26b28" loc="2:../../tos/chips/cc2420/interfaces/OppoRouting.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x109099b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LplSend" loc="1:../../tos/chips/cc2420/interfaces/LplSend.nc">
      <function command="" provided="0" name="send" ref="0x109a2d128" loc="3:../../tos/chips/cc2420/interfaces/LplSend.nc">
        <interfacedef-ref qname="LplSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x109317780"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10993e540"/>
                <typename><typedef-ref name="message_t" ref="0x10993daa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:13" alignment="I:1"><nx_struct-ref ref="0x109939338"/>
                <typename><typedef-ref name="rtx_setting_t" ref="0x109939cc0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x109a31af8" loc="3:../../tos/chips/cc2420/interfaces/LplSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10993e540"/>
                <typename><typedef-ref name="message_t" ref="0x10993daa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ts" ref="0x109a31e78" loc="3:../../tos/chips/cc2420/interfaces/LplSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:13" alignment="I:1"><nx_struct-ref ref="0x109939338"/>
                <typename><typedef-ref name="rtx_setting_t" ref="0x109939cc0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x109a2c138" loc="5:../../tos/chips/cc2420/interfaces/LplSend.nc">
        <interfacedef-ref qname="LplSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10993e540"/>
                <typename><typedef-ref name="message_t" ref="0x10993daa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:13" alignment="I:1"><nx_struct-ref ref="0x109939338"/>
                <typename><typedef-ref name="rtx_setting_t" ref="0x109939cc0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x109317780"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x109a2d7d8" loc="5:../../tos/chips/cc2420/interfaces/LplSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10993e540"/>
                <typename><typedef-ref name="message_t" ref="0x10993daa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ts" ref="0x109a2db58" loc="5:../../tos/chips/cc2420/interfaces/LplSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:13" alignment="I:1"><nx_struct-ref ref="0x109939338"/>
                <typename><typedef-ref name="rtx_setting_t" ref="0x109939cc0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x109a2de80" loc="5:../../tos/chips/cc2420/interfaces/LplSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x109317780"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LplTime" loc="1:../../tos/chips/cc2420/interfaces/LplTime.nc">
      <function event="" provided="0" name="timeRadio" ref="0x109a279d0" loc="2:../../tos/chips/cc2420/interfaces/LplTime.nc">
        <interfacedef-ref qname="LplTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:36" alignment="I:2"><struct-ref ref="0x109934218"/>
                <typename><typedef-ref name="rtx_time_compensation_t" ref="0x109932020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_rtx_time" ref="0x109a27760" loc="2:../../tos/chips/cc2420/interfaces/LplTime.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:36" alignment="I:2"><struct-ref ref="0x109934218"/>
                <typename><typedef-ref name="rtx_time_compensation_t" ref="0x109932020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="timeCompensated" ref="0x109a49778" loc="3:../../tos/chips/cc2420/interfaces/LplTime.nc">
        <interfacedef-ref qname="LplTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x109099b20"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:36" alignment="I:2"><struct-ref ref="0x109934218"/>
                <typename><typedef-ref name="rtx_time_compensation_t" ref="0x109932020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x109a490c8" loc="3:../../tos/chips/cc2420/interfaces/LplTime.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x109099b20"/></typename>
            </type-int>
          </variable>
          <variable name="p_rtx_time" ref="0x109a494f8" loc="3:../../tos/chips/cc2420/interfaces/LplTime.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:36" alignment="I:2"><struct-ref ref="0x109934218"/>
                <typename><typedef-ref name="rtx_time_compensation_t" ref="0x109932020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LplReceive" loc="1:../../tos/chips/cc2420/interfaces/LplReceive.nc">
      <function command="" provided="0" name="txDetect" ref="0x109a2ba70" loc="5:../../tos/chips/cc2420/interfaces/LplReceive.nc">
        <interfacedef-ref qname="LplReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxInit" ref="0x109a2a838" loc="9:../../tos/chips/cc2420/interfaces/LplReceive.nc">
        <interfacedef-ref qname="LplReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x109317780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receive" ref="0x109a28c60" loc="13:../../tos/chips/cc2420/interfaces/LplReceive.nc">
        <interfacedef-ref qname="LplReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10993e540"/>
                <typename><typedef-ref name="message_t" ref="0x10993daa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x109099790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x109a286c0" loc="13:../../tos/chips/cc2420/interfaces/LplReceive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10993e540"/>
                <typename><typedef-ref name="message_t" ref="0x10993daa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="size" ref="0x109a289e0" loc="13:../../tos/chips/cc2420/interfaces/LplReceive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x109099790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rxOn" ref="0x109a2a178" loc="7:../../tos/chips/cc2420/interfaces/LplReceive.nc">
        <interfacedef-ref qname="LplReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x109317780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxBuffSet" ref="0x109a28020" loc="11:../../tos/chips/cc2420/interfaces/LplReceive.nc">
        <interfacedef-ref qname="LplReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxEnable" ref="0x109a2b3e0" loc="3:../../tos/chips/cc2420/interfaces/LplReceive.nc">
        <interfacedef-ref qname="LplReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x109bccab0" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x109bcb1d8" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1093131d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x109bcdd20" loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x109bc9020" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1093131d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x109bcc400" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1093131d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x109bcb890" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x109bcd020" loc="40:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x109bcd690" loc="41:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430GeneralIO" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
      <documentation loc="34:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x109bd0020" loc="78:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="75:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to input.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x109bd0708" loc="80:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1093131d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setResistor" ref="0x109bfacd0" loc="110:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="103:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin pullup / pull down resistor mode.</short>
          <long>&#10; Set pin pullup / pull down resistor mode.&#10; @param mode One of the MSP430_PORT_RESISTOR_* values&#10; @return EINVAL if invalid mode or pin does not support resistor configuration;&#10; FAIL if pin is not an input;&#10; SUCCESS if pin supports resistor configuration, is an input, and mode is valid&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x109317780"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x109099790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x109bfaa60" loc="110:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x109099790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x109bd2938" loc="58:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Toggle pin status.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x109bce510" loc="87:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1093131d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getResistor" ref="0x109bf9580" loc="117:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="112:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the pin pullup / pulldown resistor mode.</short>
          <long>&#10; Get the pin pullup / pulldown resistor mode.&#10;&#10; @return one of the MSP430_PORT_RESISTOR_* values&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x109099790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x109bd0de0" loc="85:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="82:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to output.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x109bd1808" loc="73:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="68:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Read pin value.</short>
          <long>&#10; Read pin value.&#10;&#10; @return TRUE if pin is high, FALSE otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1093131d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectIOFunc" ref="0x109bfba90" loc="99:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="96:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for I/O functionality.</short>
          <long>&#10; Set pin for I/O functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRaw" ref="0x109bd1070" loc="66:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="60:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the port status that contains the pin.</short>
          <long>&#10; Get the port status that contains the pin.&#10;&#10; @return Status of the port that contains the given pin. The x'th&#10; pin on the port will be represented in the x'th bit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x109099790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x109bd5b20" loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to high.</short>
          <long>&#10; Set pin to high.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectModuleFunc" ref="0x109bcec28" loc="92:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="89:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for module specific functionality.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isIOFunc" ref="0x109bfa258" loc="101:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1093131d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isModuleFunc" ref="0x109bfb3a0" loc="94:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1093131d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x109bd2258" loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="50:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to low.</short>
          <long>&#10; Set pin to low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x1097531d8" loc="76:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x109615490" loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x109310020" loc="57:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x10931b020" loc="72:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x109310718" loc="65:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1093131d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x109323ba0" loc="67:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x109317780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x1093223e0" loc="75:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/StdControl.nc">
      <documentation loc="72:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x109e5bc98" loc="95:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/StdControl.nc">
        <documentation loc="88:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x109317780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x109e57490" loc="105:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/StdControl.nc">
        <documentation loc="97:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x109317780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMSend.nc">
      <documentation loc="34:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x109e3ab50" loc="80:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="60:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x109317780"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x1098d8b18"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10993e540"/>
                <typename><typedef-ref name="message_t" ref="0x10993daa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x109099790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x109e3a250" loc="80:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x1098d8b18"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x109e3a5b0" loc="80:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10993e540"/>
                <typename><typedef-ref name="message_t" ref="0x10993daa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x109e3a8c0" loc="80:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x109099790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x109e342d8" loc="135:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="126:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10993e540"/>
                <typename><typedef-ref name="message_t" ref="0x10993daa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x109099790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x109e35be8" loc="135:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10993e540"/>
                <typename><typedef-ref name="message_t" ref="0x10993daa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x109e34020" loc="135:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x109099790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x109e353e0" loc="123:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="113:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x109099790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x109e38108" loc="96:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="82:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x109317780"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10993e540"/>
                <typename><typedef-ref name="message_t" ref="0x10993daa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x109e39e50" loc="96:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10993e540"/>
                <typename><typedef-ref name="message_t" ref="0x10993daa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x109e365c8" loc="110:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="98:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10993e540"/>
                <typename><typedef-ref name="message_t" ref="0x10993daa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x109317780"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x109e36020" loc="110:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10993e540"/>
                <typename><typedef-ref name="message_t" ref="0x10993daa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x109e36348" loc="110:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x109317780"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x109e5a340" loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x109e5a340"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x109e5abd0" loc="61:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10909a020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Packet.nc">
      <documentation loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x109e59cb8" loc="65:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="58:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10993e540"/>
                <typename><typedef-ref name="message_t" ref="0x10993daa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x109e59a48" loc="65:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10993e540"/>
                <typename><typedef-ref name="message_t" ref="0x10993daa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x109e54c90" loc="78:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="67:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x109099790"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10993e540"/>
                <typename><typedef-ref name="message_t" ref="0x10993daa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x109e54a20" loc="78:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10993e540"/>
                <typename><typedef-ref name="message_t" ref="0x10993daa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x109e50e78" loc="126:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="109:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10993e540"/>
                <typename><typedef-ref name="message_t" ref="0x10993daa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x109099790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x109e508b0" loc="126:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10993e540"/>
                <typename><typedef-ref name="message_t" ref="0x10993daa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x109e50bc0" loc="126:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x109099790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x109e50020" loc="106:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="96:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x109099790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x109e550b8" loc="94:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="80:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10993e540"/>
                <typename><typedef-ref name="message_t" ref="0x10993daa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x109099790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x109e52ab0" loc="94:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10993e540"/>
                <typename><typedef-ref name="message_t" ref="0x10993daa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x109e52dc0" loc="94:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x109099790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LplxPacket" loc="1:../../tos/chips/cc2420/interfaces/LplxPacket.nc">
      <function command="" provided="0" name="setOppoRouting" ref="0x109e4ba28" loc="3:../../tos/chips/cc2420/interfaces/LplxPacket.nc">
        <interfacedef-ref qname="LplxPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10993e540"/>
                <typename><typedef-ref name="message_t" ref="0x10993daa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x109099b20"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x109099b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m" ref="0x109e4b100" loc="3:../../tos/chips/cc2420/interfaces/LplxPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10993e540"/>
                <typename><typedef-ref name="message_t" ref="0x10993daa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="metric" ref="0x109e4b440" loc="3:../../tos/chips/cc2420/interfaces/LplxPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x109099b20"/></typename>
            </type-int>
          </variable>
          <variable name="progress" ref="0x109e4b798" loc="3:../../tos/chips/cc2420/interfaces/LplxPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x109099b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setPacketBulk" ref="0x109e4a6a0" loc="4:../../tos/chips/cc2420/interfaces/LplxPacket.nc">
        <interfacedef-ref qname="LplxPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10993e540"/>
                <typename><typedef-ref name="message_t" ref="0x10993daa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x109099790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m" ref="0x109e4a100" loc="4:../../tos/chips/cc2420/interfaces/LplxPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10993e540"/>
                <typename><typedef-ref name="message_t" ref="0x10993daa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="size" ref="0x109e4a420" loc="4:../../tos/chips/cc2420/interfaces/LplxPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x109099790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPacketBulk" ref="0x109e49030" loc="5:../../tos/chips/cc2420/interfaces/LplxPacket.nc">
        <interfacedef-ref qname="LplxPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x109099790"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10993e540"/>
                <typename><typedef-ref name="message_t" ref="0x10993daa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m" ref="0x109e4ad98" loc="5:../../tos/chips/cc2420/interfaces/LplxPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10993e540"/>
                <typename><typedef-ref name="message_t" ref="0x10993daa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setPacketCI" ref="0x109e4d9f0" loc="2:../../tos/chips/cc2420/interfaces/LplxPacket.nc">
        <interfacedef-ref qname="LplxPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10993e540"/>
                <typename><typedef-ref name="message_t" ref="0x10993daa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x109099790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m" ref="0x109e4d460" loc="2:../../tos/chips/cc2420/interfaces/LplxPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10993e540"/>
                <typename><typedef-ref name="message_t" ref="0x10993daa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="hop" ref="0x109e4d770" loc="2:../../tos/chips/cc2420/interfaces/LplxPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x109099790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
      <documentation loc="36:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x109e334c8" loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x109e334c8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x109e2a020" loc="136:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="132:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10909a020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x109e2f8f8" loc="83:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="80:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x109e2c5b8" loc="114:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="100:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x10909a020"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x10909a020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x109e2c020" loc="114:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x10909a020"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x109e2c338" loc="114:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x10909a020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x109e2e870" loc="98:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="94:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1093131d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x109e29020" loc="151:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="146:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10909a020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x109e2a740" loc="144:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="138:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10909a020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x109e2e0d8" loc="92:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="86:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1093131d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x109e30020" loc="64:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x10909a020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x109e33d28" loc="64:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x10909a020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x109e2b5b8" loc="129:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="116:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x10909a020"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x10909a020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x109e2b020" loc="129:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x10909a020"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x109e2b338" loc="129:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x10909a020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x109e30a60" loc="73:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="66:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x10909a020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x109e307f0" loc="73:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x10909a020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x109e2f258" loc="78:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="75:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x109e95c60" loc="177:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x1098d8760"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10993e540"/>
                <typename><typedef-ref name="message_t" ref="0x10993daa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x109e959f0" loc="177:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10993e540"/>
                <typename><typedef-ref name="message_t" ref="0x10993daa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x109e65d18" loc="88:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x1098d8b18"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10993e540"/>
                <typename><typedef-ref name="message_t" ref="0x10993daa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x109e65aa8" loc="88:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10993e540"/>
                <typename><typedef-ref name="message_t" ref="0x10993daa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x109e68290" loc="68:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x1098d8b18"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x109e68ce8" loc="78:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x1098d8b18"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10993e540"/>
                <typename><typedef-ref name="message_t" ref="0x10993daa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x109e68a78" loc="78:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10993e540"/>
                <typename><typedef-ref name="message_t" ref="0x10993daa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x109e635d8" loc="121:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10993e540"/>
                <typename><typedef-ref name="message_t" ref="0x10993daa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x1098d8b18"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x109e63020" loc="121:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10993e540"/>
                <typename><typedef-ref name="message_t" ref="0x10993daa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x109e63358" loc="121:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x1098d8b18"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x109e660b8" loc="103:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10993e540"/>
                <typename><typedef-ref name="message_t" ref="0x10993daa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x1098d8b18"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x109e64a98" loc="103:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10993e540"/>
                <typename><typedef-ref name="message_t" ref="0x10993daa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x109e64dd0" loc="103:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x1098d8b18"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x109e988c8" loc="147:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x1098d83b0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10993e540"/>
                <typename><typedef-ref name="message_t" ref="0x10993daa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x109e98658" loc="147:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10993e540"/>
                <typename><typedef-ref name="message_t" ref="0x10993daa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x109e96b70" loc="162:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10993e540"/>
                <typename><typedef-ref name="message_t" ref="0x10993daa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x1098d83b0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x109e965f0" loc="162:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10993e540"/>
                <typename><typedef-ref name="message_t" ref="0x10993daa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x109e968f0" loc="162:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x1098d83b0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x109e61788" loc="136:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1093131d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10993e540"/>
                <typename><typedef-ref name="message_t" ref="0x10993daa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x109e61518" loc="136:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10993e540"/>
                <typename><typedef-ref name="message_t" ref="0x10993daa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x109e970b8" loc="187:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10993e540"/>
                <typename><typedef-ref name="message_t" ref="0x10993daa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x1098d8760"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x109e94a80" loc="187:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10993e540"/>
                <typename><typedef-ref name="message_t" ref="0x10993daa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x109e94db0" loc="187:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x1098d8760"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x109e97e20" loc="195:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x1098d8760"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x109e90520" loc="59:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x109317780"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10993e540"/>
                <typename><typedef-ref name="message_t" ref="0x10993daa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x109e902b0" loc="59:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10993e540"/>
                <typename><typedef-ref name="message_t" ref="0x10993daa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x109e8f630" loc="71:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x109317780"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10993e540"/>
                <typename><typedef-ref name="message_t" ref="0x10993daa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x109e8f3c0" loc="71:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10993e540"/>
                <typename><typedef-ref name="message_t" ref="0x10993daa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x109e8d700" loc="85:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1093131d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10993e540"/>
                <typename><typedef-ref name="message_t" ref="0x10993daa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x109e8d490" loc="85:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10993e540"/>
                <typename><typedef-ref name="message_t" ref="0x10993daa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Send.nc">
      <documentation loc="34:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x109e7e5b0" loc="75:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="57:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x109317780"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10993e540"/>
                <typename><typedef-ref name="message_t" ref="0x10993daa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x109099790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x109e7e020" loc="75:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10993e540"/>
                <typename><typedef-ref name="message_t" ref="0x10993daa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x109e7e330" loc="75:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x109099790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x109e7d878" loc="125:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="115:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10993e540"/>
                <typename><typedef-ref name="message_t" ref="0x10993daa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x109099790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x109e7d2b0" loc="125:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10993e540"/>
                <typename><typedef-ref name="message_t" ref="0x10993daa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x109e7d5c0" loc="125:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x109099790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x109eb3a58" loc="112:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="102:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x109099790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x109e7c828" loc="89:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="77:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x109317780"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10993e540"/>
                <typename><typedef-ref name="message_t" ref="0x10993daa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x109e7c5b8" loc="89:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10993e540"/>
                <typename><typedef-ref name="message_t" ref="0x10993daa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x109eb5c10" loc="100:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="91:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10993e540"/>
                <typename><typedef-ref name="message_t" ref="0x10993daa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x109317780"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x109eb5668" loc="100:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10993e540"/>
                <typename><typedef-ref name="message_t" ref="0x10993daa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x109eb5990" loc="100:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x109317780"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioBackoff" loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
      <documentation loc="32:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <short>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.</short>
        <long>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.  &#10; &#10; This is because of fan-out issues with multiple components wanting to&#10; affect backoffs for whatever they're interested in:&#10; If you signal out an *event* to request an initial backoff and&#10; several components happen to be listening, then those components&#10; would be required to return a backoff value.  We don't want that&#10; behavior.&#10; With this strategy, components can listen for the requests and then&#10; decide if they want to affect the behavior.  If the component wants to&#10; affect the behavior, it calls back using the setXYZBackoff(..) command.&#10; If several components call back, then the last component to get its &#10; word in has the final say. &#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="requestCca" ref="0x109f1e9f8" loc="95:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="90:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on whether or not to use CCA on the outbound packet.</short>
          <long>&#10; Request for input on whether or not to use CCA on the outbound packet.&#10; Replies should come in the form of setCca(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10993e540"/>
                <typename><typedef-ref name="message_t" ref="0x10993daa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x109f1e788" loc="95:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10993e540"/>
                <typename><typedef-ref name="message_t" ref="0x10993daa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestInitialBackoff" ref="0x109f21dd0" loc="81:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="76:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; </short>
          <long>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10993e540"/>
                <typename><typedef-ref name="message_t" ref="0x10993daa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x109f21b60" loc="81:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10993e540"/>
                <typename><typedef-ref name="message_t" ref="0x10993daa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCongestionBackoff" ref="0x109f22640" loc="66:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="62:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestCongestionBackoff event&#10; </short>
          <long>&#10; Must be called within a requestCongestionBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x109099b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x109f223d0" loc="66:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x109099b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInitialBackoff" ref="0x109f23b60" loc="60:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestInitialBackoff event&#10; </short>
          <long>&#10; Must be called within a requestInitialBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x109099b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x109f238f0" loc="60:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x109099b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCca" ref="0x109f21020" loc="73:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="68:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Enable CCA for the outbound packet.</short>
          <long>&#10; Enable CCA for the outbound packet.  Must be called within a requestCca&#10; event&#10; @param ccaOn TRUE to enable CCA, which is the default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x1093131d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ccaOn" ref="0x109f22d88" loc="73:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x1093131d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestCongestionBackoff" ref="0x109f1fc30" loc="88:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="83:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; </short>
          <long>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10993e540"/>
                <typename><typedef-ref name="message_t" ref="0x10993daa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x109f1f9c0" loc="88:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10993e540"/>
                <typename><typedef-ref name="message_t" ref="0x10993daa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/SendNotifier.nc">
      <documentation loc="32:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x109f1a2a0" loc="59:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/SendNotifier.nc">
        <documentation loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x1098d8b18"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10993e540"/>
                <typename><typedef-ref name="message_t" ref="0x10993daa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x109f1db70" loc="59:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x1098d8b18"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x109f1a020" loc="59:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10993e540"/>
                <typename><typedef-ref name="message_t" ref="0x10993daa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BulkSend" loc="1:../../tos/chips/cc2420/interfaces/BulkSend.nc">
      <function command="" provided="0" name="send" ref="0x109f0f728" loc="2:../../tos/chips/cc2420/interfaces/BulkSend.nc">
        <interfacedef-ref qname="BulkSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x109317780"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10993e540"/>
                <typename><typedef-ref name="message_t" ref="0x10993daa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x109099790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x109f0f198" loc="2:../../tos/chips/cc2420/interfaces/BulkSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10993e540"/>
                <typename><typedef-ref name="message_t" ref="0x10993daa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x109f0f4a8" loc="2:../../tos/chips/cc2420/interfaces/BulkSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x109099790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x109f0d0a8" loc="3:../../tos/chips/cc2420/interfaces/BulkSend.nc">
        <interfacedef-ref qname="BulkSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x109317780"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10993e540"/>
                <typename><typedef-ref name="message_t" ref="0x10993daa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x109f0fde8" loc="3:../../tos/chips/cc2420/interfaces/BulkSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10993e540"/>
                <typename><typedef-ref name="message_t" ref="0x10993daa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x109f0dcc8" loc="4:../../tos/chips/cc2420/interfaces/BulkSend.nc">
        <interfacedef-ref qname="BulkSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10993e540"/>
                <typename><typedef-ref name="message_t" ref="0x10993daa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x109317780"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x109f0d738" loc="4:../../tos/chips/cc2420/interfaces/BulkSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10993e540"/>
                <typename><typedef-ref name="message_t" ref="0x10993daa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="err" ref="0x109f0da48" loc="4:../../tos/chips/cc2420/interfaces/BulkSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x109317780"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x109f49db8" loc="50:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x1098d8b18"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x109f84c48" loc="60:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x109f84558" loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x1098d8760"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x109f495d8" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x1098d8760"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x1098d8b18"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x109f49020" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x1098d8760"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x109f49358" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x1098d8b18"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioTimerUpdate" loc="1:../../tos/chips/cc2420/x-timer/RadioTimerUpdate.nc">
      <function event="" provided="0" name="counterUpdate" ref="0x109f6a998" loc="3:../../tos/chips/cc2420/x-timer/RadioTimerUpdate.nc">
        <interfacedef-ref qname="RadioTimerUpdate"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x10909a020"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x109099b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="count" ref="0x109f6a3d8" loc="3:../../tos/chips/cc2420/x-timer/RadioTimerUpdate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x10909a020"/></typename>
            </type-int>
          </variable>
          <variable name="factor" ref="0x109f6a718" loc="3:../../tos/chips/cc2420/x-timer/RadioTimerUpdate.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x109099b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="triggerUpdate" ref="0x109f6dce0" loc="2:../../tos/chips/cc2420/x-timer/RadioTimerUpdate.nc">
        <interfacedef-ref qname="RadioTimerUpdate"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Random.nc">
      <documentation loc="34:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x109f967b8" loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Random.nc">
        <documentation loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x109099b20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x109f96020" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Random.nc">
        <documentation loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10909a020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x109fe8588" loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x109fe8588"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x109fe87b8" loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x109fe87b8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x109fe30d8" loc="109:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x109fe87b8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x109fe6258" loc="78:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x109fe4758" loc="103:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x109fe87b8"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x109fe87b8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x109fe41b8" loc="103:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x109fe87b8"/></type-var>
          </variable>
          <variable name="dt" ref="0x109fe44d8" loc="103:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x109fe87b8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x109fe69c8" loc="88:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1093131d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x109fe3858" loc="116:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x109fe87b8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x109fe72d0" loc="66:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x109fe87b8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x109fe7060" loc="66:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x109fe87b8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x109fe7aa0" loc="73:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Counter.nc">
      <documentation loc="36:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x10a0803f8" loc="57:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x10a0803f8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x10a080628" loc="57:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x10a080628"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x10a07f020" loc="64:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="59:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x10a080628"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x10a07e070" loc="76:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="73:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x10a07f838" loc="71:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="66:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1093131d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x10a07e760" loc="82:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="78:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ParameterInit.nc">
      <documentation loc="34:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x10a16b020" loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x10a16b020"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x10a16bac8" loc="64:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ParameterInit.nc">
        <documentation loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x109317780"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x10a16b020"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x10a16b858" loc="64:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x10a16b020"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
