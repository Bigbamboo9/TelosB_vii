<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="52:BulkTransferTestAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x10477abc8"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x10406f220"/></to>
    </wire>
    <wire loc="72:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x10406f220"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x1040719b0"/></to>
    </wire>
    <wire loc="53:BulkTransferTestAppC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x1047792b0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x104b881c8"/></to>
    </wire>
    <wire loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x104b881c8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x10486d7a0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x1041d43b0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:BulkTransferTestAppC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x1047a7178"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x104b95548"/></to>
    </wire>
    <wire loc="64:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x104b95548"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x104f6c9b0"/></to>
    </wire>
    <wire loc="55:BulkTransferTestAppC.nc">
      <from><interface-ref name="AMControl" scoped="" ref="0x1047a8060"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x104871918"/></to>
    </wire>
    <wire loc="23:../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x104871918"/></from>
      <to><interface-ref name="RadioControl" scoped="" ref="0x104866ac0"/></to>
    </wire>
    <wire loc="56:BulkTransferTestAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x10477b678"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x10451e9d0"/></to>
    </wire>
    <wire loc="51:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x10451e9d0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x104517318"/></to>
    </wire>
    <wire loc="57:BulkTransferTestAppC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x104799698"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x104b94268"/></to>
    </wire>
    <wire loc="65:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x104b94268"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x104f6a700"/></to>
    </wire>
    <wire loc="58:BulkTransferTestAppC.nc">
      <from><interface-ref name="LplxPacket" scoped="" ref="0x1047942c8"/></from>
      <to><interface-ref name="LplxPacket" scoped="" ref="0x104869c00"/></to>
    </wire>
    <wire loc="30:../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="LplxPacket" scoped="" ref="0x104869c00"/></from>
      <to><interface-ref name="LplxPacket" scoped="" ref="0x1048632d0"/></to>
    </wire>
    <wire loc="59:BulkTransferTestAppC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x1047c9b10"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x104868968"/></to>
    </wire>
    <wire loc="31:../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x104868968"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x10489e348"/></to>
    </wire>
    <wire loc="62:BulkTransferTestAppC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x1047a5710"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x10499a5e0"/></to>
    </wire>
    <wire loc="48:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x10499a5e0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x104b047f8"/></to>
    </wire>
    <wire loc="64:BulkTransferTestAppC.nc">
      <from><interface-ref name="CC2420xControl" scoped="" ref="0x1047c6860"/></from>
      <to><interface-ref name="CC2420xControl" scoped="" ref="0x1048672f8"/></to>
    </wire>
    <wire loc="32:../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="CC2420xControl" scoped="" ref="0x1048672f8"/></from>
      <to><interface-ref name="CC2420xControl" scoped="" ref="0x1048907f0"/></to>
    </wire>
    <wire loc="65:BulkTransferTestAppC.nc">
      <from><interface-ref name="CC2420xProfile" scoped="" ref="0x104792080"/></from>
      <to><interface-ref name="CC2420xProfile" scoped="" ref="0x104867aa8"/></to>
    </wire>
    <wire loc="33:../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="CC2420xProfile" scoped="" ref="0x104867aa8"/></from>
      <to><interface-ref name="CC2420xProfile" scoped="" ref="0x10488f020"/></to>
    </wire>
    <wire loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x10406e680"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x104b30a40"/></to>
    </wire>
    <wire loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x10406e680"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x104960430"/></to>
    </wire>
    <wire loc="27:../../tos/chips/cc2420/x-lpl/CC2420xLplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x10406e680"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x1048df740"/></to>
    </wire>
    <wire loc="28:../../tos/chips/cc2420/x-lpl/CC2420xLplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x10406e680"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x104319a20"/></to>
    </wire>
    <wire loc="67:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x104788020"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x103bf8390"/></to>
    </wire>
    <wire loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x103bf8390"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x1040350c0"/></to>
    </wire>
    <wire loc="68:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x1047889f8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x1040725b8"/></to>
    </wire>
    <wire loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x1040725b8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x10406c740"/></to>
    </wire>
    <wire loc="71:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x104787140"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x10406e680"/></to>
    </wire>
    <wire loc="49:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x10406ce10"/></from>
      <to><interface-ref name="MoteClockInit" scoped="" ref="0x1040880e8"/></to>
    </wire>
    <wire loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosb/MoteClockC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x1040880e8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x1040a2020"/></to>
    </wire>
    <wire loc="50:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x1040694f8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x10406b610"/></to>
    </wire>
    <wire loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x104069b98"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x1045502d8"/></to>
    </wire>
    <wire loc="35:../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x1040a2020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x1040aa530"/></to>
    </wire>
    <wire loc="36:../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Msp430ClockInit" scoped="" ref="0x10409b2b8"/></from>
      <to><interface-ref name="Msp430ClockInit" scoped="" ref="0x1040aaba0"/></to>
    </wire>
    <wire loc="37:../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x103e26020"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x1040a9e08"/></to>
    </wire>
    <wire loc="82:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA2" scoped="" ref="0x1040f5710"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x104194c80"/></to>
    </wire>
    <wire loc="77:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA1" scoped="" ref="0x10410c0c0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x104199c58"/></to>
    </wire>
    <wire loc="99:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB0" scoped="" ref="0x104104710"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x1041afc80"/></to>
    </wire>
    <wire loc="76:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0x1040f3868"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x104199020"/></to>
    </wire>
    <wire loc="68:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0x1040f6da8"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x10413fc80"/></to>
    </wire>
    <wire loc="84:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA2" scoped="" ref="0x10410b020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x104192c58"/></to>
    </wire>
    <wire loc="62:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0x1040fd930"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x10414d798"/></to>
    </wire>
    <wire loc="83:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA2" scoped="" ref="0x1040f26e0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x104192020"/></to>
    </wire>
    <wire loc="75:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0x1040fb218"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x10419cc80"/></to>
    </wire>
    <wire loc="70:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA0" scoped="" ref="0x1041061b0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x1041a1c58"/></to>
    </wire>
    <wire loc="69:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0x10410ea88"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x1041a1020"/></to>
    </wire>
    <wire loc="89:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerB" scoped="" ref="0x104105020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x1041451e8"/></to>
    </wire>
    <wire loc="101:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB0" scoped="" ref="0x1041029f0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x1041adc58"/></to>
    </wire>
    <wire loc="100:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB0" scoped="" ref="0x104103b78"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x1041ad020"/></to>
    </wire>
    <wire loc="63:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x10414b658"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x10414b020"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x10414bc70"/></from>
      <to><interface-ref name="VectorTimerA0" scoped="" ref="0x1041a54f8"/></to>
    </wire>
    <wire loc="65:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x1041492e8"/></from>
      <to><interface-ref name="VectorTimerA1" scoped="" ref="0x1041a5c40"/></to>
    </wire>
    <wire loc="71:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x1041a0a90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x10414d798"/></to>
    </wire>
    <wire loc="72:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x10419e100"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x10414b020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x104198a90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x10414d798"/></to>
    </wire>
    <wire loc="79:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x104196100"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x10414b020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x1041b3a90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x10414d798"/></to>
    </wire>
    <wire loc="86:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x1041b1100"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x10414b020"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x104143020"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x1041448a0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x104143638"/></from>
      <to><interface-ref name="VectorTimerB0" scoped="" ref="0x1041a4418"/></to>
    </wire>
    <wire loc="95:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x104143c50"/></from>
      <to><interface-ref name="VectorTimerB1" scoped="" ref="0x1043337c8"/></to>
    </wire>
    <wire loc="102:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x1041aba90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x1041451e8"/></to>
    </wire>
    <wire loc="103:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x1041a9100"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x1041448a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="108:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x1041a3080"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x10451e9d0"/></to>
    </wire>
    <wire loc="42:../../tos/chips/cc2420/x-lpl/CC2420xLplC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x10432d020"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x10451e9d0"/></to>
    </wire>
    <wire loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x1045502d8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x10451acb8"/></to>
    </wire>
    <wire loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x10450f580"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x104518d18"/></to>
    </wire>
    <wire loc="58:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x104518d18"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x104752c30"/></to>
    </wire>
    <wire loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x1045157d0"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x104522020"/></to>
    </wire>
    <wire loc="61:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x104522020"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x10473d448"/></to>
    </wire>
    <wire loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x104514958"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x1045211b0"/></to>
    </wire>
    <wire loc="64:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x1045211b0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x104772cd0"/></to>
    </wire>
    <wire loc="59:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x104751da0"/></from>
      <to><interface-ref name="Port54" scoped="" ref="0x10458d568"/></to>
    </wire>
    <wire loc="486:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port54" scoped="" ref="0x10458d568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1046abca0"/></to>
    </wire>
    <wire loc="62:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x10473c5f8"/></from>
      <to><interface-ref name="Port55" scoped="" ref="0x10458b568"/></to>
    </wire>
    <wire loc="487:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port55" scoped="" ref="0x10458b568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1046a53d8"/></to>
    </wire>
    <wire loc="65:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x104771e20"/></from>
      <to><interface-ref name="Port56" scoped="" ref="0x104589568"/></to>
    </wire>
    <wire loc="488:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port56" scoped="" ref="0x104589568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1046a1ca0"/></to>
    </wire>
    <wire loc="442:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x10453b668"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x104602ca0"/></to>
    </wire>
    <wire loc="455:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x104557568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10463bca0"/></to>
    </wire>
    <wire loc="531:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SDA" scoped="" ref="0x1045a27d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1046613d8"/></to>
    </wire>
    <wire loc="551:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC6" scoped="" ref="0x1045e2558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1046e8ca0"/></to>
    </wire>
    <wire loc="532:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI0" scoped="" ref="0x1045a0660"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10465dca0"/></to>
    </wire>
    <wire loc="460:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port30" scoped="" ref="0x104553568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x104666ca0"/></to>
    </wire>
    <wire loc="473:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port42" scoped="" ref="0x104570568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10466dca0"/></to>
    </wire>
    <wire loc="497:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port64" scoped="" ref="0x1045af568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1046bcca0"/></to>
    </wire>
    <wire loc="535:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD0" scoped="" ref="0x1045cc560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x104654ca0"/></to>
    </wire>
    <wire loc="545:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC0" scoped="" ref="0x1045bc558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1046ceca0"/></to>
    </wire>
    <wire loc="557:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSIN" scoped="" ref="0x1045da560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1046e33d8"/></to>
    </wire>
    <wire loc="445:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x104565568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1046273d8"/></to>
    </wire>
    <wire loc="536:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD0" scoped="" ref="0x1045ca560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10464f3d8"/></to>
    </wire>
    <wire loc="450:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x104561568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10461e3d8"/></to>
    </wire>
    <wire loc="463:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port33" scoped="" ref="0x10457e568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1046583d8"/></to>
    </wire>
    <wire loc="476:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port45" scoped="" ref="0x104569568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1046953d8"/></to>
    </wire>
    <wire loc="489:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port57" scoped="" ref="0x104587568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1046d23d8"/></to>
    </wire>
    <wire loc="500:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port67" scoped="" ref="0x1045a9568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1046e33d8"/></to>
    </wire>
    <wire loc="440:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x104540978"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10460bca0"/></to>
    </wire>
    <wire loc="453:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x10455b568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x104645d08"/></to>
    </wire>
    <wire loc="466:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port36" scoped="" ref="0x104578568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10467fca0"/></to>
    </wire>
    <wire loc="530:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO0" scoped="" ref="0x1045a5970"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1046613d8"/></to>
    </wire>
    <wire loc="548:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC3" scoped="" ref="0x1045b6558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1046c03d8"/></to>
    </wire>
    <wire loc="555:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC1" scoped="" ref="0x1045dc558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1046e33d8"/></to>
    </wire>
    <wire loc="541:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK1" scoped="" ref="0x1045c2560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1046af3d8"/></to>
    </wire>
    <wire loc="471:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port40" scoped="" ref="0x104574568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x104676dd8"/></to>
    </wire>
    <wire loc="484:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port52" scoped="" ref="0x104591568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1046b4ca0"/></to>
    </wire>
    <wire loc="495:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port62" scoped="" ref="0x1045b3568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1046c5ca0"/></to>
    </wire>
    <wire loc="549:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC4" scoped="" ref="0x1045b4558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1046bcca0"/></to>
    </wire>
    <wire loc="538:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE1" scoped="" ref="0x1045c8558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x104687ca0"/></to>
    </wire>
    <wire loc="443:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x104539568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1046313d8"/></to>
    </wire>
    <wire loc="456:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x104555568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1046363d8"/></to>
    </wire>
    <wire loc="493:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port60" scoped="" ref="0x104585568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1046ceca0"/></to>
    </wire>
    <wire loc="461:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port31" scoped="" ref="0x104551568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1046613d8"/></to>
    </wire>
    <wire loc="474:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port43" scoped="" ref="0x10456d568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1046683d8"/></to>
    </wire>
    <wire loc="498:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port65" scoped="" ref="0x1045ad568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1046ec3d8"/></to>
    </wire>
    <wire loc="540:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI1" scoped="" ref="0x1045c4560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1046b4ca0"/></to>
    </wire>
    <wire loc="438:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x104542c70"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1045d2e18"/></to>
    </wire>
    <wire loc="451:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x10455f568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10461aca0"/></to>
    </wire>
    <wire loc="464:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port34" scoped="" ref="0x10457c568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x104654ca0"/></to>
    </wire>
    <wire loc="477:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port46" scoped="" ref="0x104599568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x104690ca0"/></to>
    </wire>
    <wire loc="542:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD1" scoped="" ref="0x1045c0560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10467fca0"/></to>
    </wire>
    <wire loc="546:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC1" scoped="" ref="0x1045ba558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1046c93d8"/></to>
    </wire>
    <wire loc="552:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC7" scoped="" ref="0x1045e0558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1046e33d8"/></to>
    </wire>
    <wire loc="482:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port50" scoped="" ref="0x104595568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x104687ca0"/></to>
    </wire>
    <wire loc="543:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD1" scoped="" ref="0x1045be560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10467a3d8"/></to>
    </wire>
    <wire loc="441:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x10453e7f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1046063d8"/></to>
    </wire>
    <wire loc="454:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x104559568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1046403d8"/></to>
    </wire>
    <wire loc="467:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port37" scoped="" ref="0x104576568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10467a3d8"/></to>
    </wire>
    <wire loc="539:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO1" scoped="" ref="0x1045c6560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1046b83d8"/></to>
    </wire>
    <wire loc="550:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC5" scoped="" ref="0x1045e4558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1046ec3d8"/></to>
    </wire>
    <wire loc="472:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port41" scoped="" ref="0x104572668"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x104671478"/></to>
    </wire>
    <wire loc="485:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port53" scoped="" ref="0x10458f568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1046af3d8"/></to>
    </wire>
    <wire loc="496:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port63" scoped="" ref="0x1045b1568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1046c03d8"/></to>
    </wire>
    <wire loc="444:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x104567568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10462dca0"/></to>
    </wire>
    <wire loc="494:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port61" scoped="" ref="0x104583568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1046c93d8"/></to>
    </wire>
    <wire loc="449:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x104563568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x104623ca0"/></to>
    </wire>
    <wire loc="462:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port32" scoped="" ref="0x104580568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10465dca0"/></to>
    </wire>
    <wire loc="475:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port44" scoped="" ref="0x10456b568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10469aca0"/></to>
    </wire>
    <wire loc="499:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port66" scoped="" ref="0x1045ab568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1046e8ca0"/></to>
    </wire>
    <wire loc="439:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x10454bb00"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10460f478"/></to>
    </wire>
    <wire loc="452:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x10455d568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1046493d8"/></to>
    </wire>
    <wire loc="465:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port35" scoped="" ref="0x10457a568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10464f3d8"/></to>
    </wire>
    <wire loc="478:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port47" scoped="" ref="0x104597568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10468b3d8"/></to>
    </wire>
    <wire loc="534:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SCL" scoped="" ref="0x10459c548"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1046583d8"/></to>
    </wire>
    <wire loc="547:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC2" scoped="" ref="0x1045b8558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1046c5ca0"/></to>
    </wire>
    <wire loc="533:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK0" scoped="" ref="0x10459e560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1046583d8"/></to>
    </wire>
    <wire loc="483:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port51" scoped="" ref="0x104593568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1046b83d8"/></to>
    </wire>
    <wire loc="554:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC0" scoped="" ref="0x1045de558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1046e8ca0"/></to>
    </wire>
    <wire loc="558:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSOUT" scoped="" ref="0x1045d7568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1046d23d8"/></to>
    </wire>
    <wire loc="529:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE0" scoped="" ref="0x1045a75b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x104666ca0"/></to>
    </wire>
    <wire loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x103bffca0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x104033020"/></to>
    </wire>
    <wire loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x1040304e0"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x103c733c8"/></to>
    </wire>
    <wire loc="75:BulkTransferTestC.nc">
      <from><interface-ref name="packet_receive" scoped="" ref="0x1047c3980"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x103bffca0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:BulkTransferTestC.nc">
      <from><interface-ref name="radio_turn_on" scoped="" ref="0x1047c2978"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x103bffca0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:BulkTransferTestC.nc">
      <from><interface-ref name="packet_forward" scoped="" ref="0x1047c4a78"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x103bffca0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x104f6c9b0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x104fb8378"/></to>
    </wire>
    <wire loc="64:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x104f6a700"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x10486b920"/></to>
    </wire>
    <wire loc="66:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x104b94e20"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x104f693f0"/></to>
    </wire>
    <wire loc="65:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x104f693f0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x10486a5d0"/></to>
    </wire>
    <wire loc="67:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x104b92430"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x104f68a50"/></to>
    </wire>
    <wire loc="66:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x104f68a50"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x104868968"/></to>
    </wire>
    <wire loc="28:../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x10486b920"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x1048615b8"/></to>
    </wire>
    <wire loc="29:../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x10486a5d0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x104862020"/></to>
    </wire>
    <wire loc="60:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x104fb7020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x10480a020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x104fb7bd8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x10486a5d0"/></to>
    </wire>
    <wire loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x10480a020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x1048772c8"/></to>
    </wire>
    <wire loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x104876060"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x10486e5b0"/></to>
    </wire>
    <wire loc="25:../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x10486e5b0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x10489d798"/></to>
    </wire>
    <wire loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x104876c38"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x10486a5d0"/></to>
    </wire>
    <wire loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x104874268"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x10486b920"/></to>
    </wire>
    <wire loc="169:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x104873020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x103bffca0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x1048737c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x103bffca0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="46:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LplxPacket" scoped="" ref="0x1048632d0"/></from>
      <to><interface-ref name="LplxPacket" scoped="" ref="0x104b1bcd8"/></to>
    </wire>
    <wire loc="41:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x10489d798"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x10488b938"/></to>
    </wire>
    <wire loc="27:../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x10486b348"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x10489a498"/></to>
    </wire>
    <wire loc="44:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x10489a498"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x104888628"/></to>
    </wire>
    <wire loc="48:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x1048615b8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x104b5e020"/></to>
    </wire>
    <wire loc="37:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420xControl" scoped="" ref="0x1048907f0"/></from>
      <to><interface-ref name="CC2420xControl" scoped="" ref="0x1048e3cc8"/></to>
    </wire>
    <wire loc="26:../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x10486d7a0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x10489c928"/></to>
    </wire>
    <wire loc="43:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x10489c928"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x10488aab0"/></to>
    </wire>
    <wire loc="49:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x10489e348"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x104b5ed68"/></to>
    </wire>
    <wire loc="38:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420xProfile" scoped="" ref="0x10488f020"/></from>
      <to><interface-ref name="CC2420xProfile" scoped="" ref="0x1048e6540"/></to>
    </wire>
    <wire loc="35:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x104866ac0"/></from>
      <to><interface-ref name="RadioControl" scoped="" ref="0x1048ea2b8"/></to>
    </wire>
    <wire loc="47:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x104862020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x104b609a0"/></to>
    </wire>
    <wire loc="40:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x1048992e0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x104887cd0"/></to>
    </wire>
    <wire loc="42:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x1048901c8"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x1048871c8"/></to>
    </wire>
    <wire loc="17:../../tos/chips/cc2420/x-lpl/CC2420xLplC.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x1048ea2b8"/></from>
      <to><interface-ref name="RadioControl" scoped="" ref="0x1048dfe40"/></to>
    </wire>
    <wire loc="36:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="OppoRouting" scoped="" ref="0x10489ec60"/></from>
      <to><interface-ref name="OppoRouting" scoped="" ref="0x1048e8de8"/></to>
    </wire>
    <wire loc="23:../../tos/chips/cc2420/x-lpl/CC2420xLplC.nc">
      <from><interface-ref name="OppoRouting" scoped="" ref="0x1048e8de8"/></from>
      <to><interface-ref name="OppoRouting" scoped="" ref="0x104333080"/></to>
    </wire>
    <wire loc="24:../../tos/chips/cc2420/x-lpl/CC2420xLplC.nc">
      <from><interface-ref name="CC2420xControl" scoped="" ref="0x1048e3cc8"/></from>
      <to><interface-ref name="CC2420xControl" scoped="" ref="0x10491ccc8"/></to>
    </wire>
    <wire loc="25:../../tos/chips/cc2420/x-lpl/CC2420xLplC.nc">
      <from><interface-ref name="CC2420xProfile" scoped="" ref="0x1048e6540"/></from>
      <to><interface-ref name="CC2420xProfile" scoped="" ref="0x10432f9a8"/></to>
    </wire>
    <wire loc="51:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x104886bc8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x1048eaa48"/></to>
    </wire>
    <wire loc="18:../../tos/chips/cc2420/x-lpl/CC2420xLplC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x1048eaa48"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x1048de600"/></to>
    </wire>
    <wire loc="52:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x1048849b8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x1048e8108"/></to>
    </wire>
    <wire loc="20:../../tos/chips/cc2420/x-lpl/CC2420xLplC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x1048e8108"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x1048ddc30"/></to>
    </wire>
    <wire loc="53:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSnoop" scoped="" ref="0x104883060"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x1048e87a0"/></to>
    </wire>
    <wire loc="21:../../tos/chips/cc2420/x-lpl/CC2420xLplC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x1048e87a0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x104331868"/></to>
    </wire>
    <wire loc="54:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="BulkSend" scoped="" ref="0x104884020"/></from>
      <to><interface-ref name="BulkSend" scoped="" ref="0x1048e9798"/></to>
    </wire>
    <wire loc="19:../../tos/chips/cc2420/x-lpl/CC2420xLplC.nc">
      <from><interface-ref name="BulkSend" scoped="" ref="0x1048e9798"/></from>
      <to><interface-ref name="BulkSend" scoped="" ref="0x1048dd300"/></to>
    </wire>
    <wire loc="55:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LplxPacket" scoped="" ref="0x104883660"/></from>
      <to><interface-ref name="LplxPacket" scoped="" ref="0x104b1bcd8"/></to>
    </wire>
    <wire loc="56:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x1048bc8c8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x104b5e020"/></to>
    </wire>
    <wire loc="57:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x1048bd2c0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x104b609a0"/></to>
    </wire>
    <wire loc="60:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x1048bb5a8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x10451e9d0"/></to>
    </wire>
    <wire loc="22:../../tos/chips/cc2420/x-lpl/CC2420xLplC.nc">
      <from><interface-ref name="RadioTimerUpdate" scoped="" ref="0x1048e3350"/></from>
      <to><interface-ref name="RadioTimerUpdate" scoped="" ref="0x10491c350"/></to>
    </wire>
    <wire loc="30:../../tos/chips/cc2420/x-lpl/CC2420xLplC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x10491b580"/></from>
      <to><interface-ref name="LplSend" scoped="" ref="0x10433b360"/></to>
    </wire>
    <wire loc="31:../../tos/chips/cc2420/x-lpl/CC2420xLplC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x10491bdf0"/></from>
      <to><interface-ref name="LplReceive" scoped="" ref="0x104317020"/></to>
    </wire>
    <wire loc="32:../../tos/chips/cc2420/x-lpl/CC2420xLplC.nc">
      <from><interface-ref name="LplTime" scoped="" ref="0x10491abe8"/></from>
      <to><interface-ref name="LplTime" scoped="" ref="0x104330a50"/></to>
    </wire>
    <wire loc="35:../../tos/chips/cc2420/x-lpl/CC2420xLplC.nc">
      <from><interface-ref name="SleepTimer" scoped="" ref="0x10490ec30"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x10496e1c8"/></to>
    </wire>
    <wire loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x10496e1c8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x104966a18"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="38:../../tos/chips/cc2420/x-lpl/CC2420xLplC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x10490a080"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x104b31530"/></to>
    </wire>
    <wire loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x104b31530"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x104b2a320"/></to>
    </wire>
    <wire loc="41:../../tos/chips/cc2420/x-lpl/CC2420xLplC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x10490a810"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x10451e9d0"/></to>
    </wire>
    <wire loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x104966a18"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x10495d1c8"/></to>
    </wire>
    <wire loc="47:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x10495d1c8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x104b13328"/></to>
    </wire>
    <wire loc="46:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x104960430"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x104996b40"/></to>
    </wire>
    <wire loc="41:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x104996b40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x105017a80"/></to>
    </wire>
    <wire loc="50:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x104b0d678"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x104a92528"/></to>
    </wire>
    <wire loc="51:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x104a8d6b0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x104a774b8"/></to>
    </wire>
    <wire loc="42:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x104a774b8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x105010128"/></to>
    </wire>
    <wire loc="52:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x104b039d0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x1049f42e8"/></to>
    </wire>
    <wire loc="39:../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x1049f42e8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x104a178d8"/></to>
    </wire>
    <wire loc="41:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x105017a80"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x104ffa7a8"/></to>
    </wire>
    <wire loc="44:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x10500a450"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x1050162d0"/></to>
    </wire>
    <wire loc="42:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x1050162d0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x104ff9020"/></to>
    </wire>
    <wire loc="45:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x10500d230"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x1049f42e8"/></to>
    </wire>
    <wire loc="44:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x104ff6020"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x1050006e8"/></to>
    </wire>
    <wire loc="38:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x1050006e8"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x1049bb020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="45:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x104ff55b8"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x104fffd60"/></to>
    </wire>
    <wire loc="39:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x104fffd60"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x1049bab60"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="46:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x104ff48c8"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x104ffd020"/></to>
    </wire>
    <wire loc="40:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x104ffd020"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x1049b7498"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="47:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x104ff25b8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x10451e9d0"/></to>
    </wire>
    <wire loc="14:../../tos/chips/msp430/timer/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x1049bb020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerA" scoped="" ref="0x1040fd930"/></to>
    </wire>
    <wire loc="15:../../tos/chips/msp430/timer/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x1049bab60"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlA0" scoped="" ref="0x1040f6da8"/></to>
    </wire>
    <wire loc="16:../../tos/chips/msp430/timer/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x1049b7498"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA0" scoped="" ref="0x10410ea88"/></to>
    </wire>
    <wire loc="18:../../tos/chips/msp430/timer/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x1049bb020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerA" scoped="" ref="0x1040fd930"/></to>
    </wire>
    <wire loc="19:../../tos/chips/msp430/timer/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x1049bab60"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlA1" scoped="" ref="0x1040fb218"/></to>
    </wire>
    <wire loc="20:../../tos/chips/msp430/timer/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x1049b7498"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA1" scoped="" ref="0x1040f3868"/></to>
    </wire>
    <wire loc="22:../../tos/chips/msp430/timer/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x1049bb020"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerA" scoped="" ref="0x1040fd930"/></to>
    </wire>
    <wire loc="23:../../tos/chips/msp430/timer/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x1049bab60"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlA2" scoped="" ref="0x1040f5710"/></to>
    </wire>
    <wire loc="24:../../tos/chips/msp430/timer/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x1049b7498"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA2" scoped="" ref="0x1040f26e0"/></to>
    </wire>
    <wire loc="41:../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x104a2fb10"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x1049eb118"/></to>
    </wire>
    <wire loc="39:../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Counter32khz" scoped="" ref="0x1049eb118"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x1049e6888"/></to>
    </wire>
    <wire loc="44:../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="RadioTimerUpdate" scoped="" ref="0x104a2dad0"/></from>
      <to><interface-ref name="RadioTimerUpdate" scoped="" ref="0x1048e3350"/></to>
    </wire>
    <wire loc="40:../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x104a1d8c0"/></from>
      <to><interface-ref name="TimerA" scoped="" ref="0x1040fd930"/></to>
    </wire>
    <wire loc="76:../../tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x104ad0900"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x103bffca0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:../../tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x104b07020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x103bffca0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x104b2f4c0"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x104b2b2b8"/></to>
    </wire>
    <wire loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x104b35758"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x104b30a40"/></to>
    </wire>
    <wire loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x104b88760"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x10486b920"/></to>
    </wire>
    <wire loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x104b873f0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x10486a5d0"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/MainC.nc">
      <documentation loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="40:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformC.nc">
      <documentation loc="34:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre and Cory Sharp&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="3:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformP.nc" safe="">
      <module/>
    </component>
    <component qname="MotePlatformC" loc="1:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosb/MotePlatformC.nc" safe="">
      <module/>
    </component>
    <component qname="MoteClockC" loc="37:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosb/MoteClockC.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosb/MoteClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockC" loc="26:../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <documentation loc="22:../../tos/chips/msp430/timer/Msp430ClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockP" loc="38:../../tos/chips/msp430/timer/Msp430ClockP.nc" safe="">
      <module/>
    </component>
    <component qname="Msp430TimerC" loc="26:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <documentation loc="22:../../tos/chips/msp430/timer/Msp430TimerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA" loc="28(Msp430TimerC.Msp430TimerA):../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:302">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:368">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:352">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB" loc="28(Msp430TimerC.Msp430TimerB):../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:286">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:400">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:384">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA0" loc="28(Msp430TimerC.Msp430TimerA0):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="22:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:354">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:370">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA1" loc="28(Msp430TimerC.Msp430TimerA1):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="22:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:356">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:372">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA2" loc="28(Msp430TimerC.Msp430TimerA2):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="22:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:358">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:374">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB0" loc="28(Msp430TimerC.Msp430TimerB0):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="22:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:386">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:402">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerCommonP" loc="2:../../tos/chips/msp430/timer/Msp430TimerCommonP.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420xRTxP" loc="6:../../tos/chips/cc2420/x-rtx/CC2420xRTxP.nc">
      <module/>
    </component>
    <component qname="LedsC" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/LedsC.nc">
      <documentation loc="34:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="40:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <documentation loc="34:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <documentation loc="35:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for general-purpose I/O.&#10;&#10; @author Joe Polastre&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC.P10" loc="39(HplMsp430GeneralIOC.P10):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P11" loc="39(HplMsp430GeneralIOC.P11):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P12" loc="39(HplMsp430GeneralIOC.P12):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P13" loc="39(HplMsp430GeneralIOC.P13):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P14" loc="39(HplMsp430GeneralIOC.P14):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P15" loc="39(HplMsp430GeneralIOC.P15):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P16" loc="39(HplMsp430GeneralIOC.P16):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P17" loc="39(HplMsp430GeneralIOC.P17):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P20" loc="39(HplMsp430GeneralIOC.P20):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P21" loc="39(HplMsp430GeneralIOC.P21):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P22" loc="39(HplMsp430GeneralIOC.P22):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P23" loc="39(HplMsp430GeneralIOC.P23):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P24" loc="39(HplMsp430GeneralIOC.P24):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P25" loc="39(HplMsp430GeneralIOC.P25):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P26" loc="39(HplMsp430GeneralIOC.P26):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P27" loc="39(HplMsp430GeneralIOC.P27):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P30" loc="39(HplMsp430GeneralIOC.P30):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P31" loc="39(HplMsp430GeneralIOC.P31):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P32" loc="39(HplMsp430GeneralIOC.P32):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P33" loc="39(HplMsp430GeneralIOC.P33):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P34" loc="39(HplMsp430GeneralIOC.P34):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P35" loc="39(HplMsp430GeneralIOC.P35):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P36" loc="39(HplMsp430GeneralIOC.P36):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P37" loc="39(HplMsp430GeneralIOC.P37):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P40" loc="39(HplMsp430GeneralIOC.P40):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P41" loc="39(HplMsp430GeneralIOC.P41):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P42" loc="39(HplMsp430GeneralIOC.P42):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P43" loc="39(HplMsp430GeneralIOC.P43):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P44" loc="39(HplMsp430GeneralIOC.P44):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P45" loc="39(HplMsp430GeneralIOC.P45):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P46" loc="39(HplMsp430GeneralIOC.P46):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P47" loc="39(HplMsp430GeneralIOC.P47):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P50" loc="39(HplMsp430GeneralIOC.P50):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P51" loc="39(HplMsp430GeneralIOC.P51):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P52" loc="39(HplMsp430GeneralIOC.P52):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P53" loc="39(HplMsp430GeneralIOC.P53):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P54" loc="39(HplMsp430GeneralIOC.P54):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P55" loc="39(HplMsp430GeneralIOC.P55):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P56" loc="39(HplMsp430GeneralIOC.P56):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P57" loc="39(HplMsp430GeneralIOC.P57):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P60" loc="39(HplMsp430GeneralIOC.P60):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P61" loc="39(HplMsp430GeneralIOC.P61):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P62" loc="39(HplMsp430GeneralIOC.P62):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P63" loc="39(HplMsp430GeneralIOC.P63):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P64" loc="39(HplMsp430GeneralIOC.P64):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P65" loc="39(HplMsp430GeneralIOC.P65):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P66" loc="39(HplMsp430GeneralIOC.P66):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P67" loc="39(HplMsp430GeneralIOC.P67):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led0Impl" loc="42(PlatformLedsC.Led0Impl):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led1Impl" loc="42(PlatformLedsC.Led1Impl):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led2Impl" loc="42(PlatformLedsC.Led2Impl):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="McuSleepC" loc="49:../../tos/chips/msp430/McuSleepC.nc" safe="">
      <documentation loc="33:../../tos/chips/msp430/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430. Code for low power calculation copied from older&#10; msp430hardware.h by Vlado Handziski, Joe Polastre, and Cory Sharp.&#10;&#10;&#10; @author Philip Levis&#10; @author Vlado Handziski&#10; @author Joe Polastre&#10; @author Cory Sharp&#10; @date   October 26, 2005&#10; @see  Please refer to TEP 112 for more information about this component and its&#10;          intended use.&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MoteClockP" loc="38:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosb/MoteClockP.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosb/MoteClockP.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="BulkTransferTestC" loc="47:BulkTransferTestC.nc" safe="">
      <documentation loc="36:BulkTransferTestC.nc">
        <short>&#10; Implementation of the RadioCountToLeds application.</short>
        <long>&#10; Implementation of the RadioCountToLeds application. RadioCountToLeds&#10; maintains a 4Hz counter, broadcasting its value in an AM packet&#10; every time it gets updated. A RadioCountToLeds node that hears a counter&#10; displays the bottom three bits on its LEDs. This application is a useful&#10; test to show that basic AM communication and timers work.&#10;&#10; @author Philip Levis&#10; @date   June 6 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="BulkTransferTestAppC.AMSenderC" loc="47(BulkTransferTestAppC.AMSenderC):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMSenderC.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="BulkTransferTestAppC.AMSenderC.SenderC" loc="47(BulkTransferTestAppC.AMSenderC.SenderC):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x1041d43b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="BulkTransferTestAppC.AMSenderC.SenderC.AMQueueEntryP" loc="43(BulkTransferTestAppC.AMSenderC.SenderC.AMQueueEntryP):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x1041d43b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueP.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="45(AMQueueP.AMQueueImplP):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="3:../../tos/platforms/telosa/ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageC" loc="9:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageP" loc="5:../../tos/chips/cc2420/CC2420ActiveMessageP.nc" safe="">
      <module/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420xLplC" loc="1:../../tos/chips/cc2420/x-lpl/CC2420xLplC.nc">
      <configuration/>
    </component>
    <component qname="CC2420xLplP" loc="9:../../tos/chips/cc2420/x-lpl/CC2420xLplP.nc">
      <module/>
    </component>
    <component qname="CC2420xLplC.SleepTimer" loc="44(CC2420xLplC.SleepTimer):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TimerMilliP.nc">
      <documentation loc="34:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="32:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <documentation loc="22:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
        <short>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.</short>
        <long>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.  TimerMilliC in tos/system/ uses this component to&#10; allocate new timers.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C" loc="30(HilTimerMilliC.AlarmMilli32C):../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <documentation loc="22:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom" loc="30(HilTimerMilliC.AlarmMilli32C.AlarmFrom):../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="22:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer" loc="26(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer):../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="22:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzMapC" loc="7:../../tos/chips/msp430/timer/Msp430Timer32khzMapC.nc">
      <documentation loc="1:../../tos/chips/msp430/timer/Msp430Timer32khzMapC.nc">
        <short>&#10; Msp430TimerMicroMapC presents as paramaterized interfaces all of the Micro&#10; hardware timers on the MSP430 that are available for compile time allocation&#10; by &#34;new AlarmMicro16C()&#34;, &#34;new AlarmMicro32C()&#34;, and so on.</short>
        <long>&#10; Msp430TimerMicroMapC presents as paramaterized interfaces all of the Micro&#10; hardware timers on the MSP430 that are available for compile time allocation&#10; by &#34;new AlarmMicro16C()&#34;, &#34;new AlarmMicro32C()&#34;, and so on.&#10;*</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm" loc="34(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm):../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="23:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10477c1d8"/>
            <typename><typedef-ref name="T32khz" ref="0x10477c530"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C" loc="30:../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <documentation loc="22:../../tos/chips/msp430/timer/CounterMilli32C.nc">
        <short>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.</short>
        <long>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC" loc="30:../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <documentation loc="22:../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
        <short>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.</short>
        <long>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC.Counter" loc="31(Msp430Counter32khzC.Counter):../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="22:../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10477c1d8"/>
            <typename><typedef-ref name="T32khz" ref="0x10477c530"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C.Transform" loc="56(CounterMilli32C.Transform):../../tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10477da18"/>
            <typename><typedef-ref name="TMilli" ref="0x10477dd70"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x103977020"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10477c1d8"/>
            <typename><typedef-ref name="T32khz" ref="0x10477c530"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x103976b20"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x103977020"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.Transform" loc="51(HilTimerMilliC.AlarmMilli32C.Transform):../../tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10477da18"/>
            <typename><typedef-ref name="TMilli" ref="0x10477dd70"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x103977020"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10477c1d8"/>
            <typename><typedef-ref name="T32khz" ref="0x10477c530"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x103976b20"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):../../tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:../../tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10477da18"/>
            <typename><typedef-ref name="TMilli" ref="0x10477dd70"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="48(HilTimerMilliC.VirtualizeTimerC):../../tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:../../tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10477da18"/>
            <typename><typedef-ref name="TMilli" ref="0x10477dd70"/></typename>
          </type-tag>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10477da18"/>
            <typename><typedef-ref name="TMilli" ref="0x10477dd70"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RandomC" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/RandomC.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420xPacketP" loc="3:../../tos/chips/cc2420/x-packet/CC2420xPacketP.nc">
      <module/>
    </component>
    <component qname="BulkTransferTestAppC.AMReceiverC" loc="43(BulkTransferTestAppC.AMReceiverC):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMReceiverC.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430TimerP" loc="28:../../tos/chips/msp430/timer/Msp430TimerP.nc" abstract="" safe="">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxIV_addr" ref="0x10411c878" loc="29:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x103976b20"/></typename>
          </type-int>
        </constant>
        <constant name="TxR_addr" ref="0x10411cbf0" loc="30:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x103976b20"/></typename>
          </type-int>
        </constant>
        <constant name="TxCTL_addr" ref="0x10411b020" loc="31:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x103976b20"/></typename>
          </type-int>
        </constant>
        <constant name="TxIFG" ref="0x10411b378" loc="32:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x103976b20"/></typename>
          </type-int>
        </constant>
        <constant name="TxCLR" ref="0x10411b6d0" loc="33:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x103976b20"/></typename>
          </type-int>
        </constant>
        <constant name="TxIE" ref="0x10411ba20" loc="34:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x103976b20"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL0" ref="0x10411bd88" loc="35:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x103976b20"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL1" ref="0x10411a150" loc="36:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x103976b20"/></typename>
          </type-int>
        </constant>
        <constant name="isClockSourceAsync" ref="0x10411a500" loc="37:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x103bf01d0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430TimerCapComP" loc="28:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc" abstract="" safe="">
      <documentation loc="22:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxCCTLx_addr" ref="0x104141928" loc="29:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x103976b20"/></typename>
          </type-int>
        </constant>
        <constant name="TxCCRx_addr" ref="0x104141cd8" loc="30:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x103976b20"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOP" loc="39:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc" abstract="" safe="">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_in_addr" ref="0x1045d1998" loc="40:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_out_addr" ref="0x1045d1d20" loc="41:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_dir_addr" ref="0x1045d0108" loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_sel_addr" ref="0x1045d0490" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="pin" ref="0x1045d07e0" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x103976790"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430GpioC" loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc" abstract="" safe="">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AMSenderC" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMSenderC.nc" abstract="">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x1047d2dd8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x1041d43b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DirectAMSenderC" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x1047f55b8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x1041d43b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x1047ec170" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x1041d43b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x1048412a8" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmMilli32C" loc="30:../../tos/chips/msp430/timer/AlarmMilli32C.nc" abstract="">
      <documentation loc="22:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz16C" loc="30:../../tos/chips/msp430/timer/Alarm32khz16C.nc" abstract="">
      <documentation loc="22:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzC" loc="26:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc" abstract="">
      <documentation loc="22:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430AlarmC" loc="34:../../tos/chips/msp430/timer/Msp430AlarmC.nc" abstract="" safe="">
      <documentation loc="23:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x1049a5a10" loc="34:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
          <component-ref qname="Msp430AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x1049a5a10"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430CounterC" loc="31:../../tos/chips/msp430/timer/Msp430CounterC.nc" abstract="" safe="">
      <documentation loc="22:../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x1049e5020" loc="31:../../tos/chips/msp430/timer/Msp430CounterC.nc">
          <component-ref qname="Msp430CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x1049e5020"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="56:../../tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x1049ecdb8" loc="57:../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x1049ecdb8"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x104a165a8" loc="58:../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x104a165a8"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x104a16970" loc="59:../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x104a16970"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x104a15110" loc="60:../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x104a15110"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x104a154b8" loc="61:../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x103976790"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x104a15c48" loc="62:../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x104a15c48"/></type-var>
        </typedef>
        <constant name="isdco" ref="0x104a13020" loc="63:../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x103bf01d0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:../../tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x104a274d8" loc="52:../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x104a274d8"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x104a27c40" loc="53:../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x104a27c40"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x104a26068" loc="54:../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x104a26068"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x104a267e0" loc="55:../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x104a267e0"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x104a26b88" loc="56:../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x103976790"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:../../tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:../../tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x104a72688" loc="46:../../tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x104a72688"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="48:../../tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:../../tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x104acdda0" loc="48:../../tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x104acdda0"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x104aca108" loc="48:../../tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x104b02310" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x104b02310"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AMReceiverC" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x104b90d90" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x1041d43b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x10406e680" loc="58:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x10406e680"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10406e9d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x10406f220" loc="57:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x10406f220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x10406f570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x1040725b8" loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x1040725b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x104072908"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x1040694f8" loc="6:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteInit" scoped="" ref="0x1040694f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x104069848"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x10406c740" loc="4:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x10406c740"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10406ca90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteClockInit" ref="0x10406ce10" loc="5:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x10406ce10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1040691a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x104069b98" loc="7:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LedsInit" scoped="" ref="0x104069b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x104068020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x10406b610" loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosb/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x10406b610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10406b960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MoteClockInit" ref="0x1040880e8" loc="39:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosb/MoteClockC.nc">
      <component-ref qname="MoteClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x1040880e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x104088438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x10409b2b8" loc="29:../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x10409b2b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x1040a11a8"/>
        <function-ref name="initTimerB" scoped="" ref="0x10409b790"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x10409b918"/>
        <function-ref name="initTimerA" scoped="" ref="0x10409baa0"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x10409b608"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x10409bc28"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x10409bdb0"/>
        <function-ref name="initClocks" scoped="" ref="0x1040a1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x1040a2020" loc="28:../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x1040a2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1040a2370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x1040aaba0" loc="41:../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x1040aaba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x1040a9ad8"/>
        <function-ref name="initTimerB" scoped="" ref="0x1040a91a8"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x1040a9330"/>
        <function-ref name="initTimerA" scoped="" ref="0x1040a94b8"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x1040a9020"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x1040a9640"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x1040a97c8"/>
        <function-ref name="initClocks" scoped="" ref="0x1040a9950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x1040a9e08" loc="42:../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x1040a9e08"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x1040a81a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x1040aa530" loc="40:../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x1040aa530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1040aa880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA2" ref="0x1040f5710" loc="31:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA2" scoped="" ref="0x1040f5710"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x1040f5a60"/>
        <function-ref name="getControl" scoped="" ref="0x1040f5be8"/>
        <function-ref name="enableEvents" scoped="" ref="0x1040f5d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x1040f4020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x1040f41a8"/>
        <function-ref name="disableEvents" scoped="" ref="0x1040f4330"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x1040f44b8"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x1040f4640"/>
        <function-ref name="setControl" scoped="" ref="0x1040f47c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA1" ref="0x10410c0c0" loc="36:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA1" scoped="" ref="0x10410c0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10410c410"/>
        <function-ref name="setSynchronous" scoped="" ref="0x10410c598"/>
        <function-ref name="captured" scoped="" ref="0x10410c720"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10410c8a8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10410ca30"/>
        <function-ref name="setEdge" scoped="" ref="0x10410cbb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB0" ref="0x104104710" loc="40:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB0" scoped="" ref="0x104104710"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x104104a60"/>
        <function-ref name="getControl" scoped="" ref="0x104104be8"/>
        <function-ref name="enableEvents" scoped="" ref="0x104104d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x104103020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x1041031a8"/>
        <function-ref name="disableEvents" scoped="" ref="0x104103330"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x1041034b8"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x104103640"/>
        <function-ref name="setControl" scoped="" ref="0x1041037c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA1" ref="0x1040f3868" loc="33:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0x1040f3868"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x1040f3bb8"/>
        <function-ref name="setEvent" scoped="" ref="0x1040f3d40"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x1040f2020"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x1040f21a8"/>
        <function-ref name="fired" scoped="" ref="0x1040f2330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA0" ref="0x1040f6da8" loc="29:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0x1040f6da8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x1040fc170"/>
        <function-ref name="getControl" scoped="" ref="0x1040fc2f8"/>
        <function-ref name="enableEvents" scoped="" ref="0x1040fc480"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x1040fc608"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x1040fc790"/>
        <function-ref name="disableEvents" scoped="" ref="0x1040fc918"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x1040fcaa0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x1040fcc28"/>
        <function-ref name="setControl" scoped="" ref="0x1040fcdb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA2" ref="0x10410b020" loc="37:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA2" scoped="" ref="0x10410b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10410b370"/>
        <function-ref name="setSynchronous" scoped="" ref="0x10410b4f8"/>
        <function-ref name="captured" scoped="" ref="0x10410b680"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10410b808"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10410b990"/>
        <function-ref name="setEdge" scoped="" ref="0x10410bb18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerA" ref="0x1040fd930" loc="28:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0x1040fd930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1040fdc80"/>
        <function-ref name="setClockSource" scoped="" ref="0x1040fde08"/>
        <function-ref name="enableEvents" scoped="" ref="0x1040e5020"/>
        <function-ref name="get" scoped="" ref="0x1040e51a8"/>
        <function-ref name="disableEvents" scoped="" ref="0x1040e5330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1040e54b8"/>
        <function-ref name="getMode" scoped="" ref="0x1040e5640"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1040e57c8"/>
        <function-ref name="overflow" scoped="" ref="0x1040e5950"/>
        <function-ref name="setMode" scoped="" ref="0x1040e5ad8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x1040e5c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA2" ref="0x1040f26e0" loc="34:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA2" scoped="" ref="0x1040f26e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x1040f2a30"/>
        <function-ref name="setEvent" scoped="" ref="0x1040f2bb8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x1040f2d40"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x10410d020"/>
        <function-ref name="fired" scoped="" ref="0x10410d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA1" ref="0x1040fb218" loc="30:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0x1040fb218"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x1040fb568"/>
        <function-ref name="getControl" scoped="" ref="0x1040fb6f0"/>
        <function-ref name="enableEvents" scoped="" ref="0x1040fb878"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x1040fba00"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x1040fbb88"/>
        <function-ref name="disableEvents" scoped="" ref="0x1040fbd10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x1040f5020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x1040f51a8"/>
        <function-ref name="setControl" scoped="" ref="0x1040f5330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA0" ref="0x1041061b0" loc="35:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA0" scoped="" ref="0x1041061b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x104106500"/>
        <function-ref name="setSynchronous" scoped="" ref="0x104106688"/>
        <function-ref name="captured" scoped="" ref="0x104106810"/>
        <function-ref name="clearOverflow" scoped="" ref="0x104106998"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x104106b20"/>
        <function-ref name="setEdge" scoped="" ref="0x104106ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA0" ref="0x10410ea88" loc="32:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0x10410ea88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10410edd8"/>
        <function-ref name="setEvent" scoped="" ref="0x1040f3020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x1040f31a8"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x1040f3330"/>
        <function-ref name="fired" scoped="" ref="0x1040f34b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerB" ref="0x104105020" loc="39:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerB" scoped="" ref="0x104105020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x104105370"/>
        <function-ref name="setClockSource" scoped="" ref="0x1041054f8"/>
        <function-ref name="enableEvents" scoped="" ref="0x104105680"/>
        <function-ref name="get" scoped="" ref="0x104105808"/>
        <function-ref name="disableEvents" scoped="" ref="0x104105990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x104105b18"/>
        <function-ref name="getMode" scoped="" ref="0x104105ca0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x104105e28"/>
        <function-ref name="overflow" scoped="" ref="0x104104020"/>
        <function-ref name="setMode" scoped="" ref="0x1041041a8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x104104330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB0" ref="0x1041029f0" loc="42:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB0" scoped="" ref="0x1041029f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x104102d40"/>
        <function-ref name="setSynchronous" scoped="" ref="0x104100020"/>
        <function-ref name="captured" scoped="" ref="0x1041001a8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x104100330"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1041004b8"/>
        <function-ref name="setEdge" scoped="" ref="0x104100640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB0" ref="0x104103b78" loc="41:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB0" scoped="" ref="0x104103b78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x104102020"/>
        <function-ref name="setEvent" scoped="" ref="0x1041021a8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x104102330"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x1041024b8"/>
        <function-ref name="fired" scoped="" ref="0x104102640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x10414bc70" loc="42:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x10414bc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x104149020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x10414b658" loc="41:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x10414b658"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x10414b9a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x1041492e8" loc="43:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x1041492e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x104149638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x10414b020" loc="40:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x10414b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x103976790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x10414b390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x10414d798" loc="39:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x10414d798"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10414dae8"/>
        <function-ref name="setClockSource" scoped="" ref="0x10414dc70"/>
        <function-ref name="enableEvents" scoped="" ref="0x10414ddf8"/>
        <function-ref name="get" scoped="" ref="0x10414c020"/>
        <function-ref name="disableEvents" scoped="" ref="0x10414c1a8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10414c330"/>
        <function-ref name="getMode" scoped="" ref="0x10414c4b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10414c640"/>
        <function-ref name="overflow" scoped="" ref="0x10414c7c8"/>
        <function-ref name="setMode" scoped="" ref="0x10414c950"/>
        <function-ref name="setInputDivider" scoped="" ref="0x10414cad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x104143638" loc="42:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x104143638"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x104143988"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x104143020" loc="41:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x104143020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x104143370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x104143c50" loc="43:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x104143c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x104142020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x1041448a0" loc="40:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x1041448a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x103976790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x104144c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x1041451e8" loc="39:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x1041451e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x104145538"/>
        <function-ref name="setClockSource" scoped="" ref="0x1041456c0"/>
        <function-ref name="enableEvents" scoped="" ref="0x104145848"/>
        <function-ref name="get" scoped="" ref="0x1041459d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x104145b58"/>
        <function-ref name="clearOverflow" scoped="" ref="0x104145ce0"/>
        <function-ref name="getMode" scoped="" ref="0x104145e68"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x104144020"/>
        <function-ref name="overflow" scoped="" ref="0x1041441a8"/>
        <function-ref name="setMode" scoped="" ref="0x104144330"/>
        <function-ref name="setInputDivider" scoped="" ref="0x1041444b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x1041a1c58" loc="35:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x1041a1c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x1041a0020"/>
        <function-ref name="setSynchronous" scoped="" ref="0x1041a01a8"/>
        <function-ref name="captured" scoped="" ref="0x1041a0330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1041a04b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1041a0640"/>
        <function-ref name="setEdge" scoped="" ref="0x1041a07c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x10413fc80" loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x10413fc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x1041a2020"/>
        <function-ref name="getControl" scoped="" ref="0x1041a21a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x1041a2330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x1041a24b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x1041a2640"/>
        <function-ref name="disableEvents" scoped="" ref="0x1041a27c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x1041a2950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x1041a2ad8"/>
        <function-ref name="setControl" scoped="" ref="0x1041a2c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x10419e100" loc="37:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x10419e100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x10419e450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x1041a1020" loc="34:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x1041a1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x1041a1370"/>
        <function-ref name="setEvent" scoped="" ref="0x1041a14f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x1041a1680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x1041a1808"/>
        <function-ref name="fired" scoped="" ref="0x1041a1990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x1041a0a90" loc="36:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x1041a0a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1041a0de0"/>
        <function-ref name="setClockSource" scoped="" ref="0x10419f020"/>
        <function-ref name="enableEvents" scoped="" ref="0x10419f1a8"/>
        <function-ref name="get" scoped="" ref="0x10419f330"/>
        <function-ref name="disableEvents" scoped="" ref="0x10419f4b8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10419f640"/>
        <function-ref name="getMode" scoped="" ref="0x10419f7c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10419f950"/>
        <function-ref name="overflow" scoped="" ref="0x10419fad8"/>
        <function-ref name="setMode" scoped="" ref="0x10419fc60"/>
        <function-ref name="setInputDivider" scoped="" ref="0x10419fde8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x104199c58" loc="35:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x104199c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x104198020"/>
        <function-ref name="setSynchronous" scoped="" ref="0x1041981a8"/>
        <function-ref name="captured" scoped="" ref="0x104198330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1041984b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x104198640"/>
        <function-ref name="setEdge" scoped="" ref="0x1041987c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x10419cc80" loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x10419cc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x10419a020"/>
        <function-ref name="getControl" scoped="" ref="0x10419a1a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x10419a330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x10419a4b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x10419a640"/>
        <function-ref name="disableEvents" scoped="" ref="0x10419a7c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x10419a950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x10419aad8"/>
        <function-ref name="setControl" scoped="" ref="0x10419ac60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x104196100" loc="37:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x104196100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x104196450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x104199020" loc="34:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x104199020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x104199370"/>
        <function-ref name="setEvent" scoped="" ref="0x1041994f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x104199680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x104199808"/>
        <function-ref name="fired" scoped="" ref="0x104199990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x104198a90" loc="36:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x104198a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x104198de0"/>
        <function-ref name="setClockSource" scoped="" ref="0x104197020"/>
        <function-ref name="enableEvents" scoped="" ref="0x1041971a8"/>
        <function-ref name="get" scoped="" ref="0x104197330"/>
        <function-ref name="disableEvents" scoped="" ref="0x1041974b8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x104197640"/>
        <function-ref name="getMode" scoped="" ref="0x1041977c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x104197950"/>
        <function-ref name="overflow" scoped="" ref="0x104197ad8"/>
        <function-ref name="setMode" scoped="" ref="0x104197c60"/>
        <function-ref name="setInputDivider" scoped="" ref="0x104197de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x104192c58" loc="35:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x104192c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x1041b3020"/>
        <function-ref name="setSynchronous" scoped="" ref="0x1041b31a8"/>
        <function-ref name="captured" scoped="" ref="0x1041b3330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1041b34b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1041b3640"/>
        <function-ref name="setEdge" scoped="" ref="0x1041b37c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x104194c80" loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x104194c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x104193020"/>
        <function-ref name="getControl" scoped="" ref="0x1041931a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x104193330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x1041934b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x104193640"/>
        <function-ref name="disableEvents" scoped="" ref="0x1041937c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x104193950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x104193ad8"/>
        <function-ref name="setControl" scoped="" ref="0x104193c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x1041b1100" loc="37:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x1041b1100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x1041b1450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x104192020" loc="34:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x104192020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x104192370"/>
        <function-ref name="setEvent" scoped="" ref="0x1041924f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x104192680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x104192808"/>
        <function-ref name="fired" scoped="" ref="0x104192990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x1041b3a90" loc="36:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x1041b3a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1041b3de0"/>
        <function-ref name="setClockSource" scoped="" ref="0x1041b2020"/>
        <function-ref name="enableEvents" scoped="" ref="0x1041b21a8"/>
        <function-ref name="get" scoped="" ref="0x1041b2330"/>
        <function-ref name="disableEvents" scoped="" ref="0x1041b24b8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1041b2640"/>
        <function-ref name="getMode" scoped="" ref="0x1041b27c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1041b2950"/>
        <function-ref name="overflow" scoped="" ref="0x1041b2ad8"/>
        <function-ref name="setMode" scoped="" ref="0x1041b2c60"/>
        <function-ref name="setInputDivider" scoped="" ref="0x1041b2de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x1041adc58" loc="35:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x1041adc58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x1041ab020"/>
        <function-ref name="setSynchronous" scoped="" ref="0x1041ab1a8"/>
        <function-ref name="captured" scoped="" ref="0x1041ab330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1041ab4b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1041ab640"/>
        <function-ref name="setEdge" scoped="" ref="0x1041ab7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x1041afc80" loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x1041afc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x1041ae020"/>
        <function-ref name="getControl" scoped="" ref="0x1041ae1a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x1041ae330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x1041ae4b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x1041ae640"/>
        <function-ref name="disableEvents" scoped="" ref="0x1041ae7c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x1041ae950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x1041aead8"/>
        <function-ref name="setControl" scoped="" ref="0x1041aec60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x1041a9100" loc="37:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x1041a9100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x1041a9450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x1041ad020" loc="34:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x1041ad020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x1041ad370"/>
        <function-ref name="setEvent" scoped="" ref="0x1041ad4f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x1041ad680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x1041ad808"/>
        <function-ref name="fired" scoped="" ref="0x1041ad990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x1041aba90" loc="36:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x1041aba90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1041abde0"/>
        <function-ref name="setClockSource" scoped="" ref="0x1041aa020"/>
        <function-ref name="enableEvents" scoped="" ref="0x1041aa1a8"/>
        <function-ref name="get" scoped="" ref="0x1041aa330"/>
        <function-ref name="disableEvents" scoped="" ref="0x1041aa4b8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1041aa640"/>
        <function-ref name="getMode" scoped="" ref="0x1041aa7c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1041aa950"/>
        <function-ref name="overflow" scoped="" ref="0x1041aaad8"/>
        <function-ref name="setMode" scoped="" ref="0x1041aac60"/>
        <function-ref name="setInputDivider" scoped="" ref="0x1041aade8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA0" ref="0x1041a54f8" loc="4:../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA0" scoped="" ref="0x1041a54f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x1041a5848"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA1" ref="0x1041a5c40" loc="5:../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA1" scoped="" ref="0x1041a5c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x1041a4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB0" ref="0x1041a4418" loc="6:../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB0" scoped="" ref="0x1041a4418"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x1041a4768"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x1041a3080" loc="10:../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x1041a3080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x1041a33d0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x1041a3558"/>
        <function-ref name="led1On" scoped="" ref="0x1041a36e0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x1041a3868"/>
        <function-ref name="led2Toggle" scoped="" ref="0x1041a39f0"/>
        <function-ref name="get" scoped="" ref="0x1041a3b78"/>
        <function-ref name="led1Off" scoped="" ref="0x1041a3d00"/>
        <function-ref name="led2Off" scoped="" ref="0x1041c44b8"/>
        <function-ref name="set" scoped="" ref="0x1041c4020"/>
        <function-ref name="led0On" scoped="" ref="0x1041c41a8"/>
        <function-ref name="led2On" scoped="" ref="0x1041c4330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB1" ref="0x1043337c8" loc="13:../../tos/chips/cc2420/x-rtx/CC2420xRTxP.nc">
      <component-ref qname="CC2420xRTxP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB1" scoped="" ref="0x1043337c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x104333b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x104331868" loc="10:../../tos/chips/cc2420/x-rtx/CC2420xRTxP.nc">
      <component-ref qname="CC2420xRTxP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x104331868"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x104331bb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OppoRouting" ref="0x104333080" loc="12:../../tos/chips/cc2420/x-rtx/CC2420xRTxP.nc">
      <component-ref qname="CC2420xRTxP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OppoRouting" scoped="" ref="0x104333080"/></type-interface>
      <instance>
        <interfacedef-ref qname="OppoRouting"/>
      </instance>
      <interface-functions>
        <function-ref name="setLocalMetric" scoped="" ref="0x1043333d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x104319a20" loc="7:../../tos/chips/cc2420/x-rtx/CC2420xRTxP.nc">
      <component-ref qname="CC2420xRTxP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x104319a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x104319d70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x10432d020" loc="16:../../tos/chips/cc2420/x-rtx/CC2420xRTxP.nc">
      <component-ref qname="CC2420xRTxP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x10432d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x10432d370"/>
        <function-ref name="led0Toggle" scoped="" ref="0x10432d4f8"/>
        <function-ref name="led1On" scoped="" ref="0x10432d680"/>
        <function-ref name="led1Toggle" scoped="" ref="0x10432d808"/>
        <function-ref name="led2Toggle" scoped="" ref="0x10432d990"/>
        <function-ref name="get" scoped="" ref="0x10432db18"/>
        <function-ref name="led1Off" scoped="" ref="0x10432dca0"/>
        <function-ref name="led2Off" scoped="" ref="0x10432c330"/>
        <function-ref name="set" scoped="" ref="0x10432de28"/>
        <function-ref name="led0On" scoped="" ref="0x10432c020"/>
        <function-ref name="led2On" scoped="" ref="0x10432c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420xProfile" ref="0x10432f9a8" loc="14:../../tos/chips/cc2420/x-rtx/CC2420xRTxP.nc">
      <component-ref qname="CC2420xRTxP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420xProfile" scoped="" ref="0x10432f9a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420xProfile"/>
      </instance>
      <interface-functions>
        <function-ref name="getRadioOnTime" scoped="" ref="0x10432fcf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LplSend" ref="0x10433b360" loc="8:../../tos/chips/cc2420/x-rtx/CC2420xRTxP.nc">
      <component-ref qname="CC2420xRTxP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LplSend" scoped="" ref="0x10433b360"/></type-interface>
      <instance>
        <interfacedef-ref qname="LplSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x10433b6b0"/>
        <function-ref name="sendDone" scoped="" ref="0x10433b838"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LplTime" ref="0x104330a50" loc="11:../../tos/chips/cc2420/x-rtx/CC2420xRTxP.nc">
      <component-ref qname="CC2420xRTxP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LplTime" scoped="" ref="0x104330a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="LplTime"/>
      </instance>
      <interface-functions>
        <function-ref name="timeRadio" scoped="" ref="0x104330da0"/>
        <function-ref name="timeCompensated" scoped="" ref="0x104335020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LplReceive" ref="0x104317020" loc="9:../../tos/chips/cc2420/x-rtx/CC2420xRTxP.nc">
      <component-ref qname="CC2420xRTxP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LplReceive" scoped="" ref="0x104317020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LplReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="txDetect" scoped="" ref="0x104317370"/>
        <function-ref name="rxInit" scoped="" ref="0x1043174f8"/>
        <function-ref name="receive" scoped="" ref="0x104317680"/>
        <function-ref name="rxOn" scoped="" ref="0x104317808"/>
        <function-ref name="rxBuffSet" scoped="" ref="0x104317990"/>
        <function-ref name="rxEnable" scoped="" ref="0x104317b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x10451e9d0" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x10451e9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x10451ed20"/>
        <function-ref name="led0Toggle" scoped="" ref="0x10451b020"/>
        <function-ref name="led1On" scoped="" ref="0x10451b1a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x10451b330"/>
        <function-ref name="led2Toggle" scoped="" ref="0x10451b4b8"/>
        <function-ref name="get" scoped="" ref="0x10451b640"/>
        <function-ref name="led1Off" scoped="" ref="0x10451b7c8"/>
        <function-ref name="led2Off" scoped="" ref="0x10451bde8"/>
        <function-ref name="set" scoped="" ref="0x10451b950"/>
        <function-ref name="led0On" scoped="" ref="0x10451bad8"/>
        <function-ref name="led2On" scoped="" ref="0x10451bc60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x10450f580" loc="50:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x10450f580"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10450f8d0"/>
        <function-ref name="isInput" scoped="" ref="0x10450fa58"/>
        <function-ref name="toggle" scoped="" ref="0x10450fbe0"/>
        <function-ref name="isOutput" scoped="" ref="0x10450fd68"/>
        <function-ref name="get" scoped="" ref="0x104515020"/>
        <function-ref name="makeOutput" scoped="" ref="0x1045151a8"/>
        <function-ref name="set" scoped="" ref="0x104515330"/>
        <function-ref name="clr" scoped="" ref="0x1045154b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x10451acb8" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x10451acb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1045170a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x1045157d0" loc="51:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x1045157d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x104515b20"/>
        <function-ref name="isInput" scoped="" ref="0x104515ca8"/>
        <function-ref name="toggle" scoped="" ref="0x104515e30"/>
        <function-ref name="isOutput" scoped="" ref="0x104514020"/>
        <function-ref name="get" scoped="" ref="0x1045141a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x104514330"/>
        <function-ref name="set" scoped="" ref="0x1045144b8"/>
        <function-ref name="clr" scoped="" ref="0x104514640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x104517318" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x104517318"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x104517668"/>
        <function-ref name="led0Toggle" scoped="" ref="0x1045177f0"/>
        <function-ref name="led1On" scoped="" ref="0x104517978"/>
        <function-ref name="led1Toggle" scoped="" ref="0x104517b00"/>
        <function-ref name="led2Toggle" scoped="" ref="0x104517c88"/>
        <function-ref name="get" scoped="" ref="0x104517e10"/>
        <function-ref name="led1Off" scoped="" ref="0x104516020"/>
        <function-ref name="led2Off" scoped="" ref="0x104516640"/>
        <function-ref name="set" scoped="" ref="0x1045161a8"/>
        <function-ref name="led0On" scoped="" ref="0x104516330"/>
        <function-ref name="led2On" scoped="" ref="0x1045164b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x104514958" loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x104514958"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x104514ca8"/>
        <function-ref name="isInput" scoped="" ref="0x104514e30"/>
        <function-ref name="toggle" scoped="" ref="0x10450d020"/>
        <function-ref name="isOutput" scoped="" ref="0x10450d1a8"/>
        <function-ref name="get" scoped="" ref="0x10450d330"/>
        <function-ref name="makeOutput" scoped="" ref="0x10450d4b8"/>
        <function-ref name="set" scoped="" ref="0x10450d640"/>
        <function-ref name="clr" scoped="" ref="0x10450d7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x104518d18" loc="41:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x104518d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1045230a0"/>
        <function-ref name="isInput" scoped="" ref="0x104523228"/>
        <function-ref name="toggle" scoped="" ref="0x1045233b0"/>
        <function-ref name="isOutput" scoped="" ref="0x104523538"/>
        <function-ref name="get" scoped="" ref="0x1045236c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x104523848"/>
        <function-ref name="set" scoped="" ref="0x1045239d0"/>
        <function-ref name="clr" scoped="" ref="0x104523b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x104522020" loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x104522020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x104522370"/>
        <function-ref name="isInput" scoped="" ref="0x1045224f8"/>
        <function-ref name="toggle" scoped="" ref="0x104522680"/>
        <function-ref name="isOutput" scoped="" ref="0x104522808"/>
        <function-ref name="get" scoped="" ref="0x104522990"/>
        <function-ref name="makeOutput" scoped="" ref="0x104522b18"/>
        <function-ref name="set" scoped="" ref="0x104522ca0"/>
        <function-ref name="clr" scoped="" ref="0x104522e28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x1045502d8" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x1045502d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x104550628"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x1045211b0" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x1045211b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x104521500"/>
        <function-ref name="isInput" scoped="" ref="0x104521688"/>
        <function-ref name="toggle" scoped="" ref="0x104521810"/>
        <function-ref name="isOutput" scoped="" ref="0x104521998"/>
        <function-ref name="get" scoped="" ref="0x104521b20"/>
        <function-ref name="makeOutput" scoped="" ref="0x104521ca8"/>
        <function-ref name="set" scoped="" ref="0x104521e30"/>
        <function-ref name="clr" scoped="" ref="0x104550020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x10453b668" loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x10453b668"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10453b9b8"/>
        <function-ref name="isInput" scoped="" ref="0x10453bb40"/>
        <function-ref name="setResistor" scoped="" ref="0x10453bcc8"/>
        <function-ref name="toggle" scoped="" ref="0x10453be50"/>
        <function-ref name="isOutput" scoped="" ref="0x10453a020"/>
        <function-ref name="getResistor" scoped="" ref="0x10453a1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10453a330"/>
        <function-ref name="get" scoped="" ref="0x10453a4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10453a640"/>
        <function-ref name="getRaw" scoped="" ref="0x10453a7c8"/>
        <function-ref name="set" scoped="" ref="0x10453a950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10453aad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10453ac60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x104539020"/>
        <function-ref name="clr" scoped="" ref="0x1045391a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x104557568" loc="66:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x104557568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1045578b8"/>
        <function-ref name="isInput" scoped="" ref="0x104557a40"/>
        <function-ref name="setResistor" scoped="" ref="0x104557bc8"/>
        <function-ref name="toggle" scoped="" ref="0x104557d50"/>
        <function-ref name="isOutput" scoped="" ref="0x104556020"/>
        <function-ref name="getResistor" scoped="" ref="0x1045561a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x104556330"/>
        <function-ref name="get" scoped="" ref="0x1045564b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x104556640"/>
        <function-ref name="getRaw" scoped="" ref="0x1045567c8"/>
        <function-ref name="set" scoped="" ref="0x104556950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x104556ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x104556c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x104555020"/>
        <function-ref name="clr" scoped="" ref="0x1045551a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SDA" ref="0x1045a27d0" loc="145:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SDA" scoped="" ref="0x1045a27d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1045a2b20"/>
        <function-ref name="isInput" scoped="" ref="0x1045a2ca8"/>
        <function-ref name="setResistor" scoped="" ref="0x1045a2e30"/>
        <function-ref name="toggle" scoped="" ref="0x1045a1020"/>
        <function-ref name="isOutput" scoped="" ref="0x1045a11a8"/>
        <function-ref name="getResistor" scoped="" ref="0x1045a1330"/>
        <function-ref name="makeOutput" scoped="" ref="0x1045a14b8"/>
        <function-ref name="get" scoped="" ref="0x1045a1640"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1045a17c8"/>
        <function-ref name="getRaw" scoped="" ref="0x1045a1950"/>
        <function-ref name="set" scoped="" ref="0x1045a1ad8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1045a1c60"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1045a1de8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1045a0120"/>
        <function-ref name="clr" scoped="" ref="0x1045a02a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC6" ref="0x1045e2558" loc="165:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC6" scoped="" ref="0x1045e2558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1045e28a8"/>
        <function-ref name="isInput" scoped="" ref="0x1045e2a30"/>
        <function-ref name="setResistor" scoped="" ref="0x1045e2bb8"/>
        <function-ref name="toggle" scoped="" ref="0x1045e2d40"/>
        <function-ref name="isOutput" scoped="" ref="0x1045e1020"/>
        <function-ref name="getResistor" scoped="" ref="0x1045e11a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x1045e1330"/>
        <function-ref name="get" scoped="" ref="0x1045e14b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1045e1640"/>
        <function-ref name="getRaw" scoped="" ref="0x1045e17c8"/>
        <function-ref name="set" scoped="" ref="0x1045e1950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1045e1ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1045e1c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1045e0020"/>
        <function-ref name="clr" scoped="" ref="0x1045e01a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI0" ref="0x1045a0660" loc="146:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI0" scoped="" ref="0x1045a0660"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1045a09b0"/>
        <function-ref name="isInput" scoped="" ref="0x1045a0b38"/>
        <function-ref name="setResistor" scoped="" ref="0x1045a0cc0"/>
        <function-ref name="toggle" scoped="" ref="0x1045a0e48"/>
        <function-ref name="isOutput" scoped="" ref="0x10459f020"/>
        <function-ref name="getResistor" scoped="" ref="0x10459f1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10459f330"/>
        <function-ref name="get" scoped="" ref="0x10459f4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10459f640"/>
        <function-ref name="getRaw" scoped="" ref="0x10459f7c8"/>
        <function-ref name="set" scoped="" ref="0x10459f950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10459fad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10459fc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10459e020"/>
        <function-ref name="clr" scoped="" ref="0x10459e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port30" ref="0x104553568" loc="71:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port30" scoped="" ref="0x104553568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1045538b8"/>
        <function-ref name="isInput" scoped="" ref="0x104553a40"/>
        <function-ref name="setResistor" scoped="" ref="0x104553bc8"/>
        <function-ref name="toggle" scoped="" ref="0x104553d50"/>
        <function-ref name="isOutput" scoped="" ref="0x104552020"/>
        <function-ref name="getResistor" scoped="" ref="0x1045521a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x104552330"/>
        <function-ref name="get" scoped="" ref="0x1045524b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x104552640"/>
        <function-ref name="getRaw" scoped="" ref="0x1045527c8"/>
        <function-ref name="set" scoped="" ref="0x104552950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x104552ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x104552c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x104551020"/>
        <function-ref name="clr" scoped="" ref="0x1045511a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port42" ref="0x104570568" loc="84:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port42" scoped="" ref="0x104570568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1045708b8"/>
        <function-ref name="isInput" scoped="" ref="0x104570a40"/>
        <function-ref name="setResistor" scoped="" ref="0x104570bc8"/>
        <function-ref name="toggle" scoped="" ref="0x104570d50"/>
        <function-ref name="isOutput" scoped="" ref="0x10456e020"/>
        <function-ref name="getResistor" scoped="" ref="0x10456e1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10456e330"/>
        <function-ref name="get" scoped="" ref="0x10456e4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10456e640"/>
        <function-ref name="getRaw" scoped="" ref="0x10456e7c8"/>
        <function-ref name="set" scoped="" ref="0x10456e950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10456ead8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10456ec60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10456d020"/>
        <function-ref name="clr" scoped="" ref="0x10456d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port54" ref="0x10458d568" loc="97:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port54" scoped="" ref="0x10458d568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10458d8b8"/>
        <function-ref name="isInput" scoped="" ref="0x10458da40"/>
        <function-ref name="setResistor" scoped="" ref="0x10458dbc8"/>
        <function-ref name="toggle" scoped="" ref="0x10458dd50"/>
        <function-ref name="isOutput" scoped="" ref="0x10458c020"/>
        <function-ref name="getResistor" scoped="" ref="0x10458c1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10458c330"/>
        <function-ref name="get" scoped="" ref="0x10458c4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10458c640"/>
        <function-ref name="getRaw" scoped="" ref="0x10458c7c8"/>
        <function-ref name="set" scoped="" ref="0x10458c950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10458cad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10458cc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10458b020"/>
        <function-ref name="clr" scoped="" ref="0x10458b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port64" ref="0x1045af568" loc="108:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0x1045af568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1045af8b8"/>
        <function-ref name="isInput" scoped="" ref="0x1045afa40"/>
        <function-ref name="setResistor" scoped="" ref="0x1045afbc8"/>
        <function-ref name="toggle" scoped="" ref="0x1045afd50"/>
        <function-ref name="isOutput" scoped="" ref="0x1045ae020"/>
        <function-ref name="getResistor" scoped="" ref="0x1045ae1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x1045ae330"/>
        <function-ref name="get" scoped="" ref="0x1045ae4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1045ae640"/>
        <function-ref name="getRaw" scoped="" ref="0x1045ae7c8"/>
        <function-ref name="set" scoped="" ref="0x1045ae950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1045aead8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1045aec60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1045ad020"/>
        <function-ref name="clr" scoped="" ref="0x1045ad1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD0" ref="0x1045cc560" loc="149:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD0" scoped="" ref="0x1045cc560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1045cc8b0"/>
        <function-ref name="isInput" scoped="" ref="0x1045cca38"/>
        <function-ref name="setResistor" scoped="" ref="0x1045ccbc0"/>
        <function-ref name="toggle" scoped="" ref="0x1045ccd48"/>
        <function-ref name="isOutput" scoped="" ref="0x1045cb020"/>
        <function-ref name="getResistor" scoped="" ref="0x1045cb1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x1045cb330"/>
        <function-ref name="get" scoped="" ref="0x1045cb4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1045cb640"/>
        <function-ref name="getRaw" scoped="" ref="0x1045cb7c8"/>
        <function-ref name="set" scoped="" ref="0x1045cb950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1045cbad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1045cbc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1045ca020"/>
        <function-ref name="clr" scoped="" ref="0x1045ca1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC0" ref="0x1045bc558" loc="159:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC0" scoped="" ref="0x1045bc558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1045bc8a8"/>
        <function-ref name="isInput" scoped="" ref="0x1045bca30"/>
        <function-ref name="setResistor" scoped="" ref="0x1045bcbb8"/>
        <function-ref name="toggle" scoped="" ref="0x1045bcd40"/>
        <function-ref name="isOutput" scoped="" ref="0x1045bb020"/>
        <function-ref name="getResistor" scoped="" ref="0x1045bb1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x1045bb330"/>
        <function-ref name="get" scoped="" ref="0x1045bb4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1045bb640"/>
        <function-ref name="getRaw" scoped="" ref="0x1045bb7c8"/>
        <function-ref name="set" scoped="" ref="0x1045bb950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1045bbad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1045bbc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1045ba020"/>
        <function-ref name="clr" scoped="" ref="0x1045ba1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSIN" ref="0x1045da560" loc="171:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSIN" scoped="" ref="0x1045da560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1045da8b0"/>
        <function-ref name="isInput" scoped="" ref="0x1045daa38"/>
        <function-ref name="setResistor" scoped="" ref="0x1045dabc0"/>
        <function-ref name="toggle" scoped="" ref="0x1045dad48"/>
        <function-ref name="isOutput" scoped="" ref="0x1045d8020"/>
        <function-ref name="getResistor" scoped="" ref="0x1045d81a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x1045d8330"/>
        <function-ref name="get" scoped="" ref="0x1045d84b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1045d8640"/>
        <function-ref name="getRaw" scoped="" ref="0x1045d87c8"/>
        <function-ref name="set" scoped="" ref="0x1045d8950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1045d8ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1045d8c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1045d7020"/>
        <function-ref name="clr" scoped="" ref="0x1045d71a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x104565568" loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x104565568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1045658b8"/>
        <function-ref name="isInput" scoped="" ref="0x104565a40"/>
        <function-ref name="setResistor" scoped="" ref="0x104565bc8"/>
        <function-ref name="toggle" scoped="" ref="0x104565d50"/>
        <function-ref name="isOutput" scoped="" ref="0x104564020"/>
        <function-ref name="getResistor" scoped="" ref="0x1045641a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x104564330"/>
        <function-ref name="get" scoped="" ref="0x1045644b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x104564640"/>
        <function-ref name="getRaw" scoped="" ref="0x1045647c8"/>
        <function-ref name="set" scoped="" ref="0x104564950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x104564ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x104564c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x104563020"/>
        <function-ref name="clr" scoped="" ref="0x1045631a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD0" ref="0x1045ca560" loc="150:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD0" scoped="" ref="0x1045ca560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1045ca8b0"/>
        <function-ref name="isInput" scoped="" ref="0x1045caa38"/>
        <function-ref name="setResistor" scoped="" ref="0x1045cabc0"/>
        <function-ref name="toggle" scoped="" ref="0x1045cad48"/>
        <function-ref name="isOutput" scoped="" ref="0x1045c9020"/>
        <function-ref name="getResistor" scoped="" ref="0x1045c91a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x1045c9330"/>
        <function-ref name="get" scoped="" ref="0x1045c94b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1045c9640"/>
        <function-ref name="getRaw" scoped="" ref="0x1045c97c8"/>
        <function-ref name="set" scoped="" ref="0x1045c9950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1045c9ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1045c9c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1045c8020"/>
        <function-ref name="clr" scoped="" ref="0x1045c81a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x104561568" loc="61:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x104561568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1045618b8"/>
        <function-ref name="isInput" scoped="" ref="0x104561a40"/>
        <function-ref name="setResistor" scoped="" ref="0x104561bc8"/>
        <function-ref name="toggle" scoped="" ref="0x104561d50"/>
        <function-ref name="isOutput" scoped="" ref="0x104560020"/>
        <function-ref name="getResistor" scoped="" ref="0x1045601a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x104560330"/>
        <function-ref name="get" scoped="" ref="0x1045604b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x104560640"/>
        <function-ref name="getRaw" scoped="" ref="0x1045607c8"/>
        <function-ref name="set" scoped="" ref="0x104560950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x104560ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x104560c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10455f020"/>
        <function-ref name="clr" scoped="" ref="0x10455f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port33" ref="0x10457e568" loc="74:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port33" scoped="" ref="0x10457e568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10457e8b8"/>
        <function-ref name="isInput" scoped="" ref="0x10457ea40"/>
        <function-ref name="setResistor" scoped="" ref="0x10457ebc8"/>
        <function-ref name="toggle" scoped="" ref="0x10457ed50"/>
        <function-ref name="isOutput" scoped="" ref="0x10457d020"/>
        <function-ref name="getResistor" scoped="" ref="0x10457d1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10457d330"/>
        <function-ref name="get" scoped="" ref="0x10457d4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10457d640"/>
        <function-ref name="getRaw" scoped="" ref="0x10457d7c8"/>
        <function-ref name="set" scoped="" ref="0x10457d950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10457dad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10457dc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10457c020"/>
        <function-ref name="clr" scoped="" ref="0x10457c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port45" ref="0x104569568" loc="87:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port45" scoped="" ref="0x104569568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1045698b8"/>
        <function-ref name="isInput" scoped="" ref="0x104569a40"/>
        <function-ref name="setResistor" scoped="" ref="0x104569bc8"/>
        <function-ref name="toggle" scoped="" ref="0x104569d50"/>
        <function-ref name="isOutput" scoped="" ref="0x10459a020"/>
        <function-ref name="getResistor" scoped="" ref="0x10459a1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10459a330"/>
        <function-ref name="get" scoped="" ref="0x10459a4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10459a640"/>
        <function-ref name="getRaw" scoped="" ref="0x10459a7c8"/>
        <function-ref name="set" scoped="" ref="0x10459a950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10459aad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10459ac60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x104599020"/>
        <function-ref name="clr" scoped="" ref="0x1045991a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port57" ref="0x104587568" loc="100:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port57" scoped="" ref="0x104587568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1045878b8"/>
        <function-ref name="isInput" scoped="" ref="0x104587a40"/>
        <function-ref name="setResistor" scoped="" ref="0x104587bc8"/>
        <function-ref name="toggle" scoped="" ref="0x104587d50"/>
        <function-ref name="isOutput" scoped="" ref="0x104586020"/>
        <function-ref name="getResistor" scoped="" ref="0x1045861a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x104586330"/>
        <function-ref name="get" scoped="" ref="0x1045864b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x104586640"/>
        <function-ref name="getRaw" scoped="" ref="0x1045867c8"/>
        <function-ref name="set" scoped="" ref="0x104586950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x104586ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x104586c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x104585020"/>
        <function-ref name="clr" scoped="" ref="0x1045851a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port67" ref="0x1045a9568" loc="111:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0x1045a9568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1045a98b8"/>
        <function-ref name="isInput" scoped="" ref="0x1045a9a40"/>
        <function-ref name="setResistor" scoped="" ref="0x1045a9bc8"/>
        <function-ref name="toggle" scoped="" ref="0x1045a9d50"/>
        <function-ref name="isOutput" scoped="" ref="0x1045a8020"/>
        <function-ref name="getResistor" scoped="" ref="0x1045a81a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x1045a8330"/>
        <function-ref name="get" scoped="" ref="0x1045a84b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1045a8640"/>
        <function-ref name="getRaw" scoped="" ref="0x1045a87c8"/>
        <function-ref name="set" scoped="" ref="0x1045a8950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1045a8ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1045a8c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1045a7020"/>
        <function-ref name="clr" scoped="" ref="0x1045a71a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x104540978" loc="51:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x104540978"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x104540cc8"/>
        <function-ref name="isInput" scoped="" ref="0x104540e50"/>
        <function-ref name="setResistor" scoped="" ref="0x10453f020"/>
        <function-ref name="toggle" scoped="" ref="0x10453f1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x10453f330"/>
        <function-ref name="getResistor" scoped="" ref="0x10453f4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10453f640"/>
        <function-ref name="get" scoped="" ref="0x10453f7c8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10453f950"/>
        <function-ref name="getRaw" scoped="" ref="0x10453fad8"/>
        <function-ref name="set" scoped="" ref="0x10453fc60"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10453fde8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10453e020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10453e2a8"/>
        <function-ref name="clr" scoped="" ref="0x10453e430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x10455b568" loc="64:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x10455b568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10455b9b8"/>
        <function-ref name="isInput" scoped="" ref="0x10455bb40"/>
        <function-ref name="setResistor" scoped="" ref="0x10455bcc8"/>
        <function-ref name="toggle" scoped="" ref="0x10455be50"/>
        <function-ref name="isOutput" scoped="" ref="0x10455a020"/>
        <function-ref name="getResistor" scoped="" ref="0x10455a1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10455a330"/>
        <function-ref name="get" scoped="" ref="0x10455a4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10455a640"/>
        <function-ref name="getRaw" scoped="" ref="0x10455a7c8"/>
        <function-ref name="set" scoped="" ref="0x10455a950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10455aad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10455ac60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x104559020"/>
        <function-ref name="clr" scoped="" ref="0x1045591a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port36" ref="0x104578568" loc="77:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port36" scoped="" ref="0x104578568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1045788b8"/>
        <function-ref name="isInput" scoped="" ref="0x104578a40"/>
        <function-ref name="setResistor" scoped="" ref="0x104578bc8"/>
        <function-ref name="toggle" scoped="" ref="0x104578d50"/>
        <function-ref name="isOutput" scoped="" ref="0x104577020"/>
        <function-ref name="getResistor" scoped="" ref="0x1045771a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x104577330"/>
        <function-ref name="get" scoped="" ref="0x1045774b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x104577640"/>
        <function-ref name="getRaw" scoped="" ref="0x1045777c8"/>
        <function-ref name="set" scoped="" ref="0x104577950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x104577ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x104577c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x104576020"/>
        <function-ref name="clr" scoped="" ref="0x1045761a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO0" ref="0x1045a5970" loc="144:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO0" scoped="" ref="0x1045a5970"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1045a5cc0"/>
        <function-ref name="isInput" scoped="" ref="0x1045a5e48"/>
        <function-ref name="setResistor" scoped="" ref="0x1045a3020"/>
        <function-ref name="toggle" scoped="" ref="0x1045a31a8"/>
        <function-ref name="isOutput" scoped="" ref="0x1045a3330"/>
        <function-ref name="getResistor" scoped="" ref="0x1045a34b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x1045a3640"/>
        <function-ref name="get" scoped="" ref="0x1045a37c8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1045a3950"/>
        <function-ref name="getRaw" scoped="" ref="0x1045a3ad8"/>
        <function-ref name="set" scoped="" ref="0x1045a3c60"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1045a3de8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1045a2020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1045a22a8"/>
        <function-ref name="clr" scoped="" ref="0x1045a2430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC3" ref="0x1045b6558" loc="162:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC3" scoped="" ref="0x1045b6558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1045b68a8"/>
        <function-ref name="isInput" scoped="" ref="0x1045b6a30"/>
        <function-ref name="setResistor" scoped="" ref="0x1045b6bb8"/>
        <function-ref name="toggle" scoped="" ref="0x1045b6d40"/>
        <function-ref name="isOutput" scoped="" ref="0x1045b5020"/>
        <function-ref name="getResistor" scoped="" ref="0x1045b51a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x1045b5330"/>
        <function-ref name="get" scoped="" ref="0x1045b54b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1045b5640"/>
        <function-ref name="getRaw" scoped="" ref="0x1045b57c8"/>
        <function-ref name="set" scoped="" ref="0x1045b5950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1045b5ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1045b5c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1045b4020"/>
        <function-ref name="clr" scoped="" ref="0x1045b41a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC1" ref="0x1045dc558" loc="169:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC1" scoped="" ref="0x1045dc558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1045dc8a8"/>
        <function-ref name="isInput" scoped="" ref="0x1045dca30"/>
        <function-ref name="setResistor" scoped="" ref="0x1045dcbb8"/>
        <function-ref name="toggle" scoped="" ref="0x1045dcd40"/>
        <function-ref name="isOutput" scoped="" ref="0x1045db020"/>
        <function-ref name="getResistor" scoped="" ref="0x1045db1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x1045db330"/>
        <function-ref name="get" scoped="" ref="0x1045db4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1045db640"/>
        <function-ref name="getRaw" scoped="" ref="0x1045db7c8"/>
        <function-ref name="set" scoped="" ref="0x1045db950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1045dbad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1045dbc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1045da020"/>
        <function-ref name="clr" scoped="" ref="0x1045da1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK1" ref="0x1045c2560" loc="155:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK1" scoped="" ref="0x1045c2560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1045c28b0"/>
        <function-ref name="isInput" scoped="" ref="0x1045c2a38"/>
        <function-ref name="setResistor" scoped="" ref="0x1045c2bc0"/>
        <function-ref name="toggle" scoped="" ref="0x1045c2d48"/>
        <function-ref name="isOutput" scoped="" ref="0x1045c1020"/>
        <function-ref name="getResistor" scoped="" ref="0x1045c11a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x1045c1330"/>
        <function-ref name="get" scoped="" ref="0x1045c14b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1045c1640"/>
        <function-ref name="getRaw" scoped="" ref="0x1045c17c8"/>
        <function-ref name="set" scoped="" ref="0x1045c1950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1045c1ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1045c1c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1045c0020"/>
        <function-ref name="clr" scoped="" ref="0x1045c01a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port40" ref="0x104574568" loc="82:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port40" scoped="" ref="0x104574568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x104574ab8"/>
        <function-ref name="isInput" scoped="" ref="0x104574c40"/>
        <function-ref name="setResistor" scoped="" ref="0x104574dc8"/>
        <function-ref name="toggle" scoped="" ref="0x104573020"/>
        <function-ref name="isOutput" scoped="" ref="0x1045731a8"/>
        <function-ref name="getResistor" scoped="" ref="0x104573330"/>
        <function-ref name="makeOutput" scoped="" ref="0x1045734b8"/>
        <function-ref name="get" scoped="" ref="0x104573640"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1045737c8"/>
        <function-ref name="getRaw" scoped="" ref="0x104573950"/>
        <function-ref name="set" scoped="" ref="0x104573ad8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x104573c60"/>
        <function-ref name="isIOFunc" scoped="" ref="0x104573de8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x104572120"/>
        <function-ref name="clr" scoped="" ref="0x1045722a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port52" ref="0x104591568" loc="95:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port52" scoped="" ref="0x104591568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1045918b8"/>
        <function-ref name="isInput" scoped="" ref="0x104591a40"/>
        <function-ref name="setResistor" scoped="" ref="0x104591bc8"/>
        <function-ref name="toggle" scoped="" ref="0x104591d50"/>
        <function-ref name="isOutput" scoped="" ref="0x104590020"/>
        <function-ref name="getResistor" scoped="" ref="0x1045901a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x104590330"/>
        <function-ref name="get" scoped="" ref="0x1045904b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x104590640"/>
        <function-ref name="getRaw" scoped="" ref="0x1045907c8"/>
        <function-ref name="set" scoped="" ref="0x104590950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x104590ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x104590c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10458f020"/>
        <function-ref name="clr" scoped="" ref="0x10458f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port62" ref="0x1045b3568" loc="106:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0x1045b3568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1045b38b8"/>
        <function-ref name="isInput" scoped="" ref="0x1045b3a40"/>
        <function-ref name="setResistor" scoped="" ref="0x1045b3bc8"/>
        <function-ref name="toggle" scoped="" ref="0x1045b3d50"/>
        <function-ref name="isOutput" scoped="" ref="0x1045b2020"/>
        <function-ref name="getResistor" scoped="" ref="0x1045b21a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x1045b2330"/>
        <function-ref name="get" scoped="" ref="0x1045b24b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1045b2640"/>
        <function-ref name="getRaw" scoped="" ref="0x1045b27c8"/>
        <function-ref name="set" scoped="" ref="0x1045b2950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1045b2ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1045b2c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1045b1020"/>
        <function-ref name="clr" scoped="" ref="0x1045b11a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC4" ref="0x1045b4558" loc="163:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC4" scoped="" ref="0x1045b4558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1045b48a8"/>
        <function-ref name="isInput" scoped="" ref="0x1045b4a30"/>
        <function-ref name="setResistor" scoped="" ref="0x1045b4bb8"/>
        <function-ref name="toggle" scoped="" ref="0x1045b4d40"/>
        <function-ref name="isOutput" scoped="" ref="0x1045e5020"/>
        <function-ref name="getResistor" scoped="" ref="0x1045e51a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x1045e5330"/>
        <function-ref name="get" scoped="" ref="0x1045e54b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1045e5640"/>
        <function-ref name="getRaw" scoped="" ref="0x1045e57c8"/>
        <function-ref name="set" scoped="" ref="0x1045e5950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1045e5ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1045e5c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1045e4020"/>
        <function-ref name="clr" scoped="" ref="0x1045e41a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE1" ref="0x1045c8558" loc="152:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE1" scoped="" ref="0x1045c8558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1045c88a8"/>
        <function-ref name="isInput" scoped="" ref="0x1045c8a30"/>
        <function-ref name="setResistor" scoped="" ref="0x1045c8bb8"/>
        <function-ref name="toggle" scoped="" ref="0x1045c8d40"/>
        <function-ref name="isOutput" scoped="" ref="0x1045c7020"/>
        <function-ref name="getResistor" scoped="" ref="0x1045c71a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x1045c7330"/>
        <function-ref name="get" scoped="" ref="0x1045c74b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1045c7640"/>
        <function-ref name="getRaw" scoped="" ref="0x1045c77c8"/>
        <function-ref name="set" scoped="" ref="0x1045c7950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1045c7ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1045c7c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1045c6020"/>
        <function-ref name="clr" scoped="" ref="0x1045c61a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x104539568" loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x104539568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1045398b8"/>
        <function-ref name="isInput" scoped="" ref="0x104539a40"/>
        <function-ref name="setResistor" scoped="" ref="0x104539bc8"/>
        <function-ref name="toggle" scoped="" ref="0x104539d50"/>
        <function-ref name="isOutput" scoped="" ref="0x104568020"/>
        <function-ref name="getResistor" scoped="" ref="0x1045681a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x104568330"/>
        <function-ref name="get" scoped="" ref="0x1045684b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x104568640"/>
        <function-ref name="getRaw" scoped="" ref="0x1045687c8"/>
        <function-ref name="set" scoped="" ref="0x104568950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x104568ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x104568c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x104567020"/>
        <function-ref name="clr" scoped="" ref="0x1045671a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x104555568" loc="67:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x104555568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1045558b8"/>
        <function-ref name="isInput" scoped="" ref="0x104555a40"/>
        <function-ref name="setResistor" scoped="" ref="0x104555bc8"/>
        <function-ref name="toggle" scoped="" ref="0x104555d50"/>
        <function-ref name="isOutput" scoped="" ref="0x104554020"/>
        <function-ref name="getResistor" scoped="" ref="0x1045541a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x104554330"/>
        <function-ref name="get" scoped="" ref="0x1045544b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x104554640"/>
        <function-ref name="getRaw" scoped="" ref="0x1045547c8"/>
        <function-ref name="set" scoped="" ref="0x104554950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x104554ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x104554c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x104553020"/>
        <function-ref name="clr" scoped="" ref="0x1045531a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port60" ref="0x104585568" loc="104:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0x104585568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1045858b8"/>
        <function-ref name="isInput" scoped="" ref="0x104585a40"/>
        <function-ref name="setResistor" scoped="" ref="0x104585bc8"/>
        <function-ref name="toggle" scoped="" ref="0x104585d50"/>
        <function-ref name="isOutput" scoped="" ref="0x104584020"/>
        <function-ref name="getResistor" scoped="" ref="0x1045841a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x104584330"/>
        <function-ref name="get" scoped="" ref="0x1045844b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x104584640"/>
        <function-ref name="getRaw" scoped="" ref="0x1045847c8"/>
        <function-ref name="set" scoped="" ref="0x104584950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x104584ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x104584c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x104583020"/>
        <function-ref name="clr" scoped="" ref="0x1045831a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port31" ref="0x104551568" loc="72:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port31" scoped="" ref="0x104551568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1045518b8"/>
        <function-ref name="isInput" scoped="" ref="0x104551a40"/>
        <function-ref name="setResistor" scoped="" ref="0x104551bc8"/>
        <function-ref name="toggle" scoped="" ref="0x104551d50"/>
        <function-ref name="isOutput" scoped="" ref="0x104581020"/>
        <function-ref name="getResistor" scoped="" ref="0x1045811a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x104581330"/>
        <function-ref name="get" scoped="" ref="0x1045814b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x104581640"/>
        <function-ref name="getRaw" scoped="" ref="0x1045817c8"/>
        <function-ref name="set" scoped="" ref="0x104581950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x104581ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x104581c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x104580020"/>
        <function-ref name="clr" scoped="" ref="0x1045801a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port43" ref="0x10456d568" loc="85:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port43" scoped="" ref="0x10456d568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10456d8b8"/>
        <function-ref name="isInput" scoped="" ref="0x10456da40"/>
        <function-ref name="setResistor" scoped="" ref="0x10456dbc8"/>
        <function-ref name="toggle" scoped="" ref="0x10456dd50"/>
        <function-ref name="isOutput" scoped="" ref="0x10456c020"/>
        <function-ref name="getResistor" scoped="" ref="0x10456c1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10456c330"/>
        <function-ref name="get" scoped="" ref="0x10456c4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10456c640"/>
        <function-ref name="getRaw" scoped="" ref="0x10456c7c8"/>
        <function-ref name="set" scoped="" ref="0x10456c950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10456cad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10456cc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10456b020"/>
        <function-ref name="clr" scoped="" ref="0x10456b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port55" ref="0x10458b568" loc="98:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port55" scoped="" ref="0x10458b568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10458b8b8"/>
        <function-ref name="isInput" scoped="" ref="0x10458ba40"/>
        <function-ref name="setResistor" scoped="" ref="0x10458bbc8"/>
        <function-ref name="toggle" scoped="" ref="0x10458bd50"/>
        <function-ref name="isOutput" scoped="" ref="0x10458a020"/>
        <function-ref name="getResistor" scoped="" ref="0x10458a1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10458a330"/>
        <function-ref name="get" scoped="" ref="0x10458a4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10458a640"/>
        <function-ref name="getRaw" scoped="" ref="0x10458a7c8"/>
        <function-ref name="set" scoped="" ref="0x10458a950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10458aad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10458ac60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x104589020"/>
        <function-ref name="clr" scoped="" ref="0x1045891a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port65" ref="0x1045ad568" loc="109:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0x1045ad568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1045ad8b8"/>
        <function-ref name="isInput" scoped="" ref="0x1045ada40"/>
        <function-ref name="setResistor" scoped="" ref="0x1045adbc8"/>
        <function-ref name="toggle" scoped="" ref="0x1045add50"/>
        <function-ref name="isOutput" scoped="" ref="0x1045ac020"/>
        <function-ref name="getResistor" scoped="" ref="0x1045ac1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x1045ac330"/>
        <function-ref name="get" scoped="" ref="0x1045ac4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1045ac640"/>
        <function-ref name="getRaw" scoped="" ref="0x1045ac7c8"/>
        <function-ref name="set" scoped="" ref="0x1045ac950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1045acad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1045acc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1045ab020"/>
        <function-ref name="clr" scoped="" ref="0x1045ab1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI1" ref="0x1045c4560" loc="154:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI1" scoped="" ref="0x1045c4560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1045c48b0"/>
        <function-ref name="isInput" scoped="" ref="0x1045c4a38"/>
        <function-ref name="setResistor" scoped="" ref="0x1045c4bc0"/>
        <function-ref name="toggle" scoped="" ref="0x1045c4d48"/>
        <function-ref name="isOutput" scoped="" ref="0x1045c3020"/>
        <function-ref name="getResistor" scoped="" ref="0x1045c31a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x1045c3330"/>
        <function-ref name="get" scoped="" ref="0x1045c34b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1045c3640"/>
        <function-ref name="getRaw" scoped="" ref="0x1045c37c8"/>
        <function-ref name="set" scoped="" ref="0x1045c3950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1045c3ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1045c3c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1045c2020"/>
        <function-ref name="clr" scoped="" ref="0x1045c21a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x104542c70" loc="49:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x104542c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10454c020"/>
        <function-ref name="isInput" scoped="" ref="0x10454c1a8"/>
        <function-ref name="setResistor" scoped="" ref="0x10454c330"/>
        <function-ref name="toggle" scoped="" ref="0x10454c4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x10454c640"/>
        <function-ref name="getResistor" scoped="" ref="0x10454c7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10454c950"/>
        <function-ref name="get" scoped="" ref="0x10454cad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10454cc60"/>
        <function-ref name="getRaw" scoped="" ref="0x10454cde8"/>
        <function-ref name="set" scoped="" ref="0x10454b020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10454b1a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10454b330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10454b5b8"/>
        <function-ref name="clr" scoped="" ref="0x10454b740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x10455f568" loc="62:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x10455f568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10455f8b8"/>
        <function-ref name="isInput" scoped="" ref="0x10455fa40"/>
        <function-ref name="setResistor" scoped="" ref="0x10455fbc8"/>
        <function-ref name="toggle" scoped="" ref="0x10455fd50"/>
        <function-ref name="isOutput" scoped="" ref="0x10455e020"/>
        <function-ref name="getResistor" scoped="" ref="0x10455e1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10455e330"/>
        <function-ref name="get" scoped="" ref="0x10455e4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10455e640"/>
        <function-ref name="getRaw" scoped="" ref="0x10455e7c8"/>
        <function-ref name="set" scoped="" ref="0x10455e950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10455ead8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10455ec60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10455d020"/>
        <function-ref name="clr" scoped="" ref="0x10455d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port34" ref="0x10457c568" loc="75:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port34" scoped="" ref="0x10457c568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10457c8b8"/>
        <function-ref name="isInput" scoped="" ref="0x10457ca40"/>
        <function-ref name="setResistor" scoped="" ref="0x10457cbc8"/>
        <function-ref name="toggle" scoped="" ref="0x10457cd50"/>
        <function-ref name="isOutput" scoped="" ref="0x10457b020"/>
        <function-ref name="getResistor" scoped="" ref="0x10457b1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10457b330"/>
        <function-ref name="get" scoped="" ref="0x10457b4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10457b640"/>
        <function-ref name="getRaw" scoped="" ref="0x10457b7c8"/>
        <function-ref name="set" scoped="" ref="0x10457b950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10457bad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10457bc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10457a020"/>
        <function-ref name="clr" scoped="" ref="0x10457a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port46" ref="0x104599568" loc="88:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port46" scoped="" ref="0x104599568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1045998b8"/>
        <function-ref name="isInput" scoped="" ref="0x104599a40"/>
        <function-ref name="setResistor" scoped="" ref="0x104599bc8"/>
        <function-ref name="toggle" scoped="" ref="0x104599d50"/>
        <function-ref name="isOutput" scoped="" ref="0x104598020"/>
        <function-ref name="getResistor" scoped="" ref="0x1045981a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x104598330"/>
        <function-ref name="get" scoped="" ref="0x1045984b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x104598640"/>
        <function-ref name="getRaw" scoped="" ref="0x1045987c8"/>
        <function-ref name="set" scoped="" ref="0x104598950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x104598ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x104598c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x104597020"/>
        <function-ref name="clr" scoped="" ref="0x1045971a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD1" ref="0x1045c0560" loc="156:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD1" scoped="" ref="0x1045c0560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1045c08b0"/>
        <function-ref name="isInput" scoped="" ref="0x1045c0a38"/>
        <function-ref name="setResistor" scoped="" ref="0x1045c0bc0"/>
        <function-ref name="toggle" scoped="" ref="0x1045c0d48"/>
        <function-ref name="isOutput" scoped="" ref="0x1045bf020"/>
        <function-ref name="getResistor" scoped="" ref="0x1045bf1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x1045bf330"/>
        <function-ref name="get" scoped="" ref="0x1045bf4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1045bf640"/>
        <function-ref name="getRaw" scoped="" ref="0x1045bf7c8"/>
        <function-ref name="set" scoped="" ref="0x1045bf950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1045bfad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1045bfc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1045be020"/>
        <function-ref name="clr" scoped="" ref="0x1045be1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC1" ref="0x1045ba558" loc="160:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC1" scoped="" ref="0x1045ba558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1045ba8a8"/>
        <function-ref name="isInput" scoped="" ref="0x1045baa30"/>
        <function-ref name="setResistor" scoped="" ref="0x1045babb8"/>
        <function-ref name="toggle" scoped="" ref="0x1045bad40"/>
        <function-ref name="isOutput" scoped="" ref="0x1045b9020"/>
        <function-ref name="getResistor" scoped="" ref="0x1045b91a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x1045b9330"/>
        <function-ref name="get" scoped="" ref="0x1045b94b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1045b9640"/>
        <function-ref name="getRaw" scoped="" ref="0x1045b97c8"/>
        <function-ref name="set" scoped="" ref="0x1045b9950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1045b9ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1045b9c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1045b8020"/>
        <function-ref name="clr" scoped="" ref="0x1045b81a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC7" ref="0x1045e0558" loc="166:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC7" scoped="" ref="0x1045e0558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1045e08a8"/>
        <function-ref name="isInput" scoped="" ref="0x1045e0a30"/>
        <function-ref name="setResistor" scoped="" ref="0x1045e0bb8"/>
        <function-ref name="toggle" scoped="" ref="0x1045e0d40"/>
        <function-ref name="isOutput" scoped="" ref="0x1045df020"/>
        <function-ref name="getResistor" scoped="" ref="0x1045df1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x1045df330"/>
        <function-ref name="get" scoped="" ref="0x1045df4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1045df640"/>
        <function-ref name="getRaw" scoped="" ref="0x1045df7c8"/>
        <function-ref name="set" scoped="" ref="0x1045df950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1045dfad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1045dfc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1045de020"/>
        <function-ref name="clr" scoped="" ref="0x1045de1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port50" ref="0x104595568" loc="93:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port50" scoped="" ref="0x104595568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1045958b8"/>
        <function-ref name="isInput" scoped="" ref="0x104595a40"/>
        <function-ref name="setResistor" scoped="" ref="0x104595bc8"/>
        <function-ref name="toggle" scoped="" ref="0x104595d50"/>
        <function-ref name="isOutput" scoped="" ref="0x104594020"/>
        <function-ref name="getResistor" scoped="" ref="0x1045941a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x104594330"/>
        <function-ref name="get" scoped="" ref="0x1045944b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x104594640"/>
        <function-ref name="getRaw" scoped="" ref="0x1045947c8"/>
        <function-ref name="set" scoped="" ref="0x104594950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x104594ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x104594c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x104593020"/>
        <function-ref name="clr" scoped="" ref="0x1045931a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD1" ref="0x1045be560" loc="157:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD1" scoped="" ref="0x1045be560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1045be8b0"/>
        <function-ref name="isInput" scoped="" ref="0x1045bea38"/>
        <function-ref name="setResistor" scoped="" ref="0x1045bebc0"/>
        <function-ref name="toggle" scoped="" ref="0x1045bed48"/>
        <function-ref name="isOutput" scoped="" ref="0x1045bd020"/>
        <function-ref name="getResistor" scoped="" ref="0x1045bd1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x1045bd330"/>
        <function-ref name="get" scoped="" ref="0x1045bd4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1045bd640"/>
        <function-ref name="getRaw" scoped="" ref="0x1045bd7c8"/>
        <function-ref name="set" scoped="" ref="0x1045bd950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1045bdad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1045bdc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1045bc020"/>
        <function-ref name="clr" scoped="" ref="0x1045bc1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x10453e7f0" loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x10453e7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10453eb40"/>
        <function-ref name="isInput" scoped="" ref="0x10453ecc8"/>
        <function-ref name="setResistor" scoped="" ref="0x10453ee50"/>
        <function-ref name="toggle" scoped="" ref="0x10453c020"/>
        <function-ref name="isOutput" scoped="" ref="0x10453c1a8"/>
        <function-ref name="getResistor" scoped="" ref="0x10453c330"/>
        <function-ref name="makeOutput" scoped="" ref="0x10453c4b8"/>
        <function-ref name="get" scoped="" ref="0x10453c640"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10453c7c8"/>
        <function-ref name="getRaw" scoped="" ref="0x10453c950"/>
        <function-ref name="set" scoped="" ref="0x10453cad8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10453cc60"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10453cde8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10453b120"/>
        <function-ref name="clr" scoped="" ref="0x10453b2a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x104559568" loc="65:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x104559568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1045598b8"/>
        <function-ref name="isInput" scoped="" ref="0x104559a40"/>
        <function-ref name="setResistor" scoped="" ref="0x104559bc8"/>
        <function-ref name="toggle" scoped="" ref="0x104559d50"/>
        <function-ref name="isOutput" scoped="" ref="0x104558020"/>
        <function-ref name="getResistor" scoped="" ref="0x1045581a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x104558330"/>
        <function-ref name="get" scoped="" ref="0x1045584b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x104558640"/>
        <function-ref name="getRaw" scoped="" ref="0x1045587c8"/>
        <function-ref name="set" scoped="" ref="0x104558950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x104558ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x104558c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x104557020"/>
        <function-ref name="clr" scoped="" ref="0x1045571a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port37" ref="0x104576568" loc="78:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port37" scoped="" ref="0x104576568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1045768b8"/>
        <function-ref name="isInput" scoped="" ref="0x104576a40"/>
        <function-ref name="setResistor" scoped="" ref="0x104576bc8"/>
        <function-ref name="toggle" scoped="" ref="0x104576d50"/>
        <function-ref name="isOutput" scoped="" ref="0x104575020"/>
        <function-ref name="getResistor" scoped="" ref="0x1045751a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x104575330"/>
        <function-ref name="get" scoped="" ref="0x1045754b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x104575640"/>
        <function-ref name="getRaw" scoped="" ref="0x1045757c8"/>
        <function-ref name="set" scoped="" ref="0x104575950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x104575ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x104575c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x104574020"/>
        <function-ref name="clr" scoped="" ref="0x1045741a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO1" ref="0x1045c6560" loc="153:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO1" scoped="" ref="0x1045c6560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1045c68b0"/>
        <function-ref name="isInput" scoped="" ref="0x1045c6a38"/>
        <function-ref name="setResistor" scoped="" ref="0x1045c6bc0"/>
        <function-ref name="toggle" scoped="" ref="0x1045c6d48"/>
        <function-ref name="isOutput" scoped="" ref="0x1045c5020"/>
        <function-ref name="getResistor" scoped="" ref="0x1045c51a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x1045c5330"/>
        <function-ref name="get" scoped="" ref="0x1045c54b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1045c5640"/>
        <function-ref name="getRaw" scoped="" ref="0x1045c57c8"/>
        <function-ref name="set" scoped="" ref="0x1045c5950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1045c5ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1045c5c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1045c4020"/>
        <function-ref name="clr" scoped="" ref="0x1045c41a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC5" ref="0x1045e4558" loc="164:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC5" scoped="" ref="0x1045e4558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1045e48a8"/>
        <function-ref name="isInput" scoped="" ref="0x1045e4a30"/>
        <function-ref name="setResistor" scoped="" ref="0x1045e4bb8"/>
        <function-ref name="toggle" scoped="" ref="0x1045e4d40"/>
        <function-ref name="isOutput" scoped="" ref="0x1045e3020"/>
        <function-ref name="getResistor" scoped="" ref="0x1045e31a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x1045e3330"/>
        <function-ref name="get" scoped="" ref="0x1045e34b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1045e3640"/>
        <function-ref name="getRaw" scoped="" ref="0x1045e37c8"/>
        <function-ref name="set" scoped="" ref="0x1045e3950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1045e3ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1045e3c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1045e2020"/>
        <function-ref name="clr" scoped="" ref="0x1045e21a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port41" ref="0x104572668" loc="83:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port41" scoped="" ref="0x104572668"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1045729b8"/>
        <function-ref name="isInput" scoped="" ref="0x104572b40"/>
        <function-ref name="setResistor" scoped="" ref="0x104572cc8"/>
        <function-ref name="toggle" scoped="" ref="0x104572e50"/>
        <function-ref name="isOutput" scoped="" ref="0x104571020"/>
        <function-ref name="getResistor" scoped="" ref="0x1045711a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x104571330"/>
        <function-ref name="get" scoped="" ref="0x1045714b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x104571640"/>
        <function-ref name="getRaw" scoped="" ref="0x1045717c8"/>
        <function-ref name="set" scoped="" ref="0x104571950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x104571ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x104571c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x104570020"/>
        <function-ref name="clr" scoped="" ref="0x1045701a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port53" ref="0x10458f568" loc="96:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port53" scoped="" ref="0x10458f568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10458f8b8"/>
        <function-ref name="isInput" scoped="" ref="0x10458fa40"/>
        <function-ref name="setResistor" scoped="" ref="0x10458fbc8"/>
        <function-ref name="toggle" scoped="" ref="0x10458fd50"/>
        <function-ref name="isOutput" scoped="" ref="0x10458e020"/>
        <function-ref name="getResistor" scoped="" ref="0x10458e1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10458e330"/>
        <function-ref name="get" scoped="" ref="0x10458e4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10458e640"/>
        <function-ref name="getRaw" scoped="" ref="0x10458e7c8"/>
        <function-ref name="set" scoped="" ref="0x10458e950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10458ead8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10458ec60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10458d020"/>
        <function-ref name="clr" scoped="" ref="0x10458d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port63" ref="0x1045b1568" loc="107:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0x1045b1568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1045b18b8"/>
        <function-ref name="isInput" scoped="" ref="0x1045b1a40"/>
        <function-ref name="setResistor" scoped="" ref="0x1045b1bc8"/>
        <function-ref name="toggle" scoped="" ref="0x1045b1d50"/>
        <function-ref name="isOutput" scoped="" ref="0x1045b0020"/>
        <function-ref name="getResistor" scoped="" ref="0x1045b01a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x1045b0330"/>
        <function-ref name="get" scoped="" ref="0x1045b04b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1045b0640"/>
        <function-ref name="getRaw" scoped="" ref="0x1045b07c8"/>
        <function-ref name="set" scoped="" ref="0x1045b0950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1045b0ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1045b0c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1045af020"/>
        <function-ref name="clr" scoped="" ref="0x1045af1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x104567568" loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x104567568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1045678b8"/>
        <function-ref name="isInput" scoped="" ref="0x104567a40"/>
        <function-ref name="setResistor" scoped="" ref="0x104567bc8"/>
        <function-ref name="toggle" scoped="" ref="0x104567d50"/>
        <function-ref name="isOutput" scoped="" ref="0x104566020"/>
        <function-ref name="getResistor" scoped="" ref="0x1045661a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x104566330"/>
        <function-ref name="get" scoped="" ref="0x1045664b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x104566640"/>
        <function-ref name="getRaw" scoped="" ref="0x1045667c8"/>
        <function-ref name="set" scoped="" ref="0x104566950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x104566ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x104566c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x104565020"/>
        <function-ref name="clr" scoped="" ref="0x1045651a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port61" ref="0x104583568" loc="105:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0x104583568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1045838b8"/>
        <function-ref name="isInput" scoped="" ref="0x104583a40"/>
        <function-ref name="setResistor" scoped="" ref="0x104583bc8"/>
        <function-ref name="toggle" scoped="" ref="0x104583d50"/>
        <function-ref name="isOutput" scoped="" ref="0x104582020"/>
        <function-ref name="getResistor" scoped="" ref="0x1045821a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x104582330"/>
        <function-ref name="get" scoped="" ref="0x1045824b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x104582640"/>
        <function-ref name="getRaw" scoped="" ref="0x1045827c8"/>
        <function-ref name="set" scoped="" ref="0x104582950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x104582ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x104582c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1045b3020"/>
        <function-ref name="clr" scoped="" ref="0x1045b31a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x104563568" loc="60:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x104563568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1045638b8"/>
        <function-ref name="isInput" scoped="" ref="0x104563a40"/>
        <function-ref name="setResistor" scoped="" ref="0x104563bc8"/>
        <function-ref name="toggle" scoped="" ref="0x104563d50"/>
        <function-ref name="isOutput" scoped="" ref="0x104562020"/>
        <function-ref name="getResistor" scoped="" ref="0x1045621a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x104562330"/>
        <function-ref name="get" scoped="" ref="0x1045624b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x104562640"/>
        <function-ref name="getRaw" scoped="" ref="0x1045627c8"/>
        <function-ref name="set" scoped="" ref="0x104562950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x104562ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x104562c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x104561020"/>
        <function-ref name="clr" scoped="" ref="0x1045611a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port32" ref="0x104580568" loc="73:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port32" scoped="" ref="0x104580568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1045808b8"/>
        <function-ref name="isInput" scoped="" ref="0x104580a40"/>
        <function-ref name="setResistor" scoped="" ref="0x104580bc8"/>
        <function-ref name="toggle" scoped="" ref="0x104580d50"/>
        <function-ref name="isOutput" scoped="" ref="0x10457f020"/>
        <function-ref name="getResistor" scoped="" ref="0x10457f1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10457f330"/>
        <function-ref name="get" scoped="" ref="0x10457f4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10457f640"/>
        <function-ref name="getRaw" scoped="" ref="0x10457f7c8"/>
        <function-ref name="set" scoped="" ref="0x10457f950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10457fad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10457fc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10457e020"/>
        <function-ref name="clr" scoped="" ref="0x10457e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port44" ref="0x10456b568" loc="86:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port44" scoped="" ref="0x10456b568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10456b8b8"/>
        <function-ref name="isInput" scoped="" ref="0x10456ba40"/>
        <function-ref name="setResistor" scoped="" ref="0x10456bbc8"/>
        <function-ref name="toggle" scoped="" ref="0x10456bd50"/>
        <function-ref name="isOutput" scoped="" ref="0x10456a020"/>
        <function-ref name="getResistor" scoped="" ref="0x10456a1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10456a330"/>
        <function-ref name="get" scoped="" ref="0x10456a4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10456a640"/>
        <function-ref name="getRaw" scoped="" ref="0x10456a7c8"/>
        <function-ref name="set" scoped="" ref="0x10456a950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10456aad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10456ac60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x104569020"/>
        <function-ref name="clr" scoped="" ref="0x1045691a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port56" ref="0x104589568" loc="99:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port56" scoped="" ref="0x104589568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1045898b8"/>
        <function-ref name="isInput" scoped="" ref="0x104589a40"/>
        <function-ref name="setResistor" scoped="" ref="0x104589bc8"/>
        <function-ref name="toggle" scoped="" ref="0x104589d50"/>
        <function-ref name="isOutput" scoped="" ref="0x104588020"/>
        <function-ref name="getResistor" scoped="" ref="0x1045881a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x104588330"/>
        <function-ref name="get" scoped="" ref="0x1045884b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x104588640"/>
        <function-ref name="getRaw" scoped="" ref="0x1045887c8"/>
        <function-ref name="set" scoped="" ref="0x104588950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x104588ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x104588c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x104587020"/>
        <function-ref name="clr" scoped="" ref="0x1045871a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port66" ref="0x1045ab568" loc="110:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0x1045ab568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1045ab8b8"/>
        <function-ref name="isInput" scoped="" ref="0x1045aba40"/>
        <function-ref name="setResistor" scoped="" ref="0x1045abbc8"/>
        <function-ref name="toggle" scoped="" ref="0x1045abd50"/>
        <function-ref name="isOutput" scoped="" ref="0x1045aa020"/>
        <function-ref name="getResistor" scoped="" ref="0x1045aa1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x1045aa330"/>
        <function-ref name="get" scoped="" ref="0x1045aa4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1045aa640"/>
        <function-ref name="getRaw" scoped="" ref="0x1045aa7c8"/>
        <function-ref name="set" scoped="" ref="0x1045aa950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1045aaad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1045aac60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1045a9020"/>
        <function-ref name="clr" scoped="" ref="0x1045a91a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x10454bb00" loc="50:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x10454bb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10454be50"/>
        <function-ref name="isInput" scoped="" ref="0x104541020"/>
        <function-ref name="setResistor" scoped="" ref="0x1045411a8"/>
        <function-ref name="toggle" scoped="" ref="0x104541330"/>
        <function-ref name="isOutput" scoped="" ref="0x1045414b8"/>
        <function-ref name="getResistor" scoped="" ref="0x104541640"/>
        <function-ref name="makeOutput" scoped="" ref="0x1045417c8"/>
        <function-ref name="get" scoped="" ref="0x104541950"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x104541ad8"/>
        <function-ref name="getRaw" scoped="" ref="0x104541c60"/>
        <function-ref name="set" scoped="" ref="0x104541de8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x104540020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1045401a8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x104540430"/>
        <function-ref name="clr" scoped="" ref="0x1045405b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x10455d568" loc="63:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x10455d568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10455d8b8"/>
        <function-ref name="isInput" scoped="" ref="0x10455da40"/>
        <function-ref name="setResistor" scoped="" ref="0x10455dbc8"/>
        <function-ref name="toggle" scoped="" ref="0x10455dd50"/>
        <function-ref name="isOutput" scoped="" ref="0x10455c020"/>
        <function-ref name="getResistor" scoped="" ref="0x10455c1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10455c330"/>
        <function-ref name="get" scoped="" ref="0x10455c4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10455c640"/>
        <function-ref name="getRaw" scoped="" ref="0x10455c7c8"/>
        <function-ref name="set" scoped="" ref="0x10455c950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10455cad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10455cc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10455b020"/>
        <function-ref name="clr" scoped="" ref="0x10455b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port35" ref="0x10457a568" loc="76:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port35" scoped="" ref="0x10457a568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10457a8b8"/>
        <function-ref name="isInput" scoped="" ref="0x10457aa40"/>
        <function-ref name="setResistor" scoped="" ref="0x10457abc8"/>
        <function-ref name="toggle" scoped="" ref="0x10457ad50"/>
        <function-ref name="isOutput" scoped="" ref="0x104579020"/>
        <function-ref name="getResistor" scoped="" ref="0x1045791a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x104579330"/>
        <function-ref name="get" scoped="" ref="0x1045794b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x104579640"/>
        <function-ref name="getRaw" scoped="" ref="0x1045797c8"/>
        <function-ref name="set" scoped="" ref="0x104579950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x104579ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x104579c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x104578020"/>
        <function-ref name="clr" scoped="" ref="0x1045781a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port47" ref="0x104597568" loc="89:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port47" scoped="" ref="0x104597568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1045978b8"/>
        <function-ref name="isInput" scoped="" ref="0x104597a40"/>
        <function-ref name="setResistor" scoped="" ref="0x104597bc8"/>
        <function-ref name="toggle" scoped="" ref="0x104597d50"/>
        <function-ref name="isOutput" scoped="" ref="0x104596020"/>
        <function-ref name="getResistor" scoped="" ref="0x1045961a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x104596330"/>
        <function-ref name="get" scoped="" ref="0x1045964b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x104596640"/>
        <function-ref name="getRaw" scoped="" ref="0x1045967c8"/>
        <function-ref name="set" scoped="" ref="0x104596950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x104596ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x104596c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x104595020"/>
        <function-ref name="clr" scoped="" ref="0x1045951a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCL" ref="0x10459c548" loc="148:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCL" scoped="" ref="0x10459c548"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10459c898"/>
        <function-ref name="isInput" scoped="" ref="0x10459ca20"/>
        <function-ref name="setResistor" scoped="" ref="0x10459cba8"/>
        <function-ref name="toggle" scoped="" ref="0x10459cd30"/>
        <function-ref name="isOutput" scoped="" ref="0x10459b020"/>
        <function-ref name="getResistor" scoped="" ref="0x10459b1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10459b330"/>
        <function-ref name="get" scoped="" ref="0x10459b4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10459b640"/>
        <function-ref name="getRaw" scoped="" ref="0x10459b7c8"/>
        <function-ref name="set" scoped="" ref="0x10459b950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10459bad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10459bc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1045cc020"/>
        <function-ref name="clr" scoped="" ref="0x1045cc1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC2" ref="0x1045b8558" loc="161:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC2" scoped="" ref="0x1045b8558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1045b88a8"/>
        <function-ref name="isInput" scoped="" ref="0x1045b8a30"/>
        <function-ref name="setResistor" scoped="" ref="0x1045b8bb8"/>
        <function-ref name="toggle" scoped="" ref="0x1045b8d40"/>
        <function-ref name="isOutput" scoped="" ref="0x1045b7020"/>
        <function-ref name="getResistor" scoped="" ref="0x1045b71a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x1045b7330"/>
        <function-ref name="get" scoped="" ref="0x1045b74b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1045b7640"/>
        <function-ref name="getRaw" scoped="" ref="0x1045b77c8"/>
        <function-ref name="set" scoped="" ref="0x1045b7950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1045b7ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1045b7c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1045b6020"/>
        <function-ref name="clr" scoped="" ref="0x1045b61a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK0" ref="0x10459e560" loc="147:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK0" scoped="" ref="0x10459e560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10459e8b0"/>
        <function-ref name="isInput" scoped="" ref="0x10459ea38"/>
        <function-ref name="setResistor" scoped="" ref="0x10459ebc0"/>
        <function-ref name="toggle" scoped="" ref="0x10459ed48"/>
        <function-ref name="isOutput" scoped="" ref="0x10459d020"/>
        <function-ref name="getResistor" scoped="" ref="0x10459d1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10459d330"/>
        <function-ref name="get" scoped="" ref="0x10459d4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10459d640"/>
        <function-ref name="getRaw" scoped="" ref="0x10459d7c8"/>
        <function-ref name="set" scoped="" ref="0x10459d950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10459dad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10459dc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10459c020"/>
        <function-ref name="clr" scoped="" ref="0x10459c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port51" ref="0x104593568" loc="94:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port51" scoped="" ref="0x104593568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1045938b8"/>
        <function-ref name="isInput" scoped="" ref="0x104593a40"/>
        <function-ref name="setResistor" scoped="" ref="0x104593bc8"/>
        <function-ref name="toggle" scoped="" ref="0x104593d50"/>
        <function-ref name="isOutput" scoped="" ref="0x104592020"/>
        <function-ref name="getResistor" scoped="" ref="0x1045921a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x104592330"/>
        <function-ref name="get" scoped="" ref="0x1045924b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x104592640"/>
        <function-ref name="getRaw" scoped="" ref="0x1045927c8"/>
        <function-ref name="set" scoped="" ref="0x104592950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x104592ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x104592c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x104591020"/>
        <function-ref name="clr" scoped="" ref="0x1045911a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC0" ref="0x1045de558" loc="168:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC0" scoped="" ref="0x1045de558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1045de8a8"/>
        <function-ref name="isInput" scoped="" ref="0x1045dea30"/>
        <function-ref name="setResistor" scoped="" ref="0x1045debb8"/>
        <function-ref name="toggle" scoped="" ref="0x1045ded40"/>
        <function-ref name="isOutput" scoped="" ref="0x1045dd020"/>
        <function-ref name="getResistor" scoped="" ref="0x1045dd1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x1045dd330"/>
        <function-ref name="get" scoped="" ref="0x1045dd4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1045dd640"/>
        <function-ref name="getRaw" scoped="" ref="0x1045dd7c8"/>
        <function-ref name="set" scoped="" ref="0x1045dd950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1045ddad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1045ddc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1045dc020"/>
        <function-ref name="clr" scoped="" ref="0x1045dc1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSOUT" ref="0x1045d7568" loc="172:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSOUT" scoped="" ref="0x1045d7568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1045d78b8"/>
        <function-ref name="isInput" scoped="" ref="0x1045d7a40"/>
        <function-ref name="setResistor" scoped="" ref="0x1045d7bc8"/>
        <function-ref name="toggle" scoped="" ref="0x1045d7d50"/>
        <function-ref name="isOutput" scoped="" ref="0x1045d6020"/>
        <function-ref name="getResistor" scoped="" ref="0x1045d61a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x1045d6330"/>
        <function-ref name="get" scoped="" ref="0x1045d64b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1045d6640"/>
        <function-ref name="getRaw" scoped="" ref="0x1045d67c8"/>
        <function-ref name="set" scoped="" ref="0x1045d6950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1045d6ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1045d6c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1045d5020"/>
        <function-ref name="clr" scoped="" ref="0x1045d51a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE0" ref="0x1045a75b8" loc="143:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE0" scoped="" ref="0x1045a75b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1045a7d08"/>
        <function-ref name="isInput" scoped="" ref="0x1045a6020"/>
        <function-ref name="setResistor" scoped="" ref="0x1045a61a8"/>
        <function-ref name="toggle" scoped="" ref="0x1045a6330"/>
        <function-ref name="isOutput" scoped="" ref="0x1045a64b8"/>
        <function-ref name="getResistor" scoped="" ref="0x1045a6640"/>
        <function-ref name="makeOutput" scoped="" ref="0x1045a67c8"/>
        <function-ref name="get" scoped="" ref="0x1045a6950"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1045a6ad8"/>
        <function-ref name="getRaw" scoped="" ref="0x1045a6c60"/>
        <function-ref name="set" scoped="" ref="0x1045a6de8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1045a5020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1045a51a8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1045a5430"/>
        <function-ref name="clr" scoped="" ref="0x1045a55b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1045d2e18" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P10"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1045d2e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1046131a8"/>
        <function-ref name="isInput" scoped="" ref="0x104613330"/>
        <function-ref name="setResistor" scoped="" ref="0x1046134b8"/>
        <function-ref name="toggle" scoped="" ref="0x104613640"/>
        <function-ref name="isOutput" scoped="" ref="0x1046137c8"/>
        <function-ref name="getResistor" scoped="" ref="0x104613950"/>
        <function-ref name="makeOutput" scoped="" ref="0x104613ad8"/>
        <function-ref name="get" scoped="" ref="0x104613c60"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x104613de8"/>
        <function-ref name="getRaw" scoped="" ref="0x104612020"/>
        <function-ref name="set" scoped="" ref="0x1046121a8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x104612330"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1046124b8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x104612740"/>
        <function-ref name="clr" scoped="" ref="0x1046128c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10460f478" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P11"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10460f478"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10460f7c8"/>
        <function-ref name="isInput" scoped="" ref="0x10460f950"/>
        <function-ref name="setResistor" scoped="" ref="0x10460fad8"/>
        <function-ref name="toggle" scoped="" ref="0x10460fc60"/>
        <function-ref name="isOutput" scoped="" ref="0x10460fde8"/>
        <function-ref name="getResistor" scoped="" ref="0x10460e020"/>
        <function-ref name="makeOutput" scoped="" ref="0x10460e1a8"/>
        <function-ref name="get" scoped="" ref="0x10460e330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10460e4b8"/>
        <function-ref name="getRaw" scoped="" ref="0x10460e640"/>
        <function-ref name="set" scoped="" ref="0x10460e7c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10460e950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10460ead8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10460ed60"/>
        <function-ref name="clr" scoped="" ref="0x10460d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10460bca0" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P12"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10460bca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10460a020"/>
        <function-ref name="isInput" scoped="" ref="0x10460a1a8"/>
        <function-ref name="setResistor" scoped="" ref="0x10460a330"/>
        <function-ref name="toggle" scoped="" ref="0x10460a4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x10460a640"/>
        <function-ref name="getResistor" scoped="" ref="0x10460a7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10460a950"/>
        <function-ref name="get" scoped="" ref="0x10460aad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10460ac60"/>
        <function-ref name="getRaw" scoped="" ref="0x10460ade8"/>
        <function-ref name="set" scoped="" ref="0x104609020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1046091a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x104609330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1046095b8"/>
        <function-ref name="clr" scoped="" ref="0x104609740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1046063d8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P13"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1046063d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x104606728"/>
        <function-ref name="isInput" scoped="" ref="0x1046068b0"/>
        <function-ref name="setResistor" scoped="" ref="0x104606a38"/>
        <function-ref name="toggle" scoped="" ref="0x104606bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x104606d48"/>
        <function-ref name="getResistor" scoped="" ref="0x104605020"/>
        <function-ref name="makeOutput" scoped="" ref="0x1046051a8"/>
        <function-ref name="get" scoped="" ref="0x104605330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1046054b8"/>
        <function-ref name="getRaw" scoped="" ref="0x104605640"/>
        <function-ref name="set" scoped="" ref="0x1046057c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x104605950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x104605ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x104605d60"/>
        <function-ref name="clr" scoped="" ref="0x104604020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x104602ca0" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P14"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x104602ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x104601020"/>
        <function-ref name="isInput" scoped="" ref="0x1046011a8"/>
        <function-ref name="setResistor" scoped="" ref="0x104601330"/>
        <function-ref name="toggle" scoped="" ref="0x1046014b8"/>
        <function-ref name="isOutput" scoped="" ref="0x104601640"/>
        <function-ref name="getResistor" scoped="" ref="0x1046017c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x104601950"/>
        <function-ref name="get" scoped="" ref="0x104601ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x104601c60"/>
        <function-ref name="getRaw" scoped="" ref="0x104601de8"/>
        <function-ref name="set" scoped="" ref="0x104600020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1046001a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x104600330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1046005b8"/>
        <function-ref name="clr" scoped="" ref="0x104600740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1046313d8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P15"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1046313d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x104631728"/>
        <function-ref name="isInput" scoped="" ref="0x1046318b0"/>
        <function-ref name="setResistor" scoped="" ref="0x104631a38"/>
        <function-ref name="toggle" scoped="" ref="0x104631bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x104631d48"/>
        <function-ref name="getResistor" scoped="" ref="0x104630020"/>
        <function-ref name="makeOutput" scoped="" ref="0x1046301a8"/>
        <function-ref name="get" scoped="" ref="0x104630330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1046304b8"/>
        <function-ref name="getRaw" scoped="" ref="0x104630640"/>
        <function-ref name="set" scoped="" ref="0x1046307c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x104630950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x104630ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x104630d60"/>
        <function-ref name="clr" scoped="" ref="0x10462f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10462dca0" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P16"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10462dca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10462b020"/>
        <function-ref name="isInput" scoped="" ref="0x10462b1a8"/>
        <function-ref name="setResistor" scoped="" ref="0x10462b330"/>
        <function-ref name="toggle" scoped="" ref="0x10462b4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x10462b640"/>
        <function-ref name="getResistor" scoped="" ref="0x10462b7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10462b950"/>
        <function-ref name="get" scoped="" ref="0x10462bad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10462bc60"/>
        <function-ref name="getRaw" scoped="" ref="0x10462bde8"/>
        <function-ref name="set" scoped="" ref="0x10462a020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10462a1a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10462a330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10462a5b8"/>
        <function-ref name="clr" scoped="" ref="0x10462a740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1046273d8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P17"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1046273d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x104627728"/>
        <function-ref name="isInput" scoped="" ref="0x1046278b0"/>
        <function-ref name="setResistor" scoped="" ref="0x104627a38"/>
        <function-ref name="toggle" scoped="" ref="0x104627bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x104627d48"/>
        <function-ref name="getResistor" scoped="" ref="0x104626020"/>
        <function-ref name="makeOutput" scoped="" ref="0x1046261a8"/>
        <function-ref name="get" scoped="" ref="0x104626330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1046264b8"/>
        <function-ref name="getRaw" scoped="" ref="0x104626640"/>
        <function-ref name="set" scoped="" ref="0x1046267c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x104626950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x104626ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x104626d60"/>
        <function-ref name="clr" scoped="" ref="0x104625020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x104623ca0" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P20"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x104623ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x104622020"/>
        <function-ref name="isInput" scoped="" ref="0x1046221a8"/>
        <function-ref name="setResistor" scoped="" ref="0x104622330"/>
        <function-ref name="toggle" scoped="" ref="0x1046224b8"/>
        <function-ref name="isOutput" scoped="" ref="0x104622640"/>
        <function-ref name="getResistor" scoped="" ref="0x1046227c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x104622950"/>
        <function-ref name="get" scoped="" ref="0x104622ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x104622c60"/>
        <function-ref name="getRaw" scoped="" ref="0x104622de8"/>
        <function-ref name="set" scoped="" ref="0x104621020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1046211a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x104621330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1046215b8"/>
        <function-ref name="clr" scoped="" ref="0x104621740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10461e3d8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P21"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10461e3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10461e728"/>
        <function-ref name="isInput" scoped="" ref="0x10461e8b0"/>
        <function-ref name="setResistor" scoped="" ref="0x10461ea38"/>
        <function-ref name="toggle" scoped="" ref="0x10461ebc0"/>
        <function-ref name="isOutput" scoped="" ref="0x10461ed48"/>
        <function-ref name="getResistor" scoped="" ref="0x10461d020"/>
        <function-ref name="makeOutput" scoped="" ref="0x10461d1a8"/>
        <function-ref name="get" scoped="" ref="0x10461d330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10461d4b8"/>
        <function-ref name="getRaw" scoped="" ref="0x10461d640"/>
        <function-ref name="set" scoped="" ref="0x10461d7c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10461d950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10461dad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10461dd60"/>
        <function-ref name="clr" scoped="" ref="0x10461c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10461aca0" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P22"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10461aca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10464d020"/>
        <function-ref name="isInput" scoped="" ref="0x10464d1a8"/>
        <function-ref name="setResistor" scoped="" ref="0x10464d330"/>
        <function-ref name="toggle" scoped="" ref="0x10464d4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x10464d640"/>
        <function-ref name="getResistor" scoped="" ref="0x10464d7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10464d950"/>
        <function-ref name="get" scoped="" ref="0x10464dad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10464dc60"/>
        <function-ref name="getRaw" scoped="" ref="0x10464dde8"/>
        <function-ref name="set" scoped="" ref="0x10464c020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10464c1a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10464c330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10464c5b8"/>
        <function-ref name="clr" scoped="" ref="0x10464c740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1046493d8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P23"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1046493d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x104649728"/>
        <function-ref name="isInput" scoped="" ref="0x1046498b0"/>
        <function-ref name="setResistor" scoped="" ref="0x104649a38"/>
        <function-ref name="toggle" scoped="" ref="0x104649bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x104649d48"/>
        <function-ref name="getResistor" scoped="" ref="0x104648020"/>
        <function-ref name="makeOutput" scoped="" ref="0x1046481a8"/>
        <function-ref name="get" scoped="" ref="0x104648330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1046484b8"/>
        <function-ref name="getRaw" scoped="" ref="0x104648640"/>
        <function-ref name="set" scoped="" ref="0x1046487c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x104648950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x104648ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x104648d60"/>
        <function-ref name="clr" scoped="" ref="0x104647020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x104645d08" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P24"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x104645d08"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1046440a0"/>
        <function-ref name="isInput" scoped="" ref="0x104644228"/>
        <function-ref name="setResistor" scoped="" ref="0x1046443b0"/>
        <function-ref name="toggle" scoped="" ref="0x104644538"/>
        <function-ref name="isOutput" scoped="" ref="0x1046446c0"/>
        <function-ref name="getResistor" scoped="" ref="0x104644848"/>
        <function-ref name="makeOutput" scoped="" ref="0x1046449d0"/>
        <function-ref name="get" scoped="" ref="0x104644b58"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x104644ce0"/>
        <function-ref name="getRaw" scoped="" ref="0x104644e68"/>
        <function-ref name="set" scoped="" ref="0x104643020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1046431a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x104643330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1046435b8"/>
        <function-ref name="clr" scoped="" ref="0x104643740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1046403d8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P25"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1046403d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x104640728"/>
        <function-ref name="isInput" scoped="" ref="0x1046408b0"/>
        <function-ref name="setResistor" scoped="" ref="0x104640a38"/>
        <function-ref name="toggle" scoped="" ref="0x104640bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x104640d48"/>
        <function-ref name="getResistor" scoped="" ref="0x10463f020"/>
        <function-ref name="makeOutput" scoped="" ref="0x10463f1a8"/>
        <function-ref name="get" scoped="" ref="0x10463f330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10463f4b8"/>
        <function-ref name="getRaw" scoped="" ref="0x10463f640"/>
        <function-ref name="set" scoped="" ref="0x10463f7c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10463f950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10463fad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10463fd60"/>
        <function-ref name="clr" scoped="" ref="0x10463e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10463bca0" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P26"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10463bca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10463a020"/>
        <function-ref name="isInput" scoped="" ref="0x10463a1a8"/>
        <function-ref name="setResistor" scoped="" ref="0x10463a330"/>
        <function-ref name="toggle" scoped="" ref="0x10463a4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x10463a640"/>
        <function-ref name="getResistor" scoped="" ref="0x10463a7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10463a950"/>
        <function-ref name="get" scoped="" ref="0x10463aad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10463ac60"/>
        <function-ref name="getRaw" scoped="" ref="0x10463ade8"/>
        <function-ref name="set" scoped="" ref="0x104639020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1046391a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x104639330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1046395b8"/>
        <function-ref name="clr" scoped="" ref="0x104639740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1046363d8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P27"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1046363d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x104636728"/>
        <function-ref name="isInput" scoped="" ref="0x1046368b0"/>
        <function-ref name="setResistor" scoped="" ref="0x104636a38"/>
        <function-ref name="toggle" scoped="" ref="0x104636bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x104636d48"/>
        <function-ref name="getResistor" scoped="" ref="0x104635020"/>
        <function-ref name="makeOutput" scoped="" ref="0x1046351a8"/>
        <function-ref name="get" scoped="" ref="0x104635330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1046354b8"/>
        <function-ref name="getRaw" scoped="" ref="0x104635640"/>
        <function-ref name="set" scoped="" ref="0x1046357c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x104635950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x104635ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x104635d60"/>
        <function-ref name="clr" scoped="" ref="0x104634020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x104666ca0" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P30"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x104666ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x104665020"/>
        <function-ref name="isInput" scoped="" ref="0x1046651a8"/>
        <function-ref name="setResistor" scoped="" ref="0x104665330"/>
        <function-ref name="toggle" scoped="" ref="0x1046654b8"/>
        <function-ref name="isOutput" scoped="" ref="0x104665640"/>
        <function-ref name="getResistor" scoped="" ref="0x1046657c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x104665950"/>
        <function-ref name="get" scoped="" ref="0x104665ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x104665c60"/>
        <function-ref name="getRaw" scoped="" ref="0x104665de8"/>
        <function-ref name="set" scoped="" ref="0x104664020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1046641a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x104664330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1046645b8"/>
        <function-ref name="clr" scoped="" ref="0x104664740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1046613d8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P31"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1046613d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x104661728"/>
        <function-ref name="isInput" scoped="" ref="0x1046618b0"/>
        <function-ref name="setResistor" scoped="" ref="0x104661a38"/>
        <function-ref name="toggle" scoped="" ref="0x104661bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x104661d48"/>
        <function-ref name="getResistor" scoped="" ref="0x104660020"/>
        <function-ref name="makeOutput" scoped="" ref="0x1046601a8"/>
        <function-ref name="get" scoped="" ref="0x104660330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1046604b8"/>
        <function-ref name="getRaw" scoped="" ref="0x104660640"/>
        <function-ref name="set" scoped="" ref="0x1046607c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x104660950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x104660ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x104660d60"/>
        <function-ref name="clr" scoped="" ref="0x10465f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10465dca0" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P32"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10465dca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10465c020"/>
        <function-ref name="isInput" scoped="" ref="0x10465c1a8"/>
        <function-ref name="setResistor" scoped="" ref="0x10465c330"/>
        <function-ref name="toggle" scoped="" ref="0x10465c4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x10465c640"/>
        <function-ref name="getResistor" scoped="" ref="0x10465c7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10465c950"/>
        <function-ref name="get" scoped="" ref="0x10465cad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10465cc60"/>
        <function-ref name="getRaw" scoped="" ref="0x10465cde8"/>
        <function-ref name="set" scoped="" ref="0x10465b020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10465b1a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10465b330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10465b5b8"/>
        <function-ref name="clr" scoped="" ref="0x10465b740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1046583d8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P33"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1046583d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x104658728"/>
        <function-ref name="isInput" scoped="" ref="0x1046588b0"/>
        <function-ref name="setResistor" scoped="" ref="0x104658a38"/>
        <function-ref name="toggle" scoped="" ref="0x104658bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x104658d48"/>
        <function-ref name="getResistor" scoped="" ref="0x104657020"/>
        <function-ref name="makeOutput" scoped="" ref="0x1046571a8"/>
        <function-ref name="get" scoped="" ref="0x104657330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1046574b8"/>
        <function-ref name="getRaw" scoped="" ref="0x104657640"/>
        <function-ref name="set" scoped="" ref="0x1046577c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x104657950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x104657ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x104657d60"/>
        <function-ref name="clr" scoped="" ref="0x104656020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x104654ca0" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P34"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x104654ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x104653020"/>
        <function-ref name="isInput" scoped="" ref="0x1046531a8"/>
        <function-ref name="setResistor" scoped="" ref="0x104653330"/>
        <function-ref name="toggle" scoped="" ref="0x1046534b8"/>
        <function-ref name="isOutput" scoped="" ref="0x104653640"/>
        <function-ref name="getResistor" scoped="" ref="0x1046537c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x104653950"/>
        <function-ref name="get" scoped="" ref="0x104653ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x104653c60"/>
        <function-ref name="getRaw" scoped="" ref="0x104653de8"/>
        <function-ref name="set" scoped="" ref="0x104652020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1046521a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x104652330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1046525b8"/>
        <function-ref name="clr" scoped="" ref="0x104652740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10464f3d8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P35"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10464f3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10464f728"/>
        <function-ref name="isInput" scoped="" ref="0x10464f8b0"/>
        <function-ref name="setResistor" scoped="" ref="0x10464fa38"/>
        <function-ref name="toggle" scoped="" ref="0x10464fbc0"/>
        <function-ref name="isOutput" scoped="" ref="0x10464fd48"/>
        <function-ref name="getResistor" scoped="" ref="0x104682020"/>
        <function-ref name="makeOutput" scoped="" ref="0x1046821a8"/>
        <function-ref name="get" scoped="" ref="0x104682330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1046824b8"/>
        <function-ref name="getRaw" scoped="" ref="0x104682640"/>
        <function-ref name="set" scoped="" ref="0x1046827c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x104682950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x104682ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x104682d60"/>
        <function-ref name="clr" scoped="" ref="0x104681020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10467fca0" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P36"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10467fca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10467e020"/>
        <function-ref name="isInput" scoped="" ref="0x10467e1a8"/>
        <function-ref name="setResistor" scoped="" ref="0x10467e330"/>
        <function-ref name="toggle" scoped="" ref="0x10467e4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x10467e640"/>
        <function-ref name="getResistor" scoped="" ref="0x10467e7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10467e950"/>
        <function-ref name="get" scoped="" ref="0x10467ead8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10467ec60"/>
        <function-ref name="getRaw" scoped="" ref="0x10467ede8"/>
        <function-ref name="set" scoped="" ref="0x10467d020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10467d1a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10467d330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10467d5b8"/>
        <function-ref name="clr" scoped="" ref="0x10467d740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10467a3d8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P37"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10467a3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10467a728"/>
        <function-ref name="isInput" scoped="" ref="0x10467a8b0"/>
        <function-ref name="setResistor" scoped="" ref="0x10467aa38"/>
        <function-ref name="toggle" scoped="" ref="0x10467abc0"/>
        <function-ref name="isOutput" scoped="" ref="0x10467ad48"/>
        <function-ref name="getResistor" scoped="" ref="0x104679020"/>
        <function-ref name="makeOutput" scoped="" ref="0x1046791a8"/>
        <function-ref name="get" scoped="" ref="0x104679330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1046794b8"/>
        <function-ref name="getRaw" scoped="" ref="0x104679640"/>
        <function-ref name="set" scoped="" ref="0x1046797c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x104679950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x104679ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x104679d60"/>
        <function-ref name="clr" scoped="" ref="0x104678020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x104676dd8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P40"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x104676dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x104675170"/>
        <function-ref name="isInput" scoped="" ref="0x1046752f8"/>
        <function-ref name="setResistor" scoped="" ref="0x104675480"/>
        <function-ref name="toggle" scoped="" ref="0x104675608"/>
        <function-ref name="isOutput" scoped="" ref="0x104675790"/>
        <function-ref name="getResistor" scoped="" ref="0x104675918"/>
        <function-ref name="makeOutput" scoped="" ref="0x104675aa0"/>
        <function-ref name="get" scoped="" ref="0x104675c28"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x104675db0"/>
        <function-ref name="getRaw" scoped="" ref="0x104674020"/>
        <function-ref name="set" scoped="" ref="0x1046741a8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x104674330"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1046744b8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x104674740"/>
        <function-ref name="clr" scoped="" ref="0x1046748c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x104671478" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P41"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x104671478"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1046717c8"/>
        <function-ref name="isInput" scoped="" ref="0x104671950"/>
        <function-ref name="setResistor" scoped="" ref="0x104671ad8"/>
        <function-ref name="toggle" scoped="" ref="0x104671c60"/>
        <function-ref name="isOutput" scoped="" ref="0x104671de8"/>
        <function-ref name="getResistor" scoped="" ref="0x104670020"/>
        <function-ref name="makeOutput" scoped="" ref="0x1046701a8"/>
        <function-ref name="get" scoped="" ref="0x104670330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1046704b8"/>
        <function-ref name="getRaw" scoped="" ref="0x104670640"/>
        <function-ref name="set" scoped="" ref="0x1046707c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x104670950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x104670ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x104670d60"/>
        <function-ref name="clr" scoped="" ref="0x10466f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10466dca0" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P42"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10466dca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10466c020"/>
        <function-ref name="isInput" scoped="" ref="0x10466c1a8"/>
        <function-ref name="setResistor" scoped="" ref="0x10466c330"/>
        <function-ref name="toggle" scoped="" ref="0x10466c4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x10466c640"/>
        <function-ref name="getResistor" scoped="" ref="0x10466c7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10466c950"/>
        <function-ref name="get" scoped="" ref="0x10466cad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10466cc60"/>
        <function-ref name="getRaw" scoped="" ref="0x10466cde8"/>
        <function-ref name="set" scoped="" ref="0x10466b020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10466b1a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10466b330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10466b5b8"/>
        <function-ref name="clr" scoped="" ref="0x10466b740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1046683d8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P43"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1046683d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x104668728"/>
        <function-ref name="isInput" scoped="" ref="0x1046688b0"/>
        <function-ref name="setResistor" scoped="" ref="0x104668a38"/>
        <function-ref name="toggle" scoped="" ref="0x104668bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x104668d48"/>
        <function-ref name="getResistor" scoped="" ref="0x10469d020"/>
        <function-ref name="makeOutput" scoped="" ref="0x10469d1a8"/>
        <function-ref name="get" scoped="" ref="0x10469d330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10469d4b8"/>
        <function-ref name="getRaw" scoped="" ref="0x10469d640"/>
        <function-ref name="set" scoped="" ref="0x10469d7c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10469d950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10469dad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10469dd60"/>
        <function-ref name="clr" scoped="" ref="0x10469c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10469aca0" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P44"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10469aca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x104699020"/>
        <function-ref name="isInput" scoped="" ref="0x1046991a8"/>
        <function-ref name="setResistor" scoped="" ref="0x104699330"/>
        <function-ref name="toggle" scoped="" ref="0x1046994b8"/>
        <function-ref name="isOutput" scoped="" ref="0x104699640"/>
        <function-ref name="getResistor" scoped="" ref="0x1046997c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x104699950"/>
        <function-ref name="get" scoped="" ref="0x104699ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x104699c60"/>
        <function-ref name="getRaw" scoped="" ref="0x104699de8"/>
        <function-ref name="set" scoped="" ref="0x104698020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1046981a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x104698330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1046985b8"/>
        <function-ref name="clr" scoped="" ref="0x104698740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1046953d8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P45"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1046953d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x104695728"/>
        <function-ref name="isInput" scoped="" ref="0x1046958b0"/>
        <function-ref name="setResistor" scoped="" ref="0x104695a38"/>
        <function-ref name="toggle" scoped="" ref="0x104695bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x104695d48"/>
        <function-ref name="getResistor" scoped="" ref="0x104693020"/>
        <function-ref name="makeOutput" scoped="" ref="0x1046931a8"/>
        <function-ref name="get" scoped="" ref="0x104693330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1046934b8"/>
        <function-ref name="getRaw" scoped="" ref="0x104693640"/>
        <function-ref name="set" scoped="" ref="0x1046937c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x104693950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x104693ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x104693d60"/>
        <function-ref name="clr" scoped="" ref="0x104692020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x104690ca0" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P46"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x104690ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10468f020"/>
        <function-ref name="isInput" scoped="" ref="0x10468f1a8"/>
        <function-ref name="setResistor" scoped="" ref="0x10468f330"/>
        <function-ref name="toggle" scoped="" ref="0x10468f4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x10468f640"/>
        <function-ref name="getResistor" scoped="" ref="0x10468f7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10468f950"/>
        <function-ref name="get" scoped="" ref="0x10468fad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10468fc60"/>
        <function-ref name="getRaw" scoped="" ref="0x10468fde8"/>
        <function-ref name="set" scoped="" ref="0x10468e020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10468e1a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10468e330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10468e5b8"/>
        <function-ref name="clr" scoped="" ref="0x10468e740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10468b3d8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P47"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10468b3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10468b728"/>
        <function-ref name="isInput" scoped="" ref="0x10468b8b0"/>
        <function-ref name="setResistor" scoped="" ref="0x10468ba38"/>
        <function-ref name="toggle" scoped="" ref="0x10468bbc0"/>
        <function-ref name="isOutput" scoped="" ref="0x10468bd48"/>
        <function-ref name="getResistor" scoped="" ref="0x10468a020"/>
        <function-ref name="makeOutput" scoped="" ref="0x10468a1a8"/>
        <function-ref name="get" scoped="" ref="0x10468a330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10468a4b8"/>
        <function-ref name="getRaw" scoped="" ref="0x10468a640"/>
        <function-ref name="set" scoped="" ref="0x10468a7c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10468a950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10468aad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10468ad60"/>
        <function-ref name="clr" scoped="" ref="0x104689020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x104687ca0" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P50"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x104687ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x104686020"/>
        <function-ref name="isInput" scoped="" ref="0x1046861a8"/>
        <function-ref name="setResistor" scoped="" ref="0x104686330"/>
        <function-ref name="toggle" scoped="" ref="0x1046864b8"/>
        <function-ref name="isOutput" scoped="" ref="0x104686640"/>
        <function-ref name="getResistor" scoped="" ref="0x1046867c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x104686950"/>
        <function-ref name="get" scoped="" ref="0x104686ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x104686c60"/>
        <function-ref name="getRaw" scoped="" ref="0x104686de8"/>
        <function-ref name="set" scoped="" ref="0x104685020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1046851a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x104685330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1046855b8"/>
        <function-ref name="clr" scoped="" ref="0x104685740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1046b83d8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P51"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1046b83d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1046b8728"/>
        <function-ref name="isInput" scoped="" ref="0x1046b88b0"/>
        <function-ref name="setResistor" scoped="" ref="0x1046b8a38"/>
        <function-ref name="toggle" scoped="" ref="0x1046b8bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x1046b8d48"/>
        <function-ref name="getResistor" scoped="" ref="0x1046b7020"/>
        <function-ref name="makeOutput" scoped="" ref="0x1046b71a8"/>
        <function-ref name="get" scoped="" ref="0x1046b7330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1046b74b8"/>
        <function-ref name="getRaw" scoped="" ref="0x1046b7640"/>
        <function-ref name="set" scoped="" ref="0x1046b77c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1046b7950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1046b7ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1046b7d60"/>
        <function-ref name="clr" scoped="" ref="0x1046b6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1046b4ca0" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P52"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1046b4ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1046b3020"/>
        <function-ref name="isInput" scoped="" ref="0x1046b31a8"/>
        <function-ref name="setResistor" scoped="" ref="0x1046b3330"/>
        <function-ref name="toggle" scoped="" ref="0x1046b34b8"/>
        <function-ref name="isOutput" scoped="" ref="0x1046b3640"/>
        <function-ref name="getResistor" scoped="" ref="0x1046b37c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x1046b3950"/>
        <function-ref name="get" scoped="" ref="0x1046b3ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1046b3c60"/>
        <function-ref name="getRaw" scoped="" ref="0x1046b3de8"/>
        <function-ref name="set" scoped="" ref="0x1046b2020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1046b21a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1046b2330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1046b25b8"/>
        <function-ref name="clr" scoped="" ref="0x1046b2740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1046af3d8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P53"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1046af3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1046af728"/>
        <function-ref name="isInput" scoped="" ref="0x1046af8b0"/>
        <function-ref name="setResistor" scoped="" ref="0x1046afa38"/>
        <function-ref name="toggle" scoped="" ref="0x1046afbc0"/>
        <function-ref name="isOutput" scoped="" ref="0x1046afd48"/>
        <function-ref name="getResistor" scoped="" ref="0x1046ae020"/>
        <function-ref name="makeOutput" scoped="" ref="0x1046ae1a8"/>
        <function-ref name="get" scoped="" ref="0x1046ae330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1046ae4b8"/>
        <function-ref name="getRaw" scoped="" ref="0x1046ae640"/>
        <function-ref name="set" scoped="" ref="0x1046ae7c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1046ae950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1046aead8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1046aed60"/>
        <function-ref name="clr" scoped="" ref="0x1046ad020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1046abca0" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P54"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1046abca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1046aa020"/>
        <function-ref name="isInput" scoped="" ref="0x1046aa1a8"/>
        <function-ref name="setResistor" scoped="" ref="0x1046aa330"/>
        <function-ref name="toggle" scoped="" ref="0x1046aa4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x1046aa640"/>
        <function-ref name="getResistor" scoped="" ref="0x1046aa7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x1046aa950"/>
        <function-ref name="get" scoped="" ref="0x1046aaad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1046aac60"/>
        <function-ref name="getRaw" scoped="" ref="0x1046aade8"/>
        <function-ref name="set" scoped="" ref="0x1046a9020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1046a91a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1046a9330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1046a95b8"/>
        <function-ref name="clr" scoped="" ref="0x1046a9740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1046a53d8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P55"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1046a53d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1046a5728"/>
        <function-ref name="isInput" scoped="" ref="0x1046a58b0"/>
        <function-ref name="setResistor" scoped="" ref="0x1046a5a38"/>
        <function-ref name="toggle" scoped="" ref="0x1046a5bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x1046a5d48"/>
        <function-ref name="getResistor" scoped="" ref="0x1046a4020"/>
        <function-ref name="makeOutput" scoped="" ref="0x1046a41a8"/>
        <function-ref name="get" scoped="" ref="0x1046a4330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1046a44b8"/>
        <function-ref name="getRaw" scoped="" ref="0x1046a4640"/>
        <function-ref name="set" scoped="" ref="0x1046a47c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1046a4950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1046a4ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1046a4d60"/>
        <function-ref name="clr" scoped="" ref="0x1046a3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1046a1ca0" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P56"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1046a1ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1046a0020"/>
        <function-ref name="isInput" scoped="" ref="0x1046a01a8"/>
        <function-ref name="setResistor" scoped="" ref="0x1046a0330"/>
        <function-ref name="toggle" scoped="" ref="0x1046a04b8"/>
        <function-ref name="isOutput" scoped="" ref="0x1046a0640"/>
        <function-ref name="getResistor" scoped="" ref="0x1046a07c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x1046a0950"/>
        <function-ref name="get" scoped="" ref="0x1046a0ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1046a0c60"/>
        <function-ref name="getRaw" scoped="" ref="0x1046a0de8"/>
        <function-ref name="set" scoped="" ref="0x10469f020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10469f1a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10469f330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10469f5b8"/>
        <function-ref name="clr" scoped="" ref="0x10469f740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1046d23d8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P57"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1046d23d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1046d2728"/>
        <function-ref name="isInput" scoped="" ref="0x1046d28b0"/>
        <function-ref name="setResistor" scoped="" ref="0x1046d2a38"/>
        <function-ref name="toggle" scoped="" ref="0x1046d2bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x1046d2d48"/>
        <function-ref name="getResistor" scoped="" ref="0x1046d1020"/>
        <function-ref name="makeOutput" scoped="" ref="0x1046d11a8"/>
        <function-ref name="get" scoped="" ref="0x1046d1330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1046d14b8"/>
        <function-ref name="getRaw" scoped="" ref="0x1046d1640"/>
        <function-ref name="set" scoped="" ref="0x1046d17c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1046d1950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1046d1ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1046d1d60"/>
        <function-ref name="clr" scoped="" ref="0x1046d0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1046ceca0" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P60"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1046ceca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1046cd020"/>
        <function-ref name="isInput" scoped="" ref="0x1046cd1a8"/>
        <function-ref name="setResistor" scoped="" ref="0x1046cd330"/>
        <function-ref name="toggle" scoped="" ref="0x1046cd4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x1046cd640"/>
        <function-ref name="getResistor" scoped="" ref="0x1046cd7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x1046cd950"/>
        <function-ref name="get" scoped="" ref="0x1046cdad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1046cdc60"/>
        <function-ref name="getRaw" scoped="" ref="0x1046cdde8"/>
        <function-ref name="set" scoped="" ref="0x1046cc020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1046cc1a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1046cc330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1046cc5b8"/>
        <function-ref name="clr" scoped="" ref="0x1046cc740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1046c93d8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P61"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1046c93d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1046c9728"/>
        <function-ref name="isInput" scoped="" ref="0x1046c98b0"/>
        <function-ref name="setResistor" scoped="" ref="0x1046c9a38"/>
        <function-ref name="toggle" scoped="" ref="0x1046c9bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x1046c9d48"/>
        <function-ref name="getResistor" scoped="" ref="0x1046c8020"/>
        <function-ref name="makeOutput" scoped="" ref="0x1046c81a8"/>
        <function-ref name="get" scoped="" ref="0x1046c8330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1046c84b8"/>
        <function-ref name="getRaw" scoped="" ref="0x1046c8640"/>
        <function-ref name="set" scoped="" ref="0x1046c87c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1046c8950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1046c8ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1046c8d60"/>
        <function-ref name="clr" scoped="" ref="0x1046c7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1046c5ca0" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P62"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1046c5ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1046c4020"/>
        <function-ref name="isInput" scoped="" ref="0x1046c41a8"/>
        <function-ref name="setResistor" scoped="" ref="0x1046c4330"/>
        <function-ref name="toggle" scoped="" ref="0x1046c44b8"/>
        <function-ref name="isOutput" scoped="" ref="0x1046c4640"/>
        <function-ref name="getResistor" scoped="" ref="0x1046c47c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x1046c4950"/>
        <function-ref name="get" scoped="" ref="0x1046c4ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1046c4c60"/>
        <function-ref name="getRaw" scoped="" ref="0x1046c4de8"/>
        <function-ref name="set" scoped="" ref="0x1046c3020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1046c31a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1046c3330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1046c35b8"/>
        <function-ref name="clr" scoped="" ref="0x1046c3740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1046c03d8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P63"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1046c03d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1046c0728"/>
        <function-ref name="isInput" scoped="" ref="0x1046c08b0"/>
        <function-ref name="setResistor" scoped="" ref="0x1046c0a38"/>
        <function-ref name="toggle" scoped="" ref="0x1046c0bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x1046c0d48"/>
        <function-ref name="getResistor" scoped="" ref="0x1046bf020"/>
        <function-ref name="makeOutput" scoped="" ref="0x1046bf1a8"/>
        <function-ref name="get" scoped="" ref="0x1046bf330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1046bf4b8"/>
        <function-ref name="getRaw" scoped="" ref="0x1046bf640"/>
        <function-ref name="set" scoped="" ref="0x1046bf7c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1046bf950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1046bfad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1046bfd60"/>
        <function-ref name="clr" scoped="" ref="0x1046be020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1046bcca0" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P64"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1046bcca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1046ba020"/>
        <function-ref name="isInput" scoped="" ref="0x1046ba1a8"/>
        <function-ref name="setResistor" scoped="" ref="0x1046ba330"/>
        <function-ref name="toggle" scoped="" ref="0x1046ba4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x1046ba640"/>
        <function-ref name="getResistor" scoped="" ref="0x1046ba7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x1046ba950"/>
        <function-ref name="get" scoped="" ref="0x1046baad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1046bac60"/>
        <function-ref name="getRaw" scoped="" ref="0x1046bade8"/>
        <function-ref name="set" scoped="" ref="0x1046b9020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1046b91a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1046b9330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1046b95b8"/>
        <function-ref name="clr" scoped="" ref="0x1046b9740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1046ec3d8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P65"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1046ec3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1046ec728"/>
        <function-ref name="isInput" scoped="" ref="0x1046ec8b0"/>
        <function-ref name="setResistor" scoped="" ref="0x1046eca38"/>
        <function-ref name="toggle" scoped="" ref="0x1046ecbc0"/>
        <function-ref name="isOutput" scoped="" ref="0x1046ecd48"/>
        <function-ref name="getResistor" scoped="" ref="0x1046eb020"/>
        <function-ref name="makeOutput" scoped="" ref="0x1046eb1a8"/>
        <function-ref name="get" scoped="" ref="0x1046eb330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1046eb4b8"/>
        <function-ref name="getRaw" scoped="" ref="0x1046eb640"/>
        <function-ref name="set" scoped="" ref="0x1046eb7c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1046eb950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1046ebad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1046ebd60"/>
        <function-ref name="clr" scoped="" ref="0x1046ea020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1046e8ca0" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P66"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1046e8ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1046e7020"/>
        <function-ref name="isInput" scoped="" ref="0x1046e71a8"/>
        <function-ref name="setResistor" scoped="" ref="0x1046e7330"/>
        <function-ref name="toggle" scoped="" ref="0x1046e74b8"/>
        <function-ref name="isOutput" scoped="" ref="0x1046e7640"/>
        <function-ref name="getResistor" scoped="" ref="0x1046e77c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x1046e7950"/>
        <function-ref name="get" scoped="" ref="0x1046e7ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1046e7c60"/>
        <function-ref name="getRaw" scoped="" ref="0x1046e7de8"/>
        <function-ref name="set" scoped="" ref="0x1046e6020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1046e61a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1046e6330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1046e65b8"/>
        <function-ref name="clr" scoped="" ref="0x1046e6740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1046e33d8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P67"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1046e33d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1046e3728"/>
        <function-ref name="isInput" scoped="" ref="0x1046e38b0"/>
        <function-ref name="setResistor" scoped="" ref="0x1046e3a38"/>
        <function-ref name="toggle" scoped="" ref="0x1046e3bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x1046e3d48"/>
        <function-ref name="getResistor" scoped="" ref="0x1046e2020"/>
        <function-ref name="makeOutput" scoped="" ref="0x1046e21a8"/>
        <function-ref name="get" scoped="" ref="0x1046e2330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1046e24b8"/>
        <function-ref name="getRaw" scoped="" ref="0x1046e2640"/>
        <function-ref name="set" scoped="" ref="0x1046e27c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1046e2950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1046e2ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1046e2d60"/>
        <function-ref name="clr" scoped="" ref="0x1046e1020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x104751da0" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x104751da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x104740170"/>
        <function-ref name="isInput" scoped="" ref="0x1047402f8"/>
        <function-ref name="setResistor" scoped="" ref="0x104740480"/>
        <function-ref name="toggle" scoped="" ref="0x104740608"/>
        <function-ref name="isOutput" scoped="" ref="0x104740790"/>
        <function-ref name="getResistor" scoped="" ref="0x104740918"/>
        <function-ref name="makeOutput" scoped="" ref="0x104740aa0"/>
        <function-ref name="get" scoped="" ref="0x104740c28"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x104740db0"/>
        <function-ref name="getRaw" scoped="" ref="0x10473f020"/>
        <function-ref name="set" scoped="" ref="0x10473f1a8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10473f330"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10473f4b8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10473f740"/>
        <function-ref name="clr" scoped="" ref="0x10473f8c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x104752c30" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x104752c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x104751020"/>
        <function-ref name="isInput" scoped="" ref="0x1047511a8"/>
        <function-ref name="toggle" scoped="" ref="0x104751330"/>
        <function-ref name="isOutput" scoped="" ref="0x1047514b8"/>
        <function-ref name="get" scoped="" ref="0x104751640"/>
        <function-ref name="makeOutput" scoped="" ref="0x1047517c8"/>
        <function-ref name="set" scoped="" ref="0x104751950"/>
        <function-ref name="clr" scoped="" ref="0x104751ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x10473c5f8" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x10473c5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10473c948"/>
        <function-ref name="isInput" scoped="" ref="0x10473cad0"/>
        <function-ref name="setResistor" scoped="" ref="0x10473cc58"/>
        <function-ref name="toggle" scoped="" ref="0x10473cde0"/>
        <function-ref name="isOutput" scoped="" ref="0x10473b020"/>
        <function-ref name="getResistor" scoped="" ref="0x10473b1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10473b330"/>
        <function-ref name="get" scoped="" ref="0x10473b4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10473b640"/>
        <function-ref name="getRaw" scoped="" ref="0x10473b7c8"/>
        <function-ref name="set" scoped="" ref="0x10473b950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10473bad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10473bc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10473a020"/>
        <function-ref name="clr" scoped="" ref="0x10473a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x10473d448" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x10473d448"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10473d798"/>
        <function-ref name="isInput" scoped="" ref="0x10473d920"/>
        <function-ref name="toggle" scoped="" ref="0x10473daa8"/>
        <function-ref name="isOutput" scoped="" ref="0x10473dc30"/>
        <function-ref name="get" scoped="" ref="0x10473ddb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10473c020"/>
        <function-ref name="set" scoped="" ref="0x10473c1a8"/>
        <function-ref name="clr" scoped="" ref="0x10473c330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x104771e20" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x104771e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10476f1a8"/>
        <function-ref name="isInput" scoped="" ref="0x10476f330"/>
        <function-ref name="setResistor" scoped="" ref="0x10476f4b8"/>
        <function-ref name="toggle" scoped="" ref="0x10476f640"/>
        <function-ref name="isOutput" scoped="" ref="0x10476f7c8"/>
        <function-ref name="getResistor" scoped="" ref="0x10476f950"/>
        <function-ref name="makeOutput" scoped="" ref="0x10476fad8"/>
        <function-ref name="get" scoped="" ref="0x10476fc60"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10476fde8"/>
        <function-ref name="getRaw" scoped="" ref="0x10476e020"/>
        <function-ref name="set" scoped="" ref="0x10476e1a8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10476e330"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10476e4b8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10476e740"/>
        <function-ref name="clr" scoped="" ref="0x10476e8c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x104772cd0" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x104772cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1047710a0"/>
        <function-ref name="isInput" scoped="" ref="0x104771228"/>
        <function-ref name="toggle" scoped="" ref="0x1047713b0"/>
        <function-ref name="isOutput" scoped="" ref="0x104771538"/>
        <function-ref name="get" scoped="" ref="0x1047716c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x104771848"/>
        <function-ref name="set" scoped="" ref="0x1047719d0"/>
        <function-ref name="clr" scoped="" ref="0x104771b58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x103e26020" loc="55:../../tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x103e26020"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x103e26370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x103c733c8" loc="51:../../tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x103c733c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x103c73718"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x103ef2800" loc="52:../../tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerState" scoped="" ref="0x103ef2800"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x103ef2b50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430ClockInit" ref="0x1040856c8" loc="39:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosb/MoteClockP.nc">
      <component-ref qname="MoteClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x1040856c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x104757640"/>
        <function-ref name="initTimerB" scoped="" ref="0x104085ba0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x104085d28"/>
        <function-ref name="initTimerA" scoped="" ref="0x104757020"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x104085a18"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x1047571a8"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x104757330"/>
        <function-ref name="initClocks" scoped="" ref="0x1047574b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x104787140" loc="60:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x104787140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x104787490"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x1040719b0" loc="57:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x1040719b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x104071d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x1047889f8" loc="59:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PlatformInit" scoped="" ref="0x1047889f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x104788d48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x104788020" loc="58:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x104788020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x104788370"/>
        <function-ref name="taskLoop" scoped="" ref="0x1047884f8"/>
        <function-ref name="runNextTask" scoped="" ref="0x104788680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x103bffca0" loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x103bffca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x103976790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x103bbe020"/>
        <function-ref name="runTask" scoped="" ref="0x103bbe1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x103bf8390" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x103bf8390"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x103bf86e0"/>
        <function-ref name="taskLoop" scoped="" ref="0x103bf8868"/>
        <function-ref name="runNextTask" scoped="" ref="0x103bf89f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x104033020" loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x104033020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x103976790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x104033370"/>
        <function-ref name="runTask" scoped="" ref="0x1040334f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x1040304e0" loc="57:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x1040304e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x104030830"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x1040350c0" loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x1040350c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x104035410"/>
        <function-ref name="taskLoop" scoped="" ref="0x104035598"/>
        <function-ref name="runNextTask" scoped="" ref="0x104035720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMControl" ref="0x1047a8060" loc="54:BulkTransferTestC.nc">
      <component-ref qname="BulkTransferTestC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMControl" scoped="" ref="0x1047a8060"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x1047a83b0"/>
        <function-ref name="stop" scoped="" ref="0x1047a8538"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LplxPacket" ref="0x1047942c8" loc="56:BulkTransferTestC.nc">
      <component-ref qname="BulkTransferTestC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LplxPacket" scoped="" ref="0x1047942c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LplxPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setOppoRouting" scoped="" ref="0x104794618"/>
        <function-ref name="clearSettings" scoped="" ref="0x1047947a0"/>
        <function-ref name="setPacketBulk" scoped="" ref="0x104794928"/>
        <function-ref name="getPacketBulk" scoped="" ref="0x104794ab0"/>
        <function-ref name="setPacketCI" scoped="" ref="0x104794c38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x10477abc8" loc="50:BulkTransferTestC.nc">
      <component-ref qname="BulkTransferTestC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x10477abc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x104779020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime" ref="0x1047a5710" loc="53:BulkTransferTestC.nc">
      <component-ref qname="BulkTransferTestC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x1047a5710"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10477da18"/>
            <typename><typedef-ref name="TMilli" ref="0x10477dd70"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x1047773a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x1047a7178" loc="52:BulkTransferTestC.nc">
      <component-ref qname="BulkTransferTestC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x1047a7178"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x1047a74c8"/>
        <function-ref name="getPayload" scoped="" ref="0x1047a7650"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x1047a77d8"/>
        <function-ref name="cancel" scoped="" ref="0x1047a7960"/>
        <function-ref name="sendDone" scoped="" ref="0x1047a7ae8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x104799698" loc="55:BulkTransferTestC.nc">
      <component-ref qname="BulkTransferTestC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x104799698"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1047999e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x104799b70"/>
        <function-ref name="getPayload" scoped="" ref="0x104799cf8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x104799e80"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x1047a4030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="packet_receive" ref="0x1047c3980" loc="75:BulkTransferTestC.nc">
      <component-ref qname="BulkTransferTestC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="packet_receive" scoped="" ref="0x1047c3980"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x1047c3dd0"/>
        <function-ref name="runTask" scoped="" ref="0x1047c2020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420xControl" ref="0x1047c6860" loc="58:BulkTransferTestC.nc">
      <component-ref qname="BulkTransferTestC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420xControl" scoped="" ref="0x1047c6860"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420xControl"/>
      </instance>
      <interface-functions>
        <function-ref name="turnRadioOn" scoped="" ref="0x1047c6bb0"/>
        <function-ref name="setChannel" scoped="" ref="0x1047c6d38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x1047792b0" loc="51:BulkTransferTestC.nc">
      <component-ref qname="BulkTransferTestC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x1047792b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x104779600"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="radio_turn_on" ref="0x1047c2978" loc="76:BulkTransferTestC.nc">
      <component-ref qname="BulkTransferTestC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="radio_turn_on" scoped="" ref="0x1047c2978"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x1047c2cc8"/>
        <function-ref name="runTask" scoped="" ref="0x1047c2e50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x10477b678" loc="49:BulkTransferTestC.nc">
      <component-ref qname="BulkTransferTestC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x10477b678"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x10477b9c8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x10477bb50"/>
        <function-ref name="led1On" scoped="" ref="0x10477bcd8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x10477be60"/>
        <function-ref name="led2Toggle" scoped="" ref="0x10477a020"/>
        <function-ref name="get" scoped="" ref="0x10477a1a8"/>
        <function-ref name="led1Off" scoped="" ref="0x10477a330"/>
        <function-ref name="led2Off" scoped="" ref="0x10477a950"/>
        <function-ref name="set" scoped="" ref="0x10477a4b8"/>
        <function-ref name="led0On" scoped="" ref="0x10477a640"/>
        <function-ref name="led2On" scoped="" ref="0x10477a7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420xProfile" ref="0x104792080" loc="59:BulkTransferTestC.nc">
      <component-ref qname="BulkTransferTestC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420xProfile" scoped="" ref="0x104792080"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420xProfile"/>
      </instance>
      <interface-functions>
        <function-ref name="getRadioOnTime" scoped="" ref="0x1047923d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="packet_forward" ref="0x1047c4a78" loc="74:BulkTransferTestC.nc">
      <component-ref qname="BulkTransferTestC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="packet_forward" scoped="" ref="0x1047c4a78"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x1047c4dc8"/>
        <function-ref name="runTask" scoped="" ref="0x1047c3020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Acks" ref="0x1047c9b10" loc="57:BulkTransferTestC.nc">
      <component-ref qname="BulkTransferTestC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x1047c9b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x1047c9e60"/>
        <function-ref name="noAck" scoped="" ref="0x10479a020"/>
        <function-ref name="wasAcked" scoped="" ref="0x10479a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x104b95548" loc="49:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="BulkTransferTestAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x104b95548"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x104b95898"/>
        <function-ref name="getPayload" scoped="" ref="0x104b95a20"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x104b95ba8"/>
        <function-ref name="cancel" scoped="" ref="0x104b95d30"/>
        <function-ref name="sendDone" scoped="" ref="0x104b94020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x104b94268" loc="50:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="BulkTransferTestAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x104b94268"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x104b945b8"/>
        <function-ref name="payloadLength" scoped="" ref="0x104b94740"/>
        <function-ref name="getPayload" scoped="" ref="0x104b948c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x104b94a50"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x104b94bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x104b94e20" loc="51:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="BulkTransferTestAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x104b94e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x104b931a8"/>
        <function-ref name="source" scoped="" ref="0x104b93330"/>
        <function-ref name="address" scoped="" ref="0x104b934b8"/>
        <function-ref name="destination" scoped="" ref="0x104b93640"/>
        <function-ref name="setSource" scoped="" ref="0x104b937c8"/>
        <function-ref name="setDestination" scoped="" ref="0x104b93950"/>
        <function-ref name="type" scoped="" ref="0x104b93ad8"/>
        <function-ref name="setType" scoped="" ref="0x104b93c60"/>
        <function-ref name="isForMe" scoped="" ref="0x104b93de8"/>
        <function-ref name="setGroup" scoped="" ref="0x104b92020"/>
        <function-ref name="localGroup" scoped="" ref="0x104b921a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x104b92430" loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="BulkTransferTestAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x104b92430"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x104b92780"/>
        <function-ref name="noAck" scoped="" ref="0x104b92908"/>
        <function-ref name="wasAcked" scoped="" ref="0x104b92a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x104f6c9b0" loc="49:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="BulkTransferTestAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x104f6c9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x104f6cd00"/>
        <function-ref name="getPayload" scoped="" ref="0x104f6a020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x104f6a1a8"/>
        <function-ref name="cancel" scoped="" ref="0x104f6a330"/>
        <function-ref name="sendDone" scoped="" ref="0x104f6a4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x104f6a700" loc="50:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="BulkTransferTestAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x104f6a700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x104f6aa50"/>
        <function-ref name="payloadLength" scoped="" ref="0x104f6abd8"/>
        <function-ref name="getPayload" scoped="" ref="0x104f6ad60"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x104f69020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x104f691a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x104f693f0" loc="51:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="BulkTransferTestAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x104f693f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x104f69740"/>
        <function-ref name="source" scoped="" ref="0x104f698c8"/>
        <function-ref name="address" scoped="" ref="0x104f69a50"/>
        <function-ref name="destination" scoped="" ref="0x104f69bd8"/>
        <function-ref name="setSource" scoped="" ref="0x104f69d60"/>
        <function-ref name="setDestination" scoped="" ref="0x104f68020"/>
        <function-ref name="type" scoped="" ref="0x104f681a8"/>
        <function-ref name="setType" scoped="" ref="0x104f68330"/>
        <function-ref name="isForMe" scoped="" ref="0x104f684b8"/>
        <function-ref name="setGroup" scoped="" ref="0x104f68640"/>
        <function-ref name="localGroup" scoped="" ref="0x104f687c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x104f68a50" loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="BulkTransferTestAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x104f68a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x104f68da0"/>
        <function-ref name="noAck" scoped="" ref="0x104fc1020"/>
        <function-ref name="wasAcked" scoped="" ref="0x104fc11a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x104fb8378" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="BulkTransferTestAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x104fb8378"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x104fb86c8"/>
        <function-ref name="getPayload" scoped="" ref="0x104fb8850"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x104fb89d8"/>
        <function-ref name="cancel" scoped="" ref="0x104fb8b60"/>
        <function-ref name="sendDone" scoped="" ref="0x104fb8ce8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x104fb7020" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="BulkTransferTestAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x104fb7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x104fb7370"/>
        <function-ref name="getPayload" scoped="" ref="0x104fb74f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x104fb7680"/>
        <function-ref name="cancel" scoped="" ref="0x104fb7808"/>
        <function-ref name="sendDone" scoped="" ref="0x104fb7990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x104fb7bd8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="BulkTransferTestAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x104fb7bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x104fb6020"/>
        <function-ref name="source" scoped="" ref="0x104fb61a8"/>
        <function-ref name="address" scoped="" ref="0x104fb6330"/>
        <function-ref name="destination" scoped="" ref="0x104fb64b8"/>
        <function-ref name="setSource" scoped="" ref="0x104fb6640"/>
        <function-ref name="setDestination" scoped="" ref="0x104fb67c8"/>
        <function-ref name="type" scoped="" ref="0x104fb6950"/>
        <function-ref name="setType" scoped="" ref="0x104fb6ad8"/>
        <function-ref name="isForMe" scoped="" ref="0x104fb6c60"/>
        <function-ref name="setGroup" scoped="" ref="0x104fb6de8"/>
        <function-ref name="localGroup" scoped="" ref="0x104fb5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x10480a020" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x10480a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x103976790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x10480a370"/>
        <function-ref name="getPayload" scoped="" ref="0x10480a4f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x10480a680"/>
        <function-ref name="cancel" scoped="" ref="0x10480a808"/>
        <function-ref name="sendDone" scoped="" ref="0x10480a990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x104876060" loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x104876060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x1041d43b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x1048763d0"/>
        <function-ref name="getPayload" scoped="" ref="0x104876558"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x1048766e0"/>
        <function-ref name="cancel" scoped="" ref="0x104876868"/>
        <function-ref name="sendDone" scoped="" ref="0x1048769f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x1048772c8" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x1048772c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x103976790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x104877638"/>
        <function-ref name="getPayload" scoped="" ref="0x1048777c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x104877948"/>
        <function-ref name="cancel" scoped="" ref="0x104877ad0"/>
        <function-ref name="sendDone" scoped="" ref="0x104877c58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x104874268" loc="50:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x104874268"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1048745b8"/>
        <function-ref name="payloadLength" scoped="" ref="0x104874740"/>
        <function-ref name="getPayload" scoped="" ref="0x1048748c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x104874a50"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x104874bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x104873020" loc="169:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="errorTask" scoped="" ref="0x104873020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x104873370"/>
        <function-ref name="runTask" scoped="" ref="0x1048734f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x1048737c0" loc="126:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CancelTask" scoped="" ref="0x1048737c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x104873b10"/>
        <function-ref name="runTask" scoped="" ref="0x104873c98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x104876c38" loc="49:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x104876c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x104875020"/>
        <function-ref name="source" scoped="" ref="0x1048751a8"/>
        <function-ref name="address" scoped="" ref="0x104875330"/>
        <function-ref name="destination" scoped="" ref="0x1048754b8"/>
        <function-ref name="setSource" scoped="" ref="0x104875640"/>
        <function-ref name="setDestination" scoped="" ref="0x1048757c8"/>
        <function-ref name="type" scoped="" ref="0x104875950"/>
        <function-ref name="setType" scoped="" ref="0x104875ad8"/>
        <function-ref name="isForMe" scoped="" ref="0x104875c60"/>
        <function-ref name="setGroup" scoped="" ref="0x104875de8"/>
        <function-ref name="localGroup" scoped="" ref="0x104874020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LplxPacket" ref="0x104869c00" loc="13:../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LplxPacket" scoped="" ref="0x104869c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="LplxPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setOppoRouting" scoped="" ref="0x104868020"/>
        <function-ref name="clearSettings" scoped="" ref="0x1048681a8"/>
        <function-ref name="setPacketBulk" scoped="" ref="0x104868330"/>
        <function-ref name="getPacketBulk" scoped="" ref="0x1048684b8"/>
        <function-ref name="setPacketCI" scoped="" ref="0x104868640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x10486e5b0" loc="7:../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x10486e5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x1041d43b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x10486e900"/>
        <function-ref name="getPayload" scoped="" ref="0x10486ea88"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x10486ec10"/>
        <function-ref name="cancel" scoped="" ref="0x10486ed98"/>
        <function-ref name="sendDone" scoped="" ref="0x10486d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x10486b348" loc="9:../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x10486b348"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x1041d43b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x10486b698"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x10486b920" loc="11:../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x10486b920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10486bc70"/>
        <function-ref name="payloadLength" scoped="" ref="0x10486bdf8"/>
        <function-ref name="getPayload" scoped="" ref="0x10486a020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x10486a1a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x10486a330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420xControl" ref="0x1048672f8" loc="16:../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420xControl" scoped="" ref="0x1048672f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420xControl"/>
      </instance>
      <interface-functions>
        <function-ref name="turnRadioOn" scoped="" ref="0x104867648"/>
        <function-ref name="setChannel" scoped="" ref="0x1048677d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x10486d7a0" loc="8:../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x10486d7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x1041d43b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x10486daf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x104868968" loc="14:../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x104868968"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x104868cb8"/>
        <function-ref name="noAck" scoped="" ref="0x104868e40"/>
        <function-ref name="wasAcked" scoped="" ref="0x104867020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420xProfile" ref="0x104867aa8" loc="17:../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420xProfile" scoped="" ref="0x104867aa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420xProfile"/>
      </instance>
      <interface-functions>
        <function-ref name="getRadioOnTime" scoped="" ref="0x104867df8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x104871918" loc="5:../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x104871918"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x104871c68"/>
        <function-ref name="stop" scoped="" ref="0x104871df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x10486a5d0" loc="12:../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x10486a5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x10486a920"/>
        <function-ref name="source" scoped="" ref="0x10486aaa8"/>
        <function-ref name="address" scoped="" ref="0x10486ac30"/>
        <function-ref name="destination" scoped="" ref="0x10486adb8"/>
        <function-ref name="setSource" scoped="" ref="0x104869020"/>
        <function-ref name="setDestination" scoped="" ref="0x1048691a8"/>
        <function-ref name="type" scoped="" ref="0x104869330"/>
        <function-ref name="setType" scoped="" ref="0x1048694b8"/>
        <function-ref name="isForMe" scoped="" ref="0x104869640"/>
        <function-ref name="setGroup" scoped="" ref="0x1048697c8"/>
        <function-ref name="localGroup" scoped="" ref="0x104869950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LplxPacket" ref="0x1048632d0" loc="12:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LplxPacket" scoped="" ref="0x1048632d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LplxPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setOppoRouting" scoped="" ref="0x104863620"/>
        <function-ref name="clearSettings" scoped="" ref="0x1048637a8"/>
        <function-ref name="setPacketBulk" scoped="" ref="0x104863930"/>
        <function-ref name="getPacketBulk" scoped="" ref="0x104863ab8"/>
        <function-ref name="setPacketCI" scoped="" ref="0x104863c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x1048992e0" loc="22:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x1048992e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x1041d43b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x104899630"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x1048997b8"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x104899940"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x104899ac8"/>
        <function-ref name="setCca" scoped="" ref="0x104899c50"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x104899dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x1048901c8" loc="23:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x1048901c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x1041d43b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x104890518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x1048615b8" loc="14:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x1048615b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x104861908"/>
        <function-ref name="payloadLength" scoped="" ref="0x104861a90"/>
        <function-ref name="getPayload" scoped="" ref="0x104861c18"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x104861da0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x10489e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x10489d798" loc="19:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x10489d798"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x1041d43b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x10489dae8"/>
        <function-ref name="getPayload" scoped="" ref="0x10489dc70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x10489ddf8"/>
        <function-ref name="cancel" scoped="" ref="0x10489c020"/>
        <function-ref name="sendDone" scoped="" ref="0x10489c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x10489a498" loc="21:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x10489a498"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x1041d43b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x10489a7e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioControl" ref="0x104866ac0" loc="11:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioControl" scoped="" ref="0x104866ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x104866e10"/>
        <function-ref name="stop" scoped="" ref="0x104863020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OppoRouting" ref="0x10489ec60" loc="17:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OppoRouting" scoped="" ref="0x10489ec60"/></type-interface>
      <instance>
        <interfacedef-ref qname="OppoRouting"/>
      </instance>
      <interface-functions>
        <function-ref name="setLocalMetric" scoped="" ref="0x10489d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420xControl" ref="0x1048907f0" loc="25:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420xControl" scoped="" ref="0x1048907f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420xControl"/>
      </instance>
      <interface-functions>
        <function-ref name="turnRadioOn" scoped="" ref="0x104890b40"/>
        <function-ref name="setChannel" scoped="" ref="0x104890cc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x10489c928" loc="20:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x10489c928"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x1041d43b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x10489cc78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x10489e348" loc="15:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x10489e348"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x10489e698"/>
        <function-ref name="noAck" scoped="" ref="0x10489e820"/>
        <function-ref name="wasAcked" scoped="" ref="0x10489e9a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420xProfile" ref="0x10488f020" loc="26:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420xProfile" scoped="" ref="0x10488f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420xProfile"/>
      </instance>
      <interface-functions>
        <function-ref name="getRadioOnTime" scoped="" ref="0x10488f470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x104862020" loc="13:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x104862020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x104862370"/>
        <function-ref name="source" scoped="" ref="0x1048624f8"/>
        <function-ref name="address" scoped="" ref="0x104862680"/>
        <function-ref name="destination" scoped="" ref="0x104862808"/>
        <function-ref name="setSource" scoped="" ref="0x104862990"/>
        <function-ref name="setDestination" scoped="" ref="0x104862b18"/>
        <function-ref name="type" scoped="" ref="0x104862ca0"/>
        <function-ref name="setType" scoped="" ref="0x104862e28"/>
        <function-ref name="isForMe" scoped="" ref="0x104861020"/>
        <function-ref name="setGroup" scoped="" ref="0x1048611a8"/>
        <function-ref name="localGroup" scoped="" ref="0x104861330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x1048849b8" loc="17:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x1048849b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x104884d08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x104886bc8" loc="15:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x104886bc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x104885020"/>
        <function-ref name="getPayload" scoped="" ref="0x1048851a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x104885330"/>
        <function-ref name="cancel" scoped="" ref="0x1048854b8"/>
        <function-ref name="sendDone" scoped="" ref="0x104885640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LplxPacket" ref="0x104883660" loc="19:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LplxPacket" scoped="" ref="0x104883660"/></type-interface>
      <instance>
        <interfacedef-ref qname="LplxPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setOppoRouting" scoped="" ref="0x1048839b0"/>
        <function-ref name="clearSettings" scoped="" ref="0x104883b38"/>
        <function-ref name="setPacketBulk" scoped="" ref="0x104883cc0"/>
        <function-ref name="getPacketBulk" scoped="" ref="0x104883e48"/>
        <function-ref name="setPacketCI" scoped="" ref="0x1048bd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x104887cd0" loc="11:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x104887cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x1041d43b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x1048860a0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x104886228"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x1048863b0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x104886538"/>
        <function-ref name="setCca" scoped="" ref="0x1048866c0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x104886848"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x1048871c8" loc="10:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x1048871c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x1041d43b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x104887518"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x1048bc8c8" loc="21:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x1048bc8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1048bcc18"/>
        <function-ref name="payloadLength" scoped="" ref="0x1048bcda0"/>
        <function-ref name="getPayload" scoped="" ref="0x1048bb020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x1048bb1a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x1048bb330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x10488b938" loc="7:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x10488b938"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x1041d43b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x10488bc88"/>
        <function-ref name="getPayload" scoped="" ref="0x10488be10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x10488a020"/>
        <function-ref name="cancel" scoped="" ref="0x10488a1a8"/>
        <function-ref name="sendDone" scoped="" ref="0x10488a330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x104888628" loc="9:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x104888628"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x1041d43b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x104888978"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x10488aab0" loc="8:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x10488aab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x1041d43b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x10488ae00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BulkSend" ref="0x104884020" loc="16:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BulkSend" scoped="" ref="0x104884020"/></type-interface>
      <instance>
        <interfacedef-ref qname="BulkSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x104884370"/>
        <function-ref name="cancel" scoped="" ref="0x1048844f8"/>
        <function-ref name="sendDone" scoped="" ref="0x104884680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x1048bb5a8" loc="22:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x1048bb5a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x1048bb9f8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x1048bbb80"/>
        <function-ref name="led1On" scoped="" ref="0x1048bbd08"/>
        <function-ref name="led1Toggle" scoped="" ref="0x1048ba020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x1048ba1a8"/>
        <function-ref name="get" scoped="" ref="0x1048ba330"/>
        <function-ref name="led1Off" scoped="" ref="0x1048ba4b8"/>
        <function-ref name="led2Off" scoped="" ref="0x1048baad8"/>
        <function-ref name="set" scoped="" ref="0x1048ba640"/>
        <function-ref name="led0On" scoped="" ref="0x1048ba7c8"/>
        <function-ref name="led2On" scoped="" ref="0x1048ba950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x1048bd2c0" loc="20:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x1048bd2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x1048bd610"/>
        <function-ref name="source" scoped="" ref="0x1048bd798"/>
        <function-ref name="address" scoped="" ref="0x1048bd920"/>
        <function-ref name="destination" scoped="" ref="0x1048bdaa8"/>
        <function-ref name="setSource" scoped="" ref="0x1048bdc30"/>
        <function-ref name="setDestination" scoped="" ref="0x1048bddb8"/>
        <function-ref name="type" scoped="" ref="0x1048bc020"/>
        <function-ref name="setType" scoped="" ref="0x1048bc1a8"/>
        <function-ref name="isForMe" scoped="" ref="0x1048bc330"/>
        <function-ref name="setGroup" scoped="" ref="0x1048bc4b8"/>
        <function-ref name="localGroup" scoped="" ref="0x1048bc640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSnoop" ref="0x104883060" loc="18:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSnoop" scoped="" ref="0x104883060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x1048833b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x1048c1020" loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x1048c1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x1048c1370"/>
        <function-ref name="changed" scoped="" ref="0x1048c14f8"/>
        <function-ref name="amGroup" scoped="" ref="0x1048c1680"/>
        <function-ref name="setAddress" scoped="" ref="0x1048c1808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioTimerUpdate" ref="0x1048e3350" loc="9:../../tos/chips/cc2420/x-lpl/CC2420xLplC.nc">
      <component-ref qname="CC2420xLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioTimerUpdate" scoped="" ref="0x1048e3350"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioTimerUpdate"/>
      </instance>
      <interface-functions>
        <function-ref name="startRadioTime" scoped="" ref="0x1048e36a0"/>
        <function-ref name="counterUpdate" scoped="" ref="0x1048e3828"/>
        <function-ref name="triggerUpdate" scoped="" ref="0x1048e39b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioControl" ref="0x1048ea2b8" loc="2:../../tos/chips/cc2420/x-lpl/CC2420xLplC.nc">
      <component-ref qname="CC2420xLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioControl" scoped="" ref="0x1048ea2b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x1048ea608"/>
        <function-ref name="stop" scoped="" ref="0x1048ea790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x1048eaa48" loc="3:../../tos/chips/cc2420/x-lpl/CC2420xLplC.nc">
      <component-ref qname="CC2420xLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x1048eaa48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x1048ead98"/>
        <function-ref name="getPayload" scoped="" ref="0x1048e9020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x1048e91a8"/>
        <function-ref name="cancel" scoped="" ref="0x1048e9330"/>
        <function-ref name="sendDone" scoped="" ref="0x1048e94b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x1048e87a0" loc="6:../../tos/chips/cc2420/x-lpl/CC2420xLplC.nc">
      <component-ref qname="CC2420xLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x1048e87a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x1048e8af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OppoRouting" ref="0x1048e8de8" loc="7:../../tos/chips/cc2420/x-lpl/CC2420xLplC.nc">
      <component-ref qname="CC2420xLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OppoRouting" scoped="" ref="0x1048e8de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="OppoRouting"/>
      </instance>
      <interface-functions>
        <function-ref name="setLocalMetric" scoped="" ref="0x1048e7170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x1048e8108" loc="5:../../tos/chips/cc2420/x-lpl/CC2420xLplC.nc">
      <component-ref qname="CC2420xLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x1048e8108"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x1048e8458"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BulkSend" ref="0x1048e9798" loc="4:../../tos/chips/cc2420/x-lpl/CC2420xLplC.nc">
      <component-ref qname="CC2420xLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BulkSend" scoped="" ref="0x1048e9798"/></type-interface>
      <instance>
        <interfacedef-ref qname="BulkSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x1048e9ae8"/>
        <function-ref name="cancel" scoped="" ref="0x1048e9c70"/>
        <function-ref name="sendDone" scoped="" ref="0x1048e9df8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420xControl" ref="0x1048e3cc8" loc="10:../../tos/chips/cc2420/x-lpl/CC2420xLplC.nc">
      <component-ref qname="CC2420xLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420xControl" scoped="" ref="0x1048e3cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420xControl"/>
      </instance>
      <interface-functions>
        <function-ref name="turnRadioOn" scoped="" ref="0x1048e60a0"/>
        <function-ref name="setChannel" scoped="" ref="0x1048e6228"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420xProfile" ref="0x1048e6540" loc="11:../../tos/chips/cc2420/x-lpl/CC2420xLplC.nc">
      <component-ref qname="CC2420xLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420xProfile" scoped="" ref="0x1048e6540"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420xProfile"/>
      </instance>
      <interface-functions>
        <function-ref name="getRadioOnTime" scoped="" ref="0x1048e6890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x10491bdf0" loc="19:../../tos/chips/cc2420/x-lpl/CC2420xLplP.nc">
      <component-ref qname="CC2420xLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x10491bdf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LplReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="txDetect" scoped="" ref="0x10491a170"/>
        <function-ref name="rxInit" scoped="" ref="0x10491a2f8"/>
        <function-ref name="receive" scoped="" ref="0x10491a480"/>
        <function-ref name="rxOn" scoped="" ref="0x10491a608"/>
        <function-ref name="rxBuffSet" scoped="" ref="0x10491a790"/>
        <function-ref name="rxEnable" scoped="" ref="0x10491a918"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x10491b580" loc="18:../../tos/chips/cc2420/x-lpl/CC2420xLplP.nc">
      <component-ref qname="CC2420xLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x10491b580"/></type-interface>
      <instance>
        <interfacedef-ref qname="LplSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x10491b8d0"/>
        <function-ref name="sendDone" scoped="" ref="0x10491ba58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioTimerUpdate" ref="0x10491c350" loc="15:../../tos/chips/cc2420/x-lpl/CC2420xLplP.nc">
      <component-ref qname="CC2420xLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioTimerUpdate" scoped="" ref="0x10491c350"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioTimerUpdate"/>
      </instance>
      <interface-functions>
        <function-ref name="startRadioTime" scoped="" ref="0x10491c6a0"/>
        <function-ref name="counterUpdate" scoped="" ref="0x10491c828"/>
        <function-ref name="triggerUpdate" scoped="" ref="0x10491c9b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioControl" ref="0x1048dfe40" loc="11:../../tos/chips/cc2420/x-lpl/CC2420xLplP.nc">
      <component-ref qname="CC2420xLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioControl" scoped="" ref="0x1048dfe40"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x1048de1c0"/>
        <function-ref name="stop" scoped="" ref="0x1048de348"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x1048de600" loc="12:../../tos/chips/cc2420/x-lpl/CC2420xLplP.nc">
      <component-ref qname="CC2420xLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x1048de600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x1048de950"/>
        <function-ref name="getPayload" scoped="" ref="0x1048dead8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x1048dec60"/>
        <function-ref name="cancel" scoped="" ref="0x1048dede8"/>
        <function-ref name="sendDone" scoped="" ref="0x1048dd020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x10490a080" loc="22:../../tos/chips/cc2420/x-lpl/CC2420xLplP.nc">
      <component-ref qname="CC2420xLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x10490a080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x10490a3d0"/>
        <function-ref name="rand32" scoped="" ref="0x10490a558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x1048df740" loc="10:../../tos/chips/cc2420/x-lpl/CC2420xLplP.nc">
      <component-ref qname="CC2420xLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x1048df740"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1048dfa90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420xControl" ref="0x10491ccc8" loc="16:../../tos/chips/cc2420/x-lpl/CC2420xLplP.nc">
      <component-ref qname="CC2420xLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420xControl" scoped="" ref="0x10491ccc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420xControl"/>
      </instance>
      <interface-functions>
        <function-ref name="turnRadioOn" scoped="" ref="0x10491b0a0"/>
        <function-ref name="setChannel" scoped="" ref="0x10491b228"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x1048ddc30" loc="14:../../tos/chips/cc2420/x-lpl/CC2420xLplP.nc">
      <component-ref qname="CC2420xLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x1048ddc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x10491c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SleepTimer" ref="0x10490ec30" loc="21:../../tos/chips/cc2420/x-lpl/CC2420xLplP.nc">
      <component-ref qname="CC2420xLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SleepTimer" scoped="" ref="0x10490ec30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10477da18"/>
            <typename><typedef-ref name="TMilli" ref="0x10477dd70"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x10490ce78"/>
        <function-ref name="fired" scoped="" ref="0x1049175a8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x10490c2d8"/>
        <function-ref name="isOneShot" scoped="" ref="0x104917e48"/>
        <function-ref name="getdt" scoped="" ref="0x10490b748"/>
        <function-ref name="gett0" scoped="" ref="0x10490b2f8"/>
        <function-ref name="isRunning" scoped="" ref="0x1049179f8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x1049187e8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x10490c8a8"/>
        <function-ref name="startOneShot" scoped="" ref="0x104918c88"/>
        <function-ref name="stop" scoped="" ref="0x104917158"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BulkSend" ref="0x1048dd300" loc="13:../../tos/chips/cc2420/x-lpl/CC2420xLplP.nc">
      <component-ref qname="CC2420xLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BulkSend" scoped="" ref="0x1048dd300"/></type-interface>
      <instance>
        <interfacedef-ref qname="BulkSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x1048dd650"/>
        <function-ref name="cancel" scoped="" ref="0x1048dd7d8"/>
        <function-ref name="sendDone" scoped="" ref="0x1048dd960"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x10490a810" loc="24:../../tos/chips/cc2420/x-lpl/CC2420xLplP.nc">
      <component-ref qname="CC2420xLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x10490a810"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x10490ac60"/>
        <function-ref name="led0Toggle" scoped="" ref="0x10490ade8"/>
        <function-ref name="led1On" scoped="" ref="0x104909020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x1049091a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x104909330"/>
        <function-ref name="get" scoped="" ref="0x1049094b8"/>
        <function-ref name="led1Off" scoped="" ref="0x104909640"/>
        <function-ref name="led2Off" scoped="" ref="0x104909c60"/>
        <function-ref name="set" scoped="" ref="0x1049097c8"/>
        <function-ref name="led0On" scoped="" ref="0x104909950"/>
        <function-ref name="led2On" scoped="" ref="0x104909ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LplTime" ref="0x10491abe8" loc="20:../../tos/chips/cc2420/x-lpl/CC2420xLplP.nc">
      <component-ref qname="CC2420xLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LplTime" scoped="" ref="0x10491abe8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LplTime"/>
      </instance>
      <interface-functions>
        <function-ref name="timeRadio" scoped="" ref="0x104919020"/>
        <function-ref name="timeCompensated" scoped="" ref="0x1049191a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x10496e1c8" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="CC2420xLplC.SleepTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x10496e1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10477da18"/>
            <typename><typedef-ref name="TMilli" ref="0x10477dd70"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x104b385f0"/>
        <function-ref name="fired" scoped="" ref="0x104b3aaf0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x104b398c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x104b39470"/>
        <function-ref name="getdt" scoped="" ref="0x104b36020"/>
        <function-ref name="gett0" scoped="" ref="0x104b38a40"/>
        <function-ref name="isRunning" scoped="" ref="0x104b39020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x10496ed10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x104b38020"/>
        <function-ref name="startOneShot" scoped="" ref="0x104b3a200"/>
        <function-ref name="stop" scoped="" ref="0x104b3a6a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x104966a18" loc="49:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x104966a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10477da18"/>
            <typename><typedef-ref name="TMilli" ref="0x10477dd70"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x103976790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x104963d60"/>
        <function-ref name="fired" scoped="" ref="0x104964470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x1049631c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x104964d10"/>
        <function-ref name="getdt" scoped="" ref="0x104961648"/>
        <function-ref name="gett0" scoped="" ref="0x1049611f8"/>
        <function-ref name="isRunning" scoped="" ref="0x1049648c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x1049655a0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x104963790"/>
        <function-ref name="startOneShot" scoped="" ref="0x104965a40"/>
        <function-ref name="stop" scoped="" ref="0x104964020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x10495d1c8" loc="35:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x10495d1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10477da18"/>
            <typename><typedef-ref name="TMilli" ref="0x10477dd70"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x103976790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x10499b5f0"/>
        <function-ref name="fired" scoped="" ref="0x10499daf0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x10499c8c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x10499c470"/>
        <function-ref name="getdt" scoped="" ref="0x10499a020"/>
        <function-ref name="gett0" scoped="" ref="0x10499ba40"/>
        <function-ref name="isRunning" scoped="" ref="0x10499c020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x10495dd10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x10499b020"/>
        <function-ref name="startOneShot" scoped="" ref="0x10499d200"/>
        <function-ref name="stop" scoped="" ref="0x10499d6a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x10499a5e0" loc="36:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x10499a5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10477da18"/>
            <typename><typedef-ref name="TMilli" ref="0x10477dd70"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x104998190"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x104960430" loc="34:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x104960430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x104960780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x104a774b8" loc="33:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x104a774b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10477da18"/>
            <typename><typedef-ref name="TMilli" ref="0x10477dd70"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x103977020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x104a74b18"/>
        <function-ref name="fired" scoped="" ref="0x104a76b90"/>
        <function-ref name="startAt" scoped="" ref="0x104a74510"/>
        <function-ref name="isRunning" scoped="" ref="0x104a74088"/>
        <function-ref name="getAlarm" scoped="" ref="0x104a73020"/>
        <function-ref name="start" scoped="" ref="0x104a76230"/>
        <function-ref name="stop" scoped="" ref="0x104a76708"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x104996b40" loc="32:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x104996b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x104a77020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x1050162d0" loc="33:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x1050162d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10477c1d8"/>
            <typename><typedef-ref name="T32khz" ref="0x10477c530"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x103976b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x105014928"/>
        <function-ref name="fired" scoped="" ref="0x1050159e8"/>
        <function-ref name="startAt" scoped="" ref="0x105014320"/>
        <function-ref name="isRunning" scoped="" ref="0x105015e70"/>
        <function-ref name="getAlarm" scoped="" ref="0x105014db0"/>
        <function-ref name="start" scoped="" ref="0x105015088"/>
        <function-ref name="stop" scoped="" ref="0x105015560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x105017a80" loc="32:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x105017a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x105017dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x104ffd020" loc="30:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x104ffd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x104ffd370"/>
        <function-ref name="setEvent" scoped="" ref="0x104ffd4f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x104ffd680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x104ffd808"/>
        <function-ref name="fired" scoped="" ref="0x104ffd990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x1050006e8" loc="28:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x1050006e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x105000a38"/>
        <function-ref name="setClockSource" scoped="" ref="0x105000bc0"/>
        <function-ref name="enableEvents" scoped="" ref="0x105000d48"/>
        <function-ref name="get" scoped="" ref="0x104fff020"/>
        <function-ref name="disableEvents" scoped="" ref="0x104fff1a8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x104fff330"/>
        <function-ref name="getMode" scoped="" ref="0x104fff4b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x104fff640"/>
        <function-ref name="overflow" scoped="" ref="0x104fff7c8"/>
        <function-ref name="setMode" scoped="" ref="0x104fff950"/>
        <function-ref name="setInputDivider" scoped="" ref="0x104fffad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x104fffd60" loc="29:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x104fffd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x104ffe0d8"/>
        <function-ref name="getControl" scoped="" ref="0x104ffe260"/>
        <function-ref name="enableEvents" scoped="" ref="0x104ffe3e8"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x104ffe570"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x104ffe6f8"/>
        <function-ref name="disableEvents" scoped="" ref="0x104ffe880"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x104ffea08"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x104ffeb90"/>
        <function-ref name="setControl" scoped="" ref="0x104ffed18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x1049b7498" loc="10:../../tos/chips/msp430/timer/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x1049b7498"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x103976790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x1049b77e8"/>
        <function-ref name="setEvent" scoped="" ref="0x1049b7970"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x1049b7af8"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x1049b7c80"/>
        <function-ref name="fired" scoped="" ref="0x1049b7e08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x1049bb020" loc="8:../../tos/chips/msp430/timer/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x1049bb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x103976790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1049bb370"/>
        <function-ref name="setClockSource" scoped="" ref="0x1049bb4f8"/>
        <function-ref name="enableEvents" scoped="" ref="0x1049bb680"/>
        <function-ref name="get" scoped="" ref="0x1049bb808"/>
        <function-ref name="disableEvents" scoped="" ref="0x1049bb990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1049bbb18"/>
        <function-ref name="getMode" scoped="" ref="0x1049bbca0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1049bbe28"/>
        <function-ref name="overflow" scoped="" ref="0x1049ba020"/>
        <function-ref name="setMode" scoped="" ref="0x1049ba1a8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x1049ba330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x1049bab60" loc="9:../../tos/chips/msp430/timer/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x1049bab60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x103976790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x1049b9020"/>
        <function-ref name="getControl" scoped="" ref="0x1049b91a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x1049b9330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x1049b94b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x1049b9640"/>
        <function-ref name="disableEvents" scoped="" ref="0x1049b97c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x1049b9950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x1049b9ad8"/>
        <function-ref name="setControl" scoped="" ref="0x1049b9c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x104ff48c8" loc="40:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x104ff48c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x104ff4c18"/>
        <function-ref name="setEvent" scoped="" ref="0x104ff4da0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x104ff2020"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x104ff21a8"/>
        <function-ref name="fired" scoped="" ref="0x104ff2330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x104ff6020" loc="38:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x104ff6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x104ff6370"/>
        <function-ref name="setClockSource" scoped="" ref="0x104ff64f8"/>
        <function-ref name="enableEvents" scoped="" ref="0x104ff6680"/>
        <function-ref name="get" scoped="" ref="0x104ff6808"/>
        <function-ref name="disableEvents" scoped="" ref="0x104ff6990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x104ff6b18"/>
        <function-ref name="getMode" scoped="" ref="0x104ff6ca0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x104ff6e28"/>
        <function-ref name="overflow" scoped="" ref="0x104ff5020"/>
        <function-ref name="setMode" scoped="" ref="0x104ff51a8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x104ff5330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x104ff9020" loc="37:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x104ff9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10477c1d8"/>
            <typename><typedef-ref name="T32khz" ref="0x10477c530"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x103976b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x104ff7690"/>
        <function-ref name="fired" scoped="" ref="0x104ff86f8"/>
        <function-ref name="startAt" scoped="" ref="0x104ff7088"/>
        <function-ref name="isRunning" scoped="" ref="0x104ff8b80"/>
        <function-ref name="getAlarm" scoped="" ref="0x104ff7b18"/>
        <function-ref name="start" scoped="" ref="0x104ff9d70"/>
        <function-ref name="stop" scoped="" ref="0x104ff8270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x104ffa7a8" loc="36:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x104ffa7a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x104ffaaf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x104ff55b8" loc="39:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x104ff55b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x104ff5908"/>
        <function-ref name="getControl" scoped="" ref="0x104ff5a90"/>
        <function-ref name="enableEvents" scoped="" ref="0x104ff5c18"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x104ff5da0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x104ff4020"/>
        <function-ref name="disableEvents" scoped="" ref="0x104ff41a8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x104ff4330"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x104ff44b8"/>
        <function-ref name="setControl" scoped="" ref="0x104ff4640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x104ff25b8" loc="41:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x104ff25b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x104ff2908"/>
        <function-ref name="led0Toggle" scoped="" ref="0x104ff2a90"/>
        <function-ref name="led1On" scoped="" ref="0x104ff2c18"/>
        <function-ref name="led1Toggle" scoped="" ref="0x104ff2da0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x104ff1020"/>
        <function-ref name="get" scoped="" ref="0x104ff11a8"/>
        <function-ref name="led1Off" scoped="" ref="0x104ff1330"/>
        <function-ref name="led0On" scoped="" ref="0x104ff1950"/>
        <function-ref name="set" scoped="" ref="0x104ff1640"/>
        <function-ref name="led2On" scoped="" ref="0x104ff14b8"/>
        <function-ref name="led2Off" scoped="" ref="0x104ff17c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x1049f42e8" loc="32:../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x1049f42e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10477da18"/>
            <typename><typedef-ref name="TMilli" ref="0x10477dd70"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x103977020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x1049ef088"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1049ef998"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1049ef510"/>
        <function-ref name="overflow" scoped="" ref="0x1049efe20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Counter32khz" ref="0x1049eb118" loc="32:../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <component-ref qname="Msp430Counter32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Counter32khz" scoped="" ref="0x1049eb118"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10477c1d8"/>
            <typename><typedef-ref name="T32khz" ref="0x10477c530"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x103976b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x1049ebe68"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1049ea7a8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1049ea320"/>
        <function-ref name="overflow" scoped="" ref="0x1049eac30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x104a1d8c0" loc="34:../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x104a1d8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x104a1dc10"/>
        <function-ref name="setClockSource" scoped="" ref="0x104a1dd98"/>
        <function-ref name="enableEvents" scoped="" ref="0x104a1b020"/>
        <function-ref name="get" scoped="" ref="0x104a1b1a8"/>
        <function-ref name="disableEvents" scoped="" ref="0x104a1b330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x104a1b4b8"/>
        <function-ref name="getMode" scoped="" ref="0x104a1b640"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x104a1b7c8"/>
        <function-ref name="overflow" scoped="" ref="0x104a1b950"/>
        <function-ref name="setMode" scoped="" ref="0x104a1bad8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x104a1bc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x1049e6888" loc="33:../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x1049e6888"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10477c1d8"/>
            <typename><typedef-ref name="T32khz" ref="0x10477c530"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x103976b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x104a1e660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x104a1d020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x104a1eae8"/>
        <function-ref name="overflow" scoped="" ref="0x104a1d4a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioTimerUpdate" ref="0x104a2dad0" loc="67:../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioTimerUpdate" scoped="" ref="0x104a2dad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioTimerUpdate"/>
      </instance>
      <interface-functions>
        <function-ref name="startRadioTime" scoped="" ref="0x104a2de20"/>
        <function-ref name="counterUpdate" scoped="" ref="0x104a2b020"/>
        <function-ref name="triggerUpdate" scoped="" ref="0x104a2b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x104a2fb10" loc="66:../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x104a2fb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10477c1d8"/>
            <typename><typedef-ref name="T32khz" ref="0x10477c530"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x103976b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x104a2e8f8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x104a2d230"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x104a2ed80"/>
        <function-ref name="overflow" scoped="" ref="0x104a2d6b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x104a178d8" loc="65:../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x104a178d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10477da18"/>
            <typename><typedef-ref name="TMilli" ref="0x10477dd70"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x103977020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x104a31660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x104a2f020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x104a31ae8"/>
        <function-ref name="overflow" scoped="" ref="0x104a2f4a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x105010128" loc="61:../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x105010128"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10477da18"/>
            <typename><typedef-ref name="TMilli" ref="0x10477dd70"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x103977020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x10500e758"/>
        <function-ref name="fired" scoped="" ref="0x10500f808"/>
        <function-ref name="startAt" scoped="" ref="0x10500e150"/>
        <function-ref name="isRunning" scoped="" ref="0x10500fc90"/>
        <function-ref name="getAlarm" scoped="" ref="0x10500ebe0"/>
        <function-ref name="start" scoped="" ref="0x105010e78"/>
        <function-ref name="stop" scoped="" ref="0x10500f380"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x10500a450" loc="73:../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x10500a450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10477c1d8"/>
            <typename><typedef-ref name="T32khz" ref="0x10477c530"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x103976b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x105008ab0"/>
        <function-ref name="fired" scoped="" ref="0x105009b30"/>
        <function-ref name="startAt" scoped="" ref="0x1050084a8"/>
        <function-ref name="isRunning" scoped="" ref="0x105008020"/>
        <function-ref name="getAlarm" scoped="" ref="0x105007020"/>
        <function-ref name="start" scoped="" ref="0x1050091d0"/>
        <function-ref name="stop" scoped="" ref="0x1050096a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x10500d230" loc="68:../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x10500d230"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10477da18"/>
            <typename><typedef-ref name="TMilli" ref="0x10477dd70"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x103977020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x10500c020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10500c930"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10500c4a8"/>
        <function-ref name="overflow" scoped="" ref="0x10500cdb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x105007438" loc="74:../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x105007438"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x105007788"/>
        <function-ref name="led0Toggle" scoped="" ref="0x105007910"/>
        <function-ref name="led1On" scoped="" ref="0x105007a98"/>
        <function-ref name="led1Toggle" scoped="" ref="0x105007c20"/>
        <function-ref name="led2Toggle" scoped="" ref="0x105007da8"/>
        <function-ref name="get" scoped="" ref="0x105005020"/>
        <function-ref name="led1Off" scoped="" ref="0x1050051a8"/>
        <function-ref name="led0On" scoped="" ref="0x1050057c8"/>
        <function-ref name="set" scoped="" ref="0x1050054b8"/>
        <function-ref name="led2On" scoped="" ref="0x105005330"/>
        <function-ref name="led2Off" scoped="" ref="0x105005640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x104ad0900" loc="76:../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="fired" scoped="" ref="0x104ad0900"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x104ad0c50"/>
        <function-ref name="runTask" scoped="" ref="0x104ad0dd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x104a8d6b0" loc="49:../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x104a8d6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10477da18"/>
            <typename><typedef-ref name="TMilli" ref="0x10477dd70"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x103977020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x104ad0020"/>
        <function-ref name="fired" scoped="" ref="0x104ad1020"/>
        <function-ref name="startAt" scoped="" ref="0x104ad1930"/>
        <function-ref name="isRunning" scoped="" ref="0x104ad14a8"/>
        <function-ref name="getAlarm" scoped="" ref="0x104ad04a8"/>
        <function-ref name="start" scoped="" ref="0x104a8c578"/>
        <function-ref name="stop" scoped="" ref="0x104a8ca50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x104a92528" loc="48:../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x104a92528"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10477da18"/>
            <typename><typedef-ref name="TMilli" ref="0x10477dd70"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x104a8f768"/>
        <function-ref name="fired" scoped="" ref="0x104a91e50"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x104a90b78"/>
        <function-ref name="isOneShot" scoped="" ref="0x104a90728"/>
        <function-ref name="getdt" scoped="" ref="0x104a8d088"/>
        <function-ref name="gett0" scoped="" ref="0x104a8fbb8"/>
        <function-ref name="isRunning" scoped="" ref="0x104a902d8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x104a910c0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x104a8f198"/>
        <function-ref name="startOneShot" scoped="" ref="0x104a91560"/>
        <function-ref name="stop" scoped="" ref="0x104a91a00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x104b07020" loc="74:../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="updateFromTimer" scoped="" ref="0x104b07020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x104b07370"/>
        <function-ref name="runTask" scoped="" ref="0x104b074f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x104b0d678" loc="51:../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x104b0d678"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10477da18"/>
            <typename><typedef-ref name="TMilli" ref="0x10477dd70"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x104b098f0"/>
        <function-ref name="fired" scoped="" ref="0x104b0a020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x104b0ad10"/>
        <function-ref name="isOneShot" scoped="" ref="0x104b0a8c0"/>
        <function-ref name="getdt" scoped="" ref="0x104b081c0"/>
        <function-ref name="gett0" scoped="" ref="0x104b09d40"/>
        <function-ref name="isRunning" scoped="" ref="0x104b0a470"/>
        <function-ref name="startPeriodic" scoped="" ref="0x104b0c1e8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x104b09320"/>
        <function-ref name="startOneShot" scoped="" ref="0x104b0c688"/>
        <function-ref name="stop" scoped="" ref="0x104b0cb28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioTimerUpdate" ref="0x104b085d8" loc="52:../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioTimerUpdate" scoped="" ref="0x104b085d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioTimerUpdate"/>
      </instance>
      <interface-functions>
        <function-ref name="startRadioTime" scoped="" ref="0x104b08928"/>
        <function-ref name="counterUpdate" scoped="" ref="0x104b08ab0"/>
        <function-ref name="triggerUpdate" scoped="" ref="0x104b08c38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x104b13328" loc="50:../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x104b13328"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10477da18"/>
            <typename><typedef-ref name="TMilli" ref="0x10477dd70"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x103976790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x104b0f7f0"/>
        <function-ref name="fired" scoped="" ref="0x104b12e10"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x104b10bb8"/>
        <function-ref name="isOneShot" scoped="" ref="0x104b10748"/>
        <function-ref name="getdt" scoped="" ref="0x104b0d0f8"/>
        <function-ref name="gett0" scoped="" ref="0x104b0fc60"/>
        <function-ref name="isRunning" scoped="" ref="0x104b102d8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x104b12020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x104b0f200"/>
        <function-ref name="startOneShot" scoped="" ref="0x104b124e0"/>
        <function-ref name="stop" scoped="" ref="0x104b129a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x104b047f8" loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x104b047f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10477da18"/>
            <typename><typedef-ref name="TMilli" ref="0x10477dd70"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x104b033a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x104b039d0" loc="49:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x104b039d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10477da18"/>
            <typename><typedef-ref name="TMilli" ref="0x10477dd70"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x103977020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x104af9768"/>
        <function-ref name="clearOverflow" scoped="" ref="0x104af80c0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x104af9bf0"/>
        <function-ref name="overflow" scoped="" ref="0x104af8548"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x104b31530" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x104b31530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x104b31880"/>
        <function-ref name="rand32" scoped="" ref="0x104b31a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x104b2f4c0" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x104b2f4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x103976b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x104b31088"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x104b35758" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x104b35758"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x104b35aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x104b2a320" loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x104b2a320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x104b2a670"/>
        <function-ref name="rand32" scoped="" ref="0x104b2a7f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x104b2b2b8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x104b2b2b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x103976b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x104b2be00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x104b30a40" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x104b30a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x104b30d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LplxPacket" ref="0x104b1bcd8" loc="4:../../tos/chips/cc2420/x-packet/CC2420xPacketP.nc">
      <component-ref qname="CC2420xPacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LplxPacket" scoped="" ref="0x104b1bcd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LplxPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setOppoRouting" scoped="" ref="0x104b600a0"/>
        <function-ref name="clearSettings" scoped="" ref="0x104b60228"/>
        <function-ref name="setPacketBulk" scoped="" ref="0x104b603b0"/>
        <function-ref name="getPacketBulk" scoped="" ref="0x104b60538"/>
        <function-ref name="setPacketCI" scoped="" ref="0x104b606c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x104b5e020" loc="6:../../tos/chips/cc2420/x-packet/CC2420xPacketP.nc">
      <component-ref qname="CC2420xPacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x104b5e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x104b5e370"/>
        <function-ref name="payloadLength" scoped="" ref="0x104b5e4f8"/>
        <function-ref name="getPayload" scoped="" ref="0x104b5e680"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x104b5e808"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x104b5e990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x104b609a0" loc="5:../../tos/chips/cc2420/x-packet/CC2420xPacketP.nc">
      <component-ref qname="CC2420xPacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x104b609a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x104b60cf0"/>
        <function-ref name="source" scoped="" ref="0x104b60e78"/>
        <function-ref name="address" scoped="" ref="0x104b5f030"/>
        <function-ref name="destination" scoped="" ref="0x104b5f1b8"/>
        <function-ref name="setSource" scoped="" ref="0x104b5f340"/>
        <function-ref name="setDestination" scoped="" ref="0x104b5f4c8"/>
        <function-ref name="type" scoped="" ref="0x104b5f650"/>
        <function-ref name="setType" scoped="" ref="0x104b5f7d8"/>
        <function-ref name="isForMe" scoped="" ref="0x104b5f960"/>
        <function-ref name="setGroup" scoped="" ref="0x104b5fae8"/>
        <function-ref name="localGroup" scoped="" ref="0x104b5fc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x104b5ed68" loc="7:../../tos/chips/cc2420/x-packet/CC2420xPacketP.nc">
      <component-ref qname="CC2420xPacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x104b5ed68"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x104b5d0f0"/>
        <function-ref name="noAck" scoped="" ref="0x104b5d278"/>
        <function-ref name="wasAcked" scoped="" ref="0x104b5d400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x104b88760" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="BulkTransferTestAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x104b88760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x104b88ab0"/>
        <function-ref name="payloadLength" scoped="" ref="0x104b88c38"/>
        <function-ref name="getPayload" scoped="" ref="0x104b88dc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x104b87020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x104b871a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x104b881c8" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="BulkTransferTestAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x104b881c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x104b88518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x104b873f0" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="BulkTransferTestAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x104b873f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x104b87740"/>
        <function-ref name="source" scoped="" ref="0x104b878c8"/>
        <function-ref name="address" scoped="" ref="0x104b87a50"/>
        <function-ref name="destination" scoped="" ref="0x104b87bd8"/>
        <function-ref name="setSource" scoped="" ref="0x104b87d60"/>
        <function-ref name="setDestination" scoped="" ref="0x104b86020"/>
        <function-ref name="type" scoped="" ref="0x104b861a8"/>
        <function-ref name="setType" scoped="" ref="0x104b86330"/>
        <function-ref name="isForMe" scoped="" ref="0x104b864b8"/>
        <function-ref name="setGroup" scoped="" ref="0x104b86640"/>
        <function-ref name="localGroup" scoped="" ref="0x104b867c8"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Init.nc">
      <documentation loc="34:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x10406e1d8" loc="62:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Init.nc">
        <documentation loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x103bf4780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Boot.nc">
      <documentation loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x104075e08" loc="60:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Boot.nc">
        <documentation loc="51:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430ClockInit" loc="27:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
      <documentation loc="22:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="defaultInitTimerB" ref="0x10409b020" loc="37:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerB" ref="0x10409e3e0" loc="32:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitTimerA" ref="0x10409d920" loc="36:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerA" ref="0x10409fd20" loc="31:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultSetupDcoCalibrate" ref="0x10409eaf0" loc="34:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="setupDcoCalibrate" ref="0x10409f020" loc="29:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initClocks" ref="0x10409f6a0" loc="30:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitClocks" ref="0x10409d258" loc="35:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x103d4ab08" loc="62:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x103ca9ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerControl" loc="29:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
      <documentation loc="22:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="setControlAsCapture" ref="0x1040f7410" loc="44:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <documentation loc="38:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
          <short> &#10; Sets the timer in capture mode.</short>
          <long> &#10; Sets the timer in capture mode.&#10; @param cm configures the capture to occur on none, rising, falling or rising_and_falling edges&#10; Msp430Timer.h has convenience definitions:&#10; MSP430TIMER_CM_NONE, MSP430TIMER_CM_RISING, MSP430TIMER_CM_FALLING, MSP430TIMER_CM_BOTH&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x103976790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x1040f71a0" loc="44:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x103976790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControl" ref="0x1040e4a40" loc="31:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x104094978"/>
            <typename><typedef-ref name="msp430_compare_control_t" ref="0x1040b1438"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x1040f7c18" loc="46:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="areEventsEnabled" ref="0x1040f6a50" loc="48:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x103bf01d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlAsCompare" ref="0x1040f9a48" loc="36:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x1040f6328" loc="47:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x1040fa1d8" loc="32:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x103bf01d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearPendingInterrupt" ref="0x1040fa900" loc="33:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x1040f9338" loc="35:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x104094978"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x1040b1438"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x1040f90c8" loc="35:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x104094978"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x1040b1438"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Capture" loc="28:../../tos/chips/msp430/timer/Msp430Capture.nc">
      <documentation loc="22:../../tos/chips/msp430/timer/Msp430Capture.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x10410de30" loc="33:../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="30:../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Reads the value of the last capture event in TxCCRx&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x103976b20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSynchronous" ref="0x104107290" loc="68:../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="59:../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set whether the capture should occur synchronously or asynchronously.</short>
          <long>&#10; Set whether the capture should occur synchronously or asynchronously.&#10; TinyOS default is synchronous captures.&#10; WARNING: if the capture signal is asynchronous to the timer clock,&#10;          it could case a race condition (see Timer documentation&#10;          in MSP430F1xx user guide)&#10; @param synchronous TRUE to synchronize the timer capture with the&#10;        next timer clock instead of occurring asynchronously.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x103bf01d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="synchronous" ref="0x104107020" loc="68:../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x103bf01d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x104107da0" loc="75:../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="70:../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Signalled when an event is captured.</short>
          <long>&#10; Signalled when an event is captured.&#10;&#10; @param time The time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x103976b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x104107b30" loc="75:../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x103976b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x104108800" loc="57:../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="54:../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Clear the capture overflow flag for when multiple captures occur&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x104108070" loc="52:../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="47:../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Determine if a capture overflow is pending.</short>
          <long>&#10; Determine if a capture overflow is pending.&#10;&#10; @return TRUE if the capture register has overflowed&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x103bf01d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEdge" ref="0x10410a788" loc="45:../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="35:../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set the edge that the capture should occur&#10;&#10; </short>
          <long>&#10; Set the edge that the capture should occur&#10;&#10; @param cm Capture Mode for edge capture.&#10; enums exist for:&#10;   MSP430TIMER_CM_NONE is no capture.&#10;   MSP430TIMER_CM_RISING is rising edge capture.&#10;   MSP430TIMER_CM_FALLING is a falling edge capture.&#10;   MSP430TIMER_CM_BOTH captures on both rising and falling edges.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x103976790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x10410a518" loc="45:../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x103976790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Compare" loc="27:../../tos/chips/msp430/timer/Msp430Compare.nc">
      <documentation loc="22:../../tos/chips/msp430/timer/Msp430Compare.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x1040f1470" loc="29:../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x103976b20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEvent" ref="0x1040f1d78" loc="30:../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x103976b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x1040f1b08" loc="30:../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x103976b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromPrev" ref="0x1040ef728" loc="31:../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x103976b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x1040ef4b8" loc="31:../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x103976b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromNow" ref="0x10410e0a8" loc="32:../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x103976b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x1040efe08" loc="32:../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x103976b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x10410e730" loc="34:../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Timer" loc="32:../../tos/chips/msp430/timer/Msp430Timer.nc">
      <documentation loc="22:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x1040e0488" loc="41:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x1040febd8" loc="44:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x103976b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="clockSource" ref="0x1040fe968" loc="44:../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x103976b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x1040e0b58" loc="42:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x1040e6920" loc="34:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x103976b20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x1040fe258" loc="43:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x1040e27b0" loc="36:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x1040e1dd0" loc="40:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x1040e20d8" loc="35:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x103bf01d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x1040e2e58" loc="37:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMode" ref="0x1040e1738" loc="39:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x1040e14c8" loc="39:../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInputDivider" ref="0x1040fd5d8" loc="45:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x103976b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="inputDivider" ref="0x1040fd368" loc="45:../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x103976b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerEvent" loc="26:../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
      <documentation loc="22:../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x104118da0" loc="28:../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <interfacedef-ref qname="Msp430TimerEvent"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Leds.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x1041c0550" loc="61:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="58:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x1041c0c88" loc="67:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="63:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x1041bf420" loc="72:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="69:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x1041bd2a8" loc="83:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="79:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x1041bc8b0" loc="100:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="96:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x1041bb070" loc="117:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="103:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x103976790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x1041bfb38" loc="77:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="74:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x1041bbb70" loc="134:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="120:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x103976790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x1041bb900" loc="134:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x103976790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x1041c1df8" loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x1041bda18" loc="89:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="86:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x1041bc178" loc="94:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="91:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Receive.nc">
      <documentation loc="34:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x104334160" loc="78:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Receive.nc">
        <documentation loc="58:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104219540"/>
              <typename><typedef-ref name="message_t" ref="0x104218aa8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104219540"/>
                <typename><typedef-ref name="message_t" ref="0x104218aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x103976790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x104316820" loc="78:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104219540"/>
                <typename><typedef-ref name="message_t" ref="0x104218aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x104316b48" loc="78:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x104316e58" loc="78:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x103976790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="OppoRouting" loc="1:../../tos/chips/cc2420/interfaces/OppoRouting.nc">
      <function command="" provided="0" name="setLocalMetric" ref="0x104335d98" loc="2:../../tos/chips/cc2420/interfaces/OppoRouting.nc">
        <interfacedef-ref qname="OppoRouting"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x103976b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="metric" ref="0x104335b28" loc="2:../../tos/chips/cc2420/interfaces/OppoRouting.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x103976b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420xProfile" loc="1:../../tos/chips/cc2420/interfaces/CC2420xProfile.nc">
      <function command="" provided="0" name="getRadioOnTime" ref="0x10432f710" loc="2:../../tos/chips/cc2420/interfaces/CC2420xProfile.nc">
        <interfacedef-ref qname="CC2420xProfile"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x103977020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LplSend" loc="1:../../tos/chips/cc2420/interfaces/LplSend.nc">
      <function command="" provided="0" name="send" ref="0x104314020" loc="3:../../tos/chips/cc2420/interfaces/LplSend.nc">
        <interfacedef-ref qname="LplSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x103bf4780"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104219540"/>
                <typename><typedef-ref name="message_t" ref="0x104218aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:15" alignment="I:1"><nx_struct-ref ref="0x104213590"/>
                <typename><typedef-ref name="rtx_setting_t" ref="0x104212020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x1043188c0" loc="3:../../tos/chips/cc2420/interfaces/LplSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104219540"/>
                <typename><typedef-ref name="message_t" ref="0x104218aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ts" ref="0x104318c40" loc="3:../../tos/chips/cc2420/interfaces/LplSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:15" alignment="I:1"><nx_struct-ref ref="0x104213590"/>
                <typename><typedef-ref name="rtx_setting_t" ref="0x104212020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x10433b0c8" loc="5:../../tos/chips/cc2420/interfaces/LplSend.nc">
        <interfacedef-ref qname="LplSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104219540"/>
                <typename><typedef-ref name="message_t" ref="0x104218aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:15" alignment="I:1"><nx_struct-ref ref="0x104213590"/>
                <typename><typedef-ref name="rtx_setting_t" ref="0x104212020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x103bf4780"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x104314708" loc="5:../../tos/chips/cc2420/interfaces/LplSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104219540"/>
                <typename><typedef-ref name="message_t" ref="0x104218aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ts" ref="0x104314a88" loc="5:../../tos/chips/cc2420/interfaces/LplSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:15" alignment="I:1"><nx_struct-ref ref="0x104213590"/>
                <typename><typedef-ref name="rtx_setting_t" ref="0x104212020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x104314db0" loc="5:../../tos/chips/cc2420/interfaces/LplSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x103bf4780"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LplTime" loc="1:../../tos/chips/cc2420/interfaces/LplTime.nc">
      <function event="" provided="0" name="timeRadio" ref="0x104336a08" loc="2:../../tos/chips/cc2420/interfaces/LplTime.nc">
        <interfacedef-ref qname="LplTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:36" alignment="I:2"><struct-ref ref="0x10420d478"/>
                <typename><typedef-ref name="rtx_time_compensation_t" ref="0x10422e278"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_rtx_time" ref="0x104336798" loc="2:../../tos/chips/cc2420/interfaces/LplTime.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:36" alignment="I:2"><struct-ref ref="0x10420d478"/>
                <typename><typedef-ref name="rtx_time_compensation_t" ref="0x10422e278"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="timeCompensated" ref="0x1043307b8" loc="3:../../tos/chips/cc2420/interfaces/LplTime.nc">
        <interfacedef-ref qname="LplTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x103976b20"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:36" alignment="I:2"><struct-ref ref="0x10420d478"/>
                <typename><typedef-ref name="rtx_time_compensation_t" ref="0x10422e278"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x104330108" loc="3:../../tos/chips/cc2420/interfaces/LplTime.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x103976b20"/></typename>
            </type-int>
          </variable>
          <variable name="p_rtx_time" ref="0x104330538" loc="3:../../tos/chips/cc2420/interfaces/LplTime.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:36" alignment="I:2"><struct-ref ref="0x10420d478"/>
                <typename><typedef-ref name="rtx_time_compensation_t" ref="0x10422e278"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LplReceive" loc="1:../../tos/chips/cc2420/interfaces/LplReceive.nc">
      <function command="" provided="0" name="txDetect" ref="0x10433aa40" loc="5:../../tos/chips/cc2420/interfaces/LplReceive.nc">
        <interfacedef-ref qname="LplReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxInit" ref="0x104339870" loc="9:../../tos/chips/cc2420/interfaces/LplReceive.nc">
        <interfacedef-ref qname="LplReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x103bf4780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receive" ref="0x104337c98" loc="13:../../tos/chips/cc2420/interfaces/LplReceive.nc">
        <interfacedef-ref qname="LplReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104219540"/>
                <typename><typedef-ref name="message_t" ref="0x104218aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x103976790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x1043376f8" loc="13:../../tos/chips/cc2420/interfaces/LplReceive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104219540"/>
                <typename><typedef-ref name="message_t" ref="0x104218aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="size" ref="0x104337a18" loc="13:../../tos/chips/cc2420/interfaces/LplReceive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x103976790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rxOn" ref="0x104339178" loc="7:../../tos/chips/cc2420/interfaces/LplReceive.nc">
        <interfacedef-ref qname="LplReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x103bf4780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxBuffSet" ref="0x104337020" loc="11:../../tos/chips/cc2420/interfaces/LplReceive.nc">
        <interfacedef-ref qname="LplReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxEnable" ref="0x10433a378" loc="3:../../tos/chips/cc2420/interfaces/LplReceive.nc">
        <interfacedef-ref qname="LplReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x104511d70" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x104510460" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x103bf01d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x104511020" loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x10450f258" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x103bf01d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x1045116c0" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x103bf01d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x104510b18" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x104513258" loc="40:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x1045138c8" loc="41:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430GeneralIO" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
      <documentation loc="34:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x104547258" loc="78:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="75:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to input.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x104547940" loc="80:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x103bf01d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setResistor" ref="0x104542020" loc="110:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="103:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin pullup / pull down resistor mode.</short>
          <long>&#10; Set pin pullup / pull down resistor mode.&#10; @param mode One of the MSP430_PORT_RESISTOR_* values&#10; @return EINVAL if invalid mode or pin does not support resistor configuration;&#10; FAIL if pin is not an input;&#10; SUCCESS if pin supports resistor configuration, is an input, and mode is valid&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x103bf4780"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x103976790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x104543c40" loc="110:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x103976790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x104549bc8" loc="58:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Toggle pin status.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x104546768" loc="87:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x103bf01d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getResistor" ref="0x1045428a0" loc="117:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="112:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the pin pullup / pulldown resistor mode.</short>
          <long>&#10; Get the pin pullup / pulldown resistor mode.&#10;&#10; @return one of the MSP430_PORT_RESISTOR_* values&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x103976790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x104546070" loc="85:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="82:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to output.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x104548ac0" loc="73:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="68:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Read pin value.</short>
          <long>&#10; Read pin value.&#10;&#10; @return TRUE if pin is high, FALSE otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x103bf01d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectIOFunc" ref="0x104544cc8" loc="99:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="96:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for I/O functionality.</short>
          <long>&#10; Set pin for I/O functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRaw" ref="0x104548328" loc="66:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="60:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the port status that contains the pin.</short>
          <long>&#10; Get the port status that contains the pin.&#10;&#10; @return Status of the port that contains the given pin. The x'th&#10; pin on the port will be represented in the x'th bit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x103976790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x10454dde8" loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to high.</short>
          <long>&#10; Set pin to high.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectModuleFunc" ref="0x104546e80" loc="92:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="89:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for module specific functionality.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isIOFunc" ref="0x104543438" loc="101:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x103bf01d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isModuleFunc" ref="0x1045445d8" loc="94:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x103bf01d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x1045494e8" loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="50:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to low.</short>
          <long>&#10; Set pin to low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x1040301d8" loc="76:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x103ef2458" loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x103bed020" loc="57:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x103bf8020" loc="72:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x103bed718" loc="65:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x103bf01d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x103c00ba0" loc="67:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x103bf4780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x103bff3e0" loc="75:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/StdControl.nc">
      <documentation loc="72:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x1047a33a0" loc="95:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/StdControl.nc">
        <documentation loc="88:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x103bf4780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x1047a3b40" loc="105:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/StdControl.nc">
        <documentation loc="97:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x103bf4780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LplxPacket" loc="1:../../tos/chips/cc2420/interfaces/LplxPacket.nc">
      <function command="" provided="0" name="setOppoRouting" ref="0x1047960c8" loc="3:../../tos/chips/cc2420/interfaces/LplxPacket.nc">
        <interfacedef-ref qname="LplxPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104219540"/>
                <typename><typedef-ref name="message_t" ref="0x104218aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x103976b20"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x103976b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m" ref="0x104798770" loc="3:../../tos/chips/cc2420/interfaces/LplxPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104219540"/>
                <typename><typedef-ref name="message_t" ref="0x104218aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="metric" ref="0x104798ab0" loc="3:../../tos/chips/cc2420/interfaces/LplxPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x103976b20"/></typename>
            </type-int>
          </variable>
          <variable name="progress" ref="0x104798e08" loc="3:../../tos/chips/cc2420/interfaces/LplxPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x103976b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearSettings" ref="0x104794030" loc="6:../../tos/chips/cc2420/interfaces/LplxPacket.nc">
        <interfacedef-ref qname="LplxPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104219540"/>
                <typename><typedef-ref name="message_t" ref="0x104218aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m" ref="0x104795d98" loc="6:../../tos/chips/cc2420/interfaces/LplxPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104219540"/>
                <typename><typedef-ref name="message_t" ref="0x104218aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setPacketBulk" ref="0x104796d18" loc="4:../../tos/chips/cc2420/interfaces/LplxPacket.nc">
        <interfacedef-ref qname="LplxPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104219540"/>
                <typename><typedef-ref name="message_t" ref="0x104218aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x103976790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m" ref="0x104796778" loc="4:../../tos/chips/cc2420/interfaces/LplxPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104219540"/>
                <typename><typedef-ref name="message_t" ref="0x104218aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="size" ref="0x104796a98" loc="4:../../tos/chips/cc2420/interfaces/LplxPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x103976790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPacketBulk" ref="0x1047956e8" loc="5:../../tos/chips/cc2420/interfaces/LplxPacket.nc">
        <interfacedef-ref qname="LplxPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x103976790"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104219540"/>
                <typename><typedef-ref name="message_t" ref="0x104218aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m" ref="0x104795478" loc="5:../../tos/chips/cc2420/interfaces/LplxPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104219540"/>
                <typename><typedef-ref name="message_t" ref="0x104218aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setPacketCI" ref="0x1047980b8" loc="2:../../tos/chips/cc2420/interfaces/LplxPacket.nc">
        <interfacedef-ref qname="LplxPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104219540"/>
                <typename><typedef-ref name="message_t" ref="0x104218aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x103976790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m" ref="0x1047a4ad0" loc="2:../../tos/chips/cc2420/interfaces/LplxPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104219540"/>
                <typename><typedef-ref name="message_t" ref="0x104218aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="hop" ref="0x1047a4de0" loc="2:../../tos/chips/cc2420/interfaces/LplxPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x103976790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x104778960" loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x104778960"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x1047a5258" loc="61:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x103977020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMSend.nc">
      <documentation loc="34:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x104776b50" loc="80:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="60:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x103bf4780"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x1041d4b18"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104219540"/>
                <typename><typedef-ref name="message_t" ref="0x104218aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x103976790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x104776250" loc="80:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x1041d4b18"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x1047765b0" loc="80:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104219540"/>
                <typename><typedef-ref name="message_t" ref="0x104218aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x1047768c0" loc="80:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x103976790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x1047a92d8" loc="135:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="126:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104219540"/>
                <typename><typedef-ref name="message_t" ref="0x104218aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x103976790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x1047aabe8" loc="135:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104219540"/>
                <typename><typedef-ref name="message_t" ref="0x104218aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x1047a9020" loc="135:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x103976790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x1047aa3e0" loc="123:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="113:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x103976790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x1047ad108" loc="96:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="82:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x103bf4780"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104219540"/>
                <typename><typedef-ref name="message_t" ref="0x104218aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x1047aee50" loc="96:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104219540"/>
                <typename><typedef-ref name="message_t" ref="0x104218aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x1047ac5c8" loc="110:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="98:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104219540"/>
                <typename><typedef-ref name="message_t" ref="0x104218aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x103bf4780"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x1047ac020" loc="110:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104219540"/>
                <typename><typedef-ref name="message_t" ref="0x104218aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x1047ac348" loc="110:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x103bf4780"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Packet.nc">
      <documentation loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x1047a13b0" loc="65:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="58:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104219540"/>
                <typename><typedef-ref name="message_t" ref="0x104218aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x1047a1140" loc="65:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104219540"/>
                <typename><typedef-ref name="message_t" ref="0x104218aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x1047a03b0" loc="78:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="67:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x103976790"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104219540"/>
                <typename><typedef-ref name="message_t" ref="0x104218aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x1047a0140" loc="78:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104219540"/>
                <typename><typedef-ref name="message_t" ref="0x104218aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x10479b5e8" loc="126:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="109:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104219540"/>
                <typename><typedef-ref name="message_t" ref="0x104218aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x103976790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x10479b020" loc="126:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104219540"/>
                <typename><typedef-ref name="message_t" ref="0x104218aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x10479b330" loc="126:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x103976790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x10479c668" loc="106:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="96:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x103976790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x10479e788" loc="94:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="80:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104219540"/>
                <typename><typedef-ref name="message_t" ref="0x104218aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x103976790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x10479e1f8" loc="94:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104219540"/>
                <typename><typedef-ref name="message_t" ref="0x104218aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x10479e508" loc="94:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x103976790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420xControl" loc="1:../../tos/chips/cc2420/interfaces/CC2420xControl.nc">
      <function command="" provided="0" name="turnRadioOn" ref="0x10479ac90" loc="2:../../tos/chips/cc2420/interfaces/CC2420xControl.nc">
        <interfacedef-ref qname="CC2420xControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x1047c65c8" loc="3:../../tos/chips/cc2420/interfaces/CC2420xControl.nc">
        <interfacedef-ref qname="CC2420xControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x103976790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x1047c6358" loc="3:../../tos/chips/cc2420/interfaces/CC2420xControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x103976790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x1047a2ca0" loc="59:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x103bf4780"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104219540"/>
                <typename><typedef-ref name="message_t" ref="0x104218aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x1047a2a30" loc="59:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104219540"/>
                <typename><typedef-ref name="message_t" ref="0x104218aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x1047ca020" loc="71:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x103bf4780"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104219540"/>
                <typename><typedef-ref name="message_t" ref="0x104218aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x1047cbcb0" loc="71:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104219540"/>
                <typename><typedef-ref name="message_t" ref="0x104218aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x1047c9108" loc="85:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x103bf01d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104219540"/>
                <typename><typedef-ref name="message_t" ref="0x104218aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x1047cae28" loc="85:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104219540"/>
                <typename><typedef-ref name="message_t" ref="0x104218aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x1047f93b0" loc="177:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x1041d4760"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104219540"/>
                <typename><typedef-ref name="message_t" ref="0x104218aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x1047f9140" loc="177:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104219540"/>
                <typename><typedef-ref name="message_t" ref="0x104218aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x104802290" loc="88:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x1041d4b18"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104219540"/>
                <typename><typedef-ref name="message_t" ref="0x104218aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x104802020" loc="88:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104219540"/>
                <typename><typedef-ref name="message_t" ref="0x104218aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x1048057a8" loc="68:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x1041d4b18"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x104804290" loc="78:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x1041d4b18"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104219540"/>
                <typename><typedef-ref name="message_t" ref="0x104218aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x104804020" loc="78:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104219540"/>
                <typename><typedef-ref name="message_t" ref="0x104218aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x104800a28" loc="121:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104219540"/>
                <typename><typedef-ref name="message_t" ref="0x104218aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x1041d4b18"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x104800470" loc="121:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104219540"/>
                <typename><typedef-ref name="message_t" ref="0x104218aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x1048007a8" loc="121:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x1041d4b18"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x1048015d8" loc="103:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104219540"/>
                <typename><typedef-ref name="message_t" ref="0x104218aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x1041d4b18"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x104801020" loc="103:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104219540"/>
                <typename><typedef-ref name="message_t" ref="0x104218aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x104801358" loc="103:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x1041d4b18"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x1047fb020" loc="147:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x1041d43b0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104219540"/>
                <typename><typedef-ref name="message_t" ref="0x104218aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x1047fecf8" loc="147:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104219540"/>
                <typename><typedef-ref name="message_t" ref="0x104218aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x1047fa2a0" loc="162:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104219540"/>
                <typename><typedef-ref name="message_t" ref="0x104218aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x1041d43b0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x1047fbce8" loc="162:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104219540"/>
                <typename><typedef-ref name="message_t" ref="0x104218aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x1047fa020" loc="162:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x1041d43b0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x1047fdbf8" loc="136:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x103bf01d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104219540"/>
                <typename><typedef-ref name="message_t" ref="0x104218aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x1047fd988" loc="136:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104219540"/>
                <typename><typedef-ref name="message_t" ref="0x104218aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x1047f87b8" loc="187:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104219540"/>
                <typename><typedef-ref name="message_t" ref="0x104218aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x1041d4760"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x1047f8208" loc="187:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104219540"/>
                <typename><typedef-ref name="message_t" ref="0x104218aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x1047f8538" loc="187:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x1041d4760"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x1047f6560" loc="195:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x1041d4760"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Send.nc">
      <documentation loc="34:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x1048235b0" loc="75:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="57:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x103bf4780"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104219540"/>
                <typename><typedef-ref name="message_t" ref="0x104218aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x103976790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x104823020" loc="75:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104219540"/>
                <typename><typedef-ref name="message_t" ref="0x104218aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x104823330" loc="75:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x103976790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x10481f878" loc="125:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="115:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104219540"/>
                <typename><typedef-ref name="message_t" ref="0x104218aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x103976790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x10481f2b0" loc="125:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104219540"/>
                <typename><typedef-ref name="message_t" ref="0x104218aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x10481f5c0" loc="125:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x103976790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x10481ea58" loc="112:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="102:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x103976790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x104821828" loc="89:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="77:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x103bf4780"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104219540"/>
                <typename><typedef-ref name="message_t" ref="0x104218aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x1048215b8" loc="89:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104219540"/>
                <typename><typedef-ref name="message_t" ref="0x104218aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x104820c10" loc="100:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="91:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104219540"/>
                <typename><typedef-ref name="message_t" ref="0x104218aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x103bf4780"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x104820668" loc="100:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104219540"/>
                <typename><typedef-ref name="message_t" ref="0x104218aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x104820990" loc="100:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x103bf4780"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioBackoff" loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
      <documentation loc="32:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <short>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.</short>
        <long>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.  &#10; &#10; This is because of fan-out issues with multiple components wanting to&#10; affect backoffs for whatever they're interested in:&#10; If you signal out an *event* to request an initial backoff and&#10; several components happen to be listening, then those components&#10; would be required to return a backoff value.  We don't want that&#10; behavior.&#10; With this strategy, components can listen for the requests and then&#10; decide if they want to affect the behavior.  If the component wants to&#10; affect the behavior, it calls back using the setXYZBackoff(..) command.&#10; If several components call back, then the last component to get its &#10; word in has the final say. &#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="requestCca" ref="0x1048929f8" loc="95:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="90:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on whether or not to use CCA on the outbound packet.</short>
          <long>&#10; Request for input on whether or not to use CCA on the outbound packet.&#10; Replies should come in the form of setCca(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104219540"/>
                <typename><typedef-ref name="message_t" ref="0x104218aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x104892788" loc="95:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104219540"/>
                <typename><typedef-ref name="message_t" ref="0x104218aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestInitialBackoff" ref="0x104895dd0" loc="81:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="76:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; </short>
          <long>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104219540"/>
                <typename><typedef-ref name="message_t" ref="0x104218aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x104895b60" loc="81:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104219540"/>
                <typename><typedef-ref name="message_t" ref="0x104218aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCongestionBackoff" ref="0x104896640" loc="66:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="62:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestCongestionBackoff event&#10; </short>
          <long>&#10; Must be called within a requestCongestionBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x103976b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x1048963d0" loc="66:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x103976b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInitialBackoff" ref="0x104897b60" loc="60:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestInitialBackoff event&#10; </short>
          <long>&#10; Must be called within a requestInitialBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x103976b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x1048978f0" loc="60:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x103976b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCca" ref="0x104895020" loc="73:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="68:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Enable CCA for the outbound packet.</short>
          <long>&#10; Enable CCA for the outbound packet.  Must be called within a requestCca&#10; event&#10; @param ccaOn TRUE to enable CCA, which is the default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x103bf01d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ccaOn" ref="0x104896d88" loc="73:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x103bf01d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestCongestionBackoff" ref="0x104893c30" loc="88:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="83:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; </short>
          <long>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104219540"/>
                <typename><typedef-ref name="message_t" ref="0x104218aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x1048939c0" loc="88:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104219540"/>
                <typename><typedef-ref name="message_t" ref="0x104218aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/SendNotifier.nc">
      <documentation loc="32:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x10488e2a0" loc="59:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/SendNotifier.nc">
        <documentation loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x1041d4b18"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104219540"/>
                <typename><typedef-ref name="message_t" ref="0x104218aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x104891b70" loc="59:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x1041d4b18"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x10488e020" loc="59:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104219540"/>
                <typename><typedef-ref name="message_t" ref="0x104218aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BulkSend" loc="1:../../tos/chips/cc2420/interfaces/BulkSend.nc">
      <function command="" provided="0" name="send" ref="0x104882690" loc="2:../../tos/chips/cc2420/interfaces/BulkSend.nc">
        <interfacedef-ref qname="BulkSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x103bf4780"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104219540"/>
                <typename><typedef-ref name="message_t" ref="0x104218aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x103976790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x104882100" loc="2:../../tos/chips/cc2420/interfaces/BulkSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104219540"/>
                <typename><typedef-ref name="message_t" ref="0x104218aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x104882410" loc="2:../../tos/chips/cc2420/interfaces/BulkSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x103976790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x104880020" loc="3:../../tos/chips/cc2420/interfaces/BulkSend.nc">
        <interfacedef-ref qname="BulkSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x103bf4780"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104219540"/>
                <typename><typedef-ref name="message_t" ref="0x104218aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x104882d50" loc="3:../../tos/chips/cc2420/interfaces/BulkSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104219540"/>
                <typename><typedef-ref name="message_t" ref="0x104218aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x104880c40" loc="4:../../tos/chips/cc2420/interfaces/BulkSend.nc">
        <interfacedef-ref qname="BulkSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104219540"/>
                <typename><typedef-ref name="message_t" ref="0x104218aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x103bf4780"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x1048806b0" loc="4:../../tos/chips/cc2420/interfaces/BulkSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:101" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104219540"/>
                <typename><typedef-ref name="message_t" ref="0x104218aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="err" ref="0x1048809c0" loc="4:../../tos/chips/cc2420/interfaces/BulkSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x103bf4780"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x1048bfdb8" loc="50:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x1041d4b18"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x1048bec48" loc="60:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x1048be558" loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x1041d4760"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x1048bf5d8" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x1041d4760"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x1041d4b18"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x1048bf020" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x1041d4760"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x1048bf358" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x1041d4b18"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioTimerUpdate" loc="1:../../tos/chips/cc2420/x-timer/RadioTimerUpdate.nc">
      <function event="" provided="0" name="startRadioTime" ref="0x1048e7ce8" loc="2:../../tos/chips/cc2420/x-timer/RadioTimerUpdate.nc">
        <interfacedef-ref qname="RadioTimerUpdate"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="counterUpdate" ref="0x1048e30b8" loc="4:../../tos/chips/cc2420/x-timer/RadioTimerUpdate.nc">
        <interfacedef-ref qname="RadioTimerUpdate"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x103977020"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x103976b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="count" ref="0x1048e4a78" loc="4:../../tos/chips/cc2420/x-timer/RadioTimerUpdate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x103977020"/></typename>
            </type-int>
          </variable>
          <variable name="factor" ref="0x1048e4db8" loc="4:../../tos/chips/cc2420/x-timer/RadioTimerUpdate.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x103976b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="triggerUpdate" ref="0x1048e43e0" loc="3:../../tos/chips/cc2420/x-timer/RadioTimerUpdate.nc">
        <interfacedef-ref qname="RadioTimerUpdate"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Random.nc">
      <documentation loc="34:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x104908cd8" loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Random.nc">
        <documentation loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x103976b20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x104908540" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Random.nc">
        <documentation loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x103977020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
      <documentation loc="36:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x104919ba0" loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x104919ba0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x10490f760" loc="136:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="132:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x103977020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x104913020" loc="83:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="80:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x104912cf0" loc="114:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="100:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x103977020"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x103977020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x104912758" loc="114:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x103977020"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x104912a70" loc="114:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x103977020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x104912020" loc="98:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="94:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x103bf01d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x10490e6b0" loc="151:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="146:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x103977020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x10490fe80" loc="144:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="138:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x103977020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x104913798" loc="92:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="86:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x103bf01d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x1049166b0" loc="64:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x103977020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x104916440" loc="64:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x103977020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x104911d28" loc="129:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="116:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x103977020"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x103977020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x104911790" loc="129:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x103977020"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x104911aa8" loc="129:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x103977020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x104914118" loc="73:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="66:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x103977020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x104916e80" loc="73:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x103977020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x1049148c0" loc="78:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="75:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x104992020" loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x104992020"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x104992250" loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x104992250"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x10498ebd8" loc="109:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x104992250"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x104990c88" loc="78:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x10498e2a0" loc="103:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x104992250"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x104992250"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x10498fbf0" loc="103:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x104992250"/></type-var>
          </variable>
          <variable name="dt" ref="0x10498e020" loc="103:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x104992250"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x10498f440" loc="88:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x103bf01d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x10498d3a0" loc="116:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x104992250"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x104992d10" loc="66:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x104992250"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x104992aa0" loc="66:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x104992250"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x104990538" loc="73:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Counter.nc">
      <documentation loc="36:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x1049f5a50" loc="57:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x1049f5a50"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x1049f5c80" loc="57:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x1049f5c80"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x1049f1548" loc="64:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="59:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x1049f5c80"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x1049f0590" loc="76:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="73:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x1049f1d60" loc="71:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="66:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x103bf01d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x1049f0c80" loc="82:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="78:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ParameterInit.nc">
      <documentation loc="34:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x104b32348" loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x104b32348"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x104b32df0" loc="64:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ParameterInit.nc">
        <documentation loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x103bf4780"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x104b32348"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x104b32b80" loc="64:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x104b32348"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
